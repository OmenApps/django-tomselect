{
  "version": 3,
  "sources": ["../../../../../node_modules/tom-select/src/contrib/microevent.ts", "../../../../../node_modules/tom-select/src/contrib/microplugin.ts", "../../../../../node_modules/tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/regex.js", "../../../../../node_modules/tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/strings.js", "../../../../../node_modules/tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/index.js", "../../../../../node_modules/tom-select/node_modules/@orchidjs/sifter/dist/esm/utils.js", "../../../../../node_modules/tom-select/node_modules/@orchidjs/sifter/dist/esm/sifter.js", "../../../../../node_modules/tom-select/node_modules/@orchidjs/sifter/lib/utils.ts", "../../../../../node_modules/tom-select/src/vanilla.ts", "../../../../../node_modules/tom-select/src/contrib/highlight.ts", "../../../../../node_modules/tom-select/src/constants.ts", "../../../../../node_modules/tom-select/src/defaults.ts", "../../../../../node_modules/tom-select/src/utils.ts", "../../../../../node_modules/tom-select/src/getSettings.ts", "../../../../../node_modules/tom-select/src/tom-select.ts", "../../../../../node_modules/@orchidjs/unicode-variants/lib/regex.mjs", "../../../../../node_modules/@orchidjs/unicode-variants/lib/strings.mjs", "../../../../../node_modules/@orchidjs/unicode-variants/lib/index.mjs", "../../../../../client/django-tomselect.js", "../../../../../node_modules/tom-select/src/utils.ts", "../../../../../node_modules/@orchidjs/sifter/lib/utils.ts", "../../../../../node_modules/tom-select/src/vanilla.ts", "../../../../../node_modules/tom-select/src/plugins/checkbox_options/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/clear_button/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/dropdown_header/plugin.ts", "../../../../../node_modules/tom-select/src/constants.ts", "../../../../../node_modules/tom-select/src/plugins/dropdown_input/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/remove_button/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/virtual_scroll/plugin.ts", "../../../../../client/plugins/dropdown_footer/plugin.ts"],
  "sourcesContent": ["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = this._events[event] || [];\n\t\t\tevent_array.push(fct);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1){\n\t\t\t\tdelete this._events[event];\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst event_array = this._events[event];\n\t\t\tif( event_array === undefined ) return;\n\n\t\t\tevent_array.splice(event_array.indexOf(fct), 1);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = self._events[event];\n\t\t\tif( event_array === undefined ) return;\n\t\t\tevent_array.forEach(fct => {\n\t\t\t\tfct.apply(self, args );\n\t\t\t});\n\n\t\t});\n\t}\n};\n", "/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\nexport type TPluginItem = {name:string,options:{}};\nexport type TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n", "/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {string[]} chars\n * @return {string}\n */\nconst arrayToPattern = chars => {\n  chars = chars.filter(Boolean);\n\n  if (chars.length < 2) {\n    return chars[0] || '';\n  }\n\n  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\n/**\n * @param {string[]} array\n * @return {string}\n */\n\nconst sequencePattern = array => {\n  if (!hasDuplicates(array)) {\n    return array.join('');\n  }\n\n  let pattern = '';\n  let prev_char_count = 0;\n\n  const prev_pattern = () => {\n    if (prev_char_count > 1) {\n      pattern += '{' + prev_char_count + '}';\n    }\n  };\n\n  array.forEach((char, i) => {\n    if (char === array[i - 1]) {\n      prev_char_count++;\n      return;\n    }\n\n    prev_pattern();\n    pattern += char;\n    prev_char_count = 1;\n  });\n  prev_pattern();\n  return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {Set<string>} chars\n * @return {string}\n */\n\nconst setToPattern = chars => {\n  let array = toArray(chars);\n  return arrayToPattern(array);\n};\n/**\n *\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n * @param {any[]} array\n */\n\nconst hasDuplicates = array => {\n  return new Set(array).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n * @param {string} str\n * @return {string}\n */\n\nconst escape_regex = str => {\n  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n * @param {string[]} array\n *\n */\n\nconst maxValueLength = array => {\n  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\n/**\n * @param {string} str\n */\n\nconst unicodeLength = str => {\n  return toArray(str).length;\n};\n/**\n * @param {any} p\n * @return {any[]}\n */\n\nconst toArray = p => Array.from(p);\n\nexport { arrayToPattern, escape_regex, hasDuplicates, maxValueLength, sequencePattern, setToPattern, toArray, unicodeLength };\n//# sourceMappingURL=regex.js.map\n", "/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n * @param {string} input\n * @return {string[][]}\n */\nconst allSubstrings = input => {\n  if (input.length === 1) return [[input]];\n  /** @type {string[][]} */\n\n  let result = [];\n  const start = input.substring(1);\n  const suba = allSubstrings(start);\n  suba.forEach(function (subresult) {\n    let tmp = subresult.slice(0);\n    tmp[0] = input.charAt(0) + tmp[0];\n    result.push(tmp);\n    tmp = subresult.slice(0);\n    tmp.unshift(input.charAt(0));\n    result.push(tmp);\n  });\n  return result;\n};\n\nexport { allSubstrings };\n//# sourceMappingURL=strings.js.map\n", "/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\nimport { toArray, setToPattern, escape_regex, arrayToPattern, sequencePattern } from './regex.js';\nexport { escape_regex } from './regex.js';\nimport { allSubstrings } from './strings.js';\n\n/**\n * @typedef {{[key:string]:string}} TUnicodeMap\n * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n * @typedef {[[number,number]]} TCodePoints\n * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n */\n/** @type {TCodePoints} */\n\nconst code_points = [[0, 65535]];\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n/** @type {TUnicodeMap} */\n\nlet unicode_map;\n/** @type {RegExp} */\n\nlet multi_char_reg;\nconst max_char_length = 3;\n/** @type {TUnicodeMap} */\n\nconst latin_convert = {};\n/** @type {TUnicodeMap} */\n\nconst latin_condensed = {\n  '/': '⁄∕',\n  '0': '߀',\n  \"a\": \"ⱥɐɑ\",\n  \"aa\": \"ꜳ\",\n  \"ae\": \"æǽǣ\",\n  \"ao\": \"ꜵ\",\n  \"au\": \"ꜷ\",\n  \"av\": \"ꜹꜻ\",\n  \"ay\": \"ꜽ\",\n  \"b\": \"ƀɓƃ\",\n  \"c\": \"ꜿƈȼↄ\",\n  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n  \"e\": \"ɛǝᴇɇ\",\n  \"f\": \"ꝼƒ\",\n  \"g\": \"ǥɠꞡᵹꝿɢ\",\n  \"h\": \"ħⱨⱶɥ\",\n  \"i\": \"ɨı\",\n  \"j\": \"ɉȷ\",\n  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n  \"m\": \"ɱɯϻ\",\n  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n  \"o\": \"øǿɔɵꝋꝍᴑ\",\n  \"oe\": \"œ\",\n  \"oi\": \"ƣ\",\n  \"oo\": \"ꝏ\",\n  \"ou\": \"ȣ\",\n  \"p\": \"ƥᵽꝑꝓꝕρ\",\n  \"q\": \"ꝗꝙɋ\",\n  \"r\": \"ɍɽꝛꞧꞃ\",\n  \"s\": \"ßȿꞩꞅʂ\",\n  \"t\": \"ŧƭʈⱦꞇ\",\n  \"th\": \"þ\",\n  \"tz\": \"ꜩ\",\n  \"u\": \"ʉ\",\n  \"v\": \"ʋꝟʌ\",\n  \"vy\": \"ꝡ\",\n  \"w\": \"ⱳ\",\n  \"y\": \"ƴɏỿ\",\n  \"z\": \"ƶȥɀⱬꝣ\",\n  \"hv\": \"ƕ\"\n};\n\nfor (let latin in latin_condensed) {\n  let unicode = latin_condensed[latin] || '';\n\n  for (let i = 0; i < unicode.length; i++) {\n    let char = unicode.substring(i, i + 1);\n    latin_convert[char] = latin;\n  }\n}\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n/**\n * Initialize the unicode_map from the give code point ranges\n *\n * @param {TCodePoints=} _code_points\n */\n\nconst initialize = _code_points => {\n  if (unicode_map !== undefined) return;\n  unicode_map = generateMap(_code_points || code_points);\n};\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n * @param {string} str\n * @param {string} form\n */\n\nconst normalize = (str, form = 'NFKD') => str.normalize(form);\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n * @param {string} str\n * @return {string}\n */\n\nconst asciifold = str => {\n  return toArray(str).reduce(\n  /**\n   * @param {string} result\n   * @param {string} char\n   */\n  (result, char) => {\n    return result + _asciifold(char);\n  }, '');\n};\n/**\n * @param {string} str\n * @return {string}\n */\n\nconst _asciifold = str => {\n  str = normalize(str).toLowerCase().replace(convert_pat, (\n  /** @type {string} */\n  char) => {\n    return latin_convert[char] || '';\n  }); //return str;\n\n  return normalize(str, 'NFC');\n};\n/**\n * Generate a list of unicode variants from the list of code points\n * @param {TCodePoints} code_points\n * @yield {TCodePointObj}\n */\n\nfunction* generator(code_points) {\n  for (const [code_point_min, code_point_max] of code_points) {\n    for (let i = code_point_min; i <= code_point_max; i++) {\n      let composed = String.fromCharCode(i);\n      let folded = asciifold(composed);\n\n      if (folded == composed.toLowerCase()) {\n        continue;\n      } // skip when folded is a string longer than 3 characters long\n      // bc the resulting regex patterns will be long\n      // eg:\n      // folded صلى الله عليه وسلم length 18 code point 65018\n      // folded جل جلاله length 8 code point 65019\n\n\n      if (folded.length > max_char_length) {\n        continue;\n      }\n\n      if (folded.length == 0) {\n        continue;\n      }\n\n      yield {\n        folded: folded,\n        composed: composed,\n        code_point: i\n      };\n    }\n  }\n}\n/**\n * Generate a unicode map from the list of code points\n * @param {TCodePoints} code_points\n * @return {TUnicodeSets}\n */\n\nconst generateSets = code_points => {\n  /** @type {{[key:string]:Set<string>}} */\n  const unicode_sets = {};\n  /**\n   * @param {string} folded\n   * @param {string} to_add\n   */\n\n  const addMatching = (folded, to_add) => {\n    /** @type {Set<string>} */\n    const folded_set = unicode_sets[folded] || new Set();\n    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n    if (to_add.match(patt)) {\n      return;\n    }\n\n    folded_set.add(escape_regex(to_add));\n    unicode_sets[folded] = folded_set;\n  };\n\n  for (let value of generator(code_points)) {\n    addMatching(value.folded, value.folded);\n    addMatching(value.folded, value.composed);\n  }\n\n  return unicode_sets;\n};\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n *\n * @param {TCodePoints} code_points\n * @return {TUnicodeMap}\n */\n\nconst generateMap = code_points => {\n  /** @type {TUnicodeSets} */\n  const unicode_sets = generateSets(code_points);\n  /** @type {TUnicodeMap} */\n\n  const unicode_map = {};\n  /** @type {string[]} */\n\n  let multi_char = [];\n\n  for (let folded in unicode_sets) {\n    let set = unicode_sets[folded];\n\n    if (set) {\n      unicode_map[folded] = setToPattern(set);\n    }\n\n    if (folded.length > 1) {\n      multi_char.push(escape_regex(folded));\n    }\n  }\n\n  multi_char.sort((a, b) => b.length - a.length);\n  const multi_char_patt = arrayToPattern(multi_char);\n  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n  return unicode_map;\n};\n/**\n * Map each element of an array from it's folded value to all possible unicode matches\n * @param {string[]} strings\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst mapSequence = (strings, min_replacement = 1) => {\n  let chars_replaced = 0;\n  strings = strings.map(str => {\n    if (unicode_map[str]) {\n      chars_replaced += str.length;\n    }\n\n    return unicode_map[str] || str;\n  });\n\n  if (chars_replaced >= min_replacement) {\n    return sequencePattern(strings);\n  }\n\n  return '';\n};\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n *\n *\n * @param {string} str\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst substringsToPattern = (str, min_replacement = 1) => {\n  min_replacement = Math.max(min_replacement, str.length - 1);\n  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n    return mapSequence(sub_pat, min_replacement);\n  }));\n};\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n *\n * @param {Sequence[]} sequences\n * @param {boolean} all\n */\n\nconst sequencesToPattern = (sequences, all = true) => {\n  let min_replacement = sequences.length > 1 ? 1 : 0;\n  return arrayToPattern(sequences.map(sequence => {\n    let seq = [];\n    const len = all ? sequence.length() : sequence.length() - 1;\n\n    for (let j = 0; j < len; j++) {\n      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n    }\n\n    return sequencePattern(seq);\n  }));\n};\n/**\n * Return true if the sequence is already in the sequences\n * @param {Sequence} needle_seq\n * @param {Sequence[]} sequences\n */\n\n\nconst inSequences = (needle_seq, sequences) => {\n  for (const seq of sequences) {\n    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n      continue;\n    }\n\n    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n      continue;\n    }\n\n    let needle_parts = needle_seq.parts;\n    /**\n     * @param {TSequencePart} part\n     */\n\n    const filter = part => {\n      for (const needle_part of needle_parts) {\n        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n          return false;\n        }\n\n        if (part.length == 1 || needle_part.length == 1) {\n          continue;\n        } // check for overlapping parts\n        // a = ['::=','==']\n        // b = ['::','===']\n        // a = ['r','sm']\n        // b = ['rs','m']\n\n\n        if (part.start < needle_part.start && part.end > needle_part.start) {\n          return true;\n        }\n\n        if (needle_part.start < part.start && needle_part.end > part.start) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    let filtered = seq.parts.filter(filter);\n\n    if (filtered.length > 0) {\n      continue;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nclass Sequence {\n  constructor() {\n    /** @type {TSequencePart[]} */\n    this.parts = [];\n    /** @type {string[]} */\n\n    this.substrs = [];\n    this.start = 0;\n    this.end = 0;\n  }\n  /**\n   * @param {TSequencePart|undefined} part\n   */\n\n\n  add(part) {\n    if (part) {\n      this.parts.push(part);\n      this.substrs.push(part.substr);\n      this.start = Math.min(part.start, this.start);\n      this.end = Math.max(part.end, this.end);\n    }\n  }\n\n  last() {\n    return this.parts[this.parts.length - 1];\n  }\n\n  length() {\n    return this.parts.length;\n  }\n  /**\n   * @param {number} position\n   * @param {TSequencePart} last_piece\n   */\n\n\n  clone(position, last_piece) {\n    let clone = new Sequence();\n    let parts = JSON.parse(JSON.stringify(this.parts));\n    let last_part = parts.pop();\n\n    for (const part of parts) {\n      clone.add(part);\n    }\n\n    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n    let clone_last_len = last_substr.length;\n    clone.add({\n      start: last_part.start,\n      end: last_part.start + clone_last_len,\n      length: clone_last_len,\n      substr: last_substr\n    });\n    return clone;\n  }\n\n}\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n *\n * @param {string} str\n * @return {string|undefined}\n */\n\n\nconst getPattern = str => {\n  initialize();\n  str = asciifold(str);\n  let pattern = '';\n  let sequences = [new Sequence()];\n\n  for (let i = 0; i < str.length; i++) {\n    let substr = str.substring(i);\n    let match = substr.match(multi_char_reg);\n    const char = str.substring(i, i + 1);\n    const match_str = match ? match[0] : null; // loop through sequences\n    // add either the char or multi_match\n\n    let overlapping = [];\n    let added_types = new Set();\n\n    for (const sequence of sequences) {\n      const last_piece = sequence.last();\n\n      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n        // if we have a multi match\n        if (match_str) {\n          const len = match_str.length;\n          sequence.add({\n            start: i,\n            end: i + len,\n            length: len,\n            substr: match_str\n          });\n          added_types.add('1');\n        } else {\n          sequence.add({\n            start: i,\n            end: i + 1,\n            length: 1,\n            substr: char\n          });\n          added_types.add('2');\n        }\n      } else if (match_str) {\n        let clone = sequence.clone(i, last_piece);\n        const len = match_str.length;\n        clone.add({\n          start: i,\n          end: i + len,\n          length: len,\n          substr: match_str\n        });\n        overlapping.push(clone);\n      } else {\n        // don't add char\n        // adding would create invalid patterns: 234 => [2,34,4]\n        added_types.add('3');\n      }\n    } // if we have overlapping\n\n\n    if (overlapping.length > 0) {\n      // ['ii','iii'] before ['i','i','iii']\n      overlapping = overlapping.sort((a, b) => {\n        return a.length() - b.length();\n      });\n\n      for (let clone of overlapping) {\n        // don't add if we already have an equivalent sequence\n        if (inSequences(clone, sequences)) {\n          continue;\n        }\n\n        sequences.push(clone);\n      }\n\n      continue;\n    } // if we haven't done anything unique\n    // clean up the patterns\n    // helps keep patterns smaller\n    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n      pattern += sequencesToPattern(sequences, false);\n      let new_seq = new Sequence();\n      const old_seq = sequences[0];\n\n      if (old_seq) {\n        new_seq.add(old_seq.last());\n      }\n\n      sequences = [new_seq];\n    }\n  }\n\n  pattern += sequencesToPattern(sequences, true);\n  return pattern;\n};\n\nexport { _asciifold, asciifold, code_points, generateMap, generateSets, generator, getPattern, initialize, mapSequence, normalize, substringsToPattern, unicode_map };\n//# sourceMappingURL=index.js.map\n", "/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { asciifold } from '@orchidjs/unicode-variants';\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nconst getAttr = (obj, name) => {\n  if (!obj) return;\n  return obj[name];\n};\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nconst getAttrNesting = (obj, name) => {\n  if (!obj) return;\n  var part,\n      names = name.split(\".\");\n\n  while ((part = names.shift()) && (obj = obj[part]));\n\n  return obj;\n};\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\n\nconst scoreValue = (value, token, weight) => {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  if (token.regex == null) return 0;\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n};\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nconst propToArray = (obj, key) => {\n  var value = obj[key];\n  if (typeof value == 'function') return value;\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\n\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\nconst cmp = (a, b) => {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n};\n\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue };\n//# sourceMappingURL=utils.js.map\n", "/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { iterate, cmp, propToArray, getAttrNesting, getAttr, scoreValue } from './utils.js';\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue } from './utils.js';\nimport { escape_regex, getPattern } from '@orchidjs/unicode-variants';\nexport { getPattern } from '@orchidjs/unicode-variants';\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nclass Sifter {\n  // []|{};\n\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        if (this.settings.diacritics) {\n          regex = getPattern(word) || null;\n        } else {\n          regex = escape_regex(word);\n        }\n\n        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex ? new RegExp(regex, 'iu') : null,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {T.ScoreFn}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n  /**\n   * @returns {T.ScoreFn}\n   *\n   */\n\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var score,\n            sum = 0;\n\n        for (let token of tokens) {\n          score = scoreObject(token, data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var implicit_score,\n        sort_flds = [];\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n    if (typeof sort == 'function') {\n      return sort.bind(this);\n    }\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     */\n\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (let s of sort) {\n        if (search.query || s.field !== '$score') {\n          sort_flds.push(s);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (let fld of sort_flds) {\n        if (fld.field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      } // without a search.query, all items will have the same score\n\n    } else {\n      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n    } // build function\n\n\n    const sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    }\n\n    return function (a, b) {\n      var result, field;\n\n      for (let sort_fld of sort_flds) {\n        field = sort_fld.field;\n        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n        if (result) return result;\n      }\n\n      return 0;\n    };\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n      const fields = [];\n      options.fields.forEach(field => {\n        if (typeof field == 'string') {\n          field = {\n            field: field,\n            weight: 1\n          };\n        }\n\n        fields.push(field);\n        weights[field.field] = 'weight' in field ? field.weight : 1;\n      });\n      options.fields = fields;\n    }\n\n    return {\n      options: options,\n      query: query.toLowerCase().trim(),\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n    if (query.length) {\n      iterate(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate(self.items, (_, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    const fn_sort = self._getSortFunction(search);\n\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\nexport { Sifter };\n//# sourceMappingURL=sifter.js.map\n", "\nimport { asciifold } from '@orchidjs/unicode-variants';\nimport * as T from './types';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tif( token.regex == null ) return 0;\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\n\tif( typeof value == 'function' ) return value;\n\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n", "\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( isHtmlString(query) ){\n\t\tvar tpl = document.createElement('template');\n\t\ttpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn tpl.content.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const isHtmlString = (arg:any): boolean => {\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n", "/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0]!.length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tArray.from(node.childNodes).forEach(element => {\n\t\t\t\thighlightRecursive(element);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n", "export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n", "\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\t//closeAfterSelect: false,\n\trefreshThrottle: 300,\n\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-wrapper',\n\tcontrolClass: 'ts-control',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\n\tcopyClassesToDropdown: false,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n", "\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string|number):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string|number):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * use setTimeout if timeout > 0 \n */\nexport const timeout = (fn:()=>void,timeout:number) => {\n\tif( timeout > 0 ){\n\t\treturn setTimeout(fn,timeout);\n\t}\n\n\tfn.call(null);\n\treturn null;\n}\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n * Note: \"selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password\"\n * \t- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Add event helper\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n", "import defaults from './defaults';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings, RecursivePartial } from './types/index';\nimport { iterate } from '@orchidjs/sifter/lib/utils';\nimport { TomInput } from './types/index';\n\n\nexport default function getSettings( input:TomInput, settings_user:RecursivePartial<TomSettings>):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\t\tlet $order = 0;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\t\t\t\toption_data.$order\t\t\t= option_data.$order || ++$order;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id:string, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\toptgroup_data.$order\t\t\t\t\t= optgroup_data.$order || ++$order;\n\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\titerate(optgroup.children, (option)=>{\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t});\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\titerate(input.children,(child)=>{\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t});\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\titerate( values, (value) => {\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t});\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\titerate( settings_element.options, (opt) => {\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n", "\nimport MicroEvent from './contrib/microevent';\nimport MicroPlugin from './contrib/microplugin';\nimport { Sifter, iterate } from '@orchidjs/sifter';\nimport { escape_regex } from '@orchidjs/unicode-variants';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames, TomClearFilter, RecursivePartial } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight';\nimport * as constants from './constants';\nimport getSettings from './getSettings';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\ttimeout,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tisHtmlString,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\tpublic focus_node\t\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t!: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isReadOnly\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\n\tpublic isValid\t\t\t\t\t: boolean = true;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreHover\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\n\tprivate refreshTimeout\t\t\t: null|ReturnType<typeof setTimeout> = null;\n\n\n\tconstructor( input_arg: string|TomInput, user_settings:RecursivePartial<TomSettings> ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\n\t\tthis.settings\t\t\t= settings;\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// option-dependent defaults\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof settings.hideSelected !== 'boolean') {\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tsettings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tsettings.createFilter = (value) => {\n\t\t\t\t\treturn this.settings.duplicates || !this.options[value];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t// Create all elements\n\t\tconst wrapper\t\t\t= getDom('<div>');\n\t\tconst control\t\t\t= getDom('<div>');\n\t\tconst dropdown\t\t\t= this._render('dropdown');\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\n\t\tconst inputMode\t\t\t= settings.mode;\n\n\t\tvar control_input: HTMLInputElement;\n\n\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\taddClasses(control,settings.controlClass);\n\t\tappend( wrapper, control );\n\n\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\t\tif( settings.copyClassesToDropdown ){\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\n\t\t// default controlInput\n\t\tif( isHtmlString(settings.controlInput) ){\n\t\t\tcontrol_input\t\t= getDom(settings.controlInput ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete','spellcheck'];\n\t\t\titerate(attrs,(attr:string) => {\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcontrol_input.tabIndex = -1;\n\t\t\tcontrol.appendChild( control_input );\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t// dom element\n\t\t}else if( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control;\n\t\t}\n\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\t\tthis.control \t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\n\t\tthis.setup();\n\t}\n\n\t/**\n\t * set up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\t\tconst self = this;\n\t\tconst settings\t\t\t\t= self.settings;\n\t\tconst control_input\t\t\t= self.control_input;\n\t\tconst dropdown\t\t\t\t= self.dropdown;\n\t\tconst dropdown_content\t\t= self.dropdown_content;\n\t\tconst wrapper\t\t\t\t= self.wrapper;\n\t\tconst control\t\t\t\t= self.control;\n\t\tconst input\t\t\t\t\t= self.input;\n\t\tconst focus_node\t\t\t= self.focus_node;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\n\n\n\t\tsetAttr(dropdown_content,{\n\t\t\tid: listboxId\n\t\t});\n\n\t\tsetAttr(focus_node,{\n\t\t\trole:'combobox',\n\t\t\t'aria-haspopup':'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tconst label\t\t\t= document.querySelector(query);\n\t\tconst label_click\t= self.focus.bind(self);\n\t\tif( label ){\n\t\t\taddEvent(label,'click', label_click );\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!settings.splitOn && settings.delimiter) {\n\t\t\tsettings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( settings.load && settings.loadThrottle ){\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\n\t\t}\n\n\t\taddEvent(dropdown,'mousemove', () => {\n\t\t\tself.ignoreHover = false;\n\t\t});\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ) self.onOptionHover( e as MouseEvent, target_match );\n\n\t\t}, {capture:true});\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// keydown on focus_node for arrow_down/arrow_up\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\n\t\t// keypress and input/keyup\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t// Fixes bug #212 which is no covered by tests\n\t\t\tif( target == control_input && self.isOpen ){\n\t\t\t\tevt.stopPropagation();\n\n\t\t\t// clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t\t\t}else{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\n\t\t};\n\n\t\tconst win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('scroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t\tif( label ) label.removeEventListener('click',label_click);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\t\tself.sync(false);\n\t\tsettings.items = [];\n\t\tdelete settings.optgroups;\n\t\tdelete settings.options;\n\n\t\taddEvent(input,'invalid', () => {\n\t\t\tif( self.isValid ){\n\t\t\t\tself.isValid = false;\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}else if( input.readOnly ){\n\t\t\tself.setReadOnly(true);\n\t\t}else{\n\t\t\tself.enable(); //sets tabIndex\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.preload();\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tthis.addOptions(options);\n\n\n\t\t// build optgroup table\n\t\titerate( optgroups, (optgroup:TomOption) => {\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t});\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Sync the Tom Select instance with the original input or select\n\t *\n\t */\n\tsync(get_settings:boolean=true):void{\n\t\tconst self\t\t= this;\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as RecursivePartial<TomSettings> ) : self.settings;\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\n\t\tself.setValue(settings.items||[],true); // silent prevents recursion\n\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isInputHidden || self.isLocked ){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif( !self.settings.splitOn ){\n\t\t\treturn;\n\t\t}\n\n\t\t// Wait for pasted text to be recognized in value\n\t\tsetTimeout(() => {\n\t\t\tvar pastedText = self.inputValue();\n\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\titerate( splitInput, (piece:string) => {\n\n\t\t\t\tconst hash = hash_key(piece);\n\t\t\t\tif( hash ){\n\t\t\t\t\tif( this.options[piece] ){\n\t\t\t\t\t\tself.addItem(piece);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tself.createItem(piece);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, 0);\n\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tself.ignoreHover = true;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tif( self.control_input.value == '' ){\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// don't submit form when searching for a value\n\t\t\t\t}else if( document.activeElement == self.control_input && self.isOpen ){\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonInput(e:MouseEvent|KeyboardEvent):void {\n\t\t\n\t\tif( this.isLocked ){\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.inputValue();\n\t\tif( this.lastValue === value ) return;\n\t\tthis.lastValue = value;\n\t\t\n\t\tif( value == '' ){\n\t\t\tthis._onInput();\n\t\t\treturn;\n\t\t}\n\n\t\tif( this.refreshTimeout ){\n\t\t\tclearTimeout(this.refreshTimeout);\n\t\t}\n\n\t\tthis.refreshTimeout = timeout(()=> {\n\t\t\tthis.refreshTimeout = null;\n\t\t\tthis._onInput();\n\t\t}, this.settings.refreshThrottle);\n\t}\n\n\t_onInput():void {\n\t\tconst value = this.lastValue;\n\n\t\tif( this.settings.shouldLoad.call(this,value) ){\n\t\t\tthis.load(value);\n\t\t}\n\n\t\tthis.refreshOptions();\n\t\tthis.trigger('type', value);\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ):void{\n\t\tif( this.ignoreHover ) return;\n\t\tthis.setActiveOption(option, false);\n\t}\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif( self.isDisabled || self.isReadOnly ){\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif( self.settings.preload === 'focus' ) self.preload();\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.inputState();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e?:FocusEvent):void {\n\n\t\tif( document.hasFocus() === false ) return;\n\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return true if the given option can be selected\n\t *\n\t */\n\tcanSelect(option:HTMLElement|null):boolean{\n\n\t\tif( this.isOpen && option && this.dropdown_content.contains(option) ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\tpreload():void{\n\t\tvar classList = this.wrapper.classList;\n\t\tif( classList.contains('preloaded') ) return;\n\t\tclassList.add('preloaded');\n\t\tthis.load('');\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.inputState();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.inputState();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement,scroll:boolean=true ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tif( scroll ) this.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\t\tconst self = this;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\tconst activeItems = self.controlChildren();\n\n\t\tif( !activeItems.length ) return;\n\n\t\tself.inputState();\n\t\tself.close();\n\n\t\tself.activeItems = activeItems;\n\t\titerate( activeItems, (item:TomItem) => {\n\t\t\tself.setActiveItemClass(item);\n\t\t});\n\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( !self.control.contains(self.control_input) ) return;\n\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\n\t\t}else{\n\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\n\t\t\t}\n\t\t\tself.isInputHidden = false;\n\t\t}\n\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif( self.isDisabled || self.isReadOnly) return;\n\n\t\tself.ignoreFocus = true;\n\n\t\tif( self.control_input.offsetWidth ){\n\t\t\tself.control_input.focus();\n\t\t}else{\n\t\t\tself.focus_node.focus();\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.focus_node.blur();\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tresult.items = result.items.filter((item) => {\n\t\t\t\tlet hashed = hash_key(item.id);\n\t\t\t\treturn !(hashed && self.items.indexOf(hashed) !== -1 );\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_group;\n\t\tvar create;\n\n\t\ttype Group = {fragment:DocumentFragment,order:number,optgroup:string}\n\t\tconst groups: {[key:string]:number} = {};\n\t\tconst groups_order:Group[]\t= [];\n\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tconst same_query\t\t\t= query === self.lastQuery || (query == '' && self.lastQuery == null);\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option:HTMLElement|null = null;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\n\t\tif( same_query ){\n\t\t\tactive_option\t\t\t= self.activeOption;\n\n\t\t\tif( active_option ){\n\t\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t\t}\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// get fragment for group and the position of the group in group_order\n\t\tconst getGroupFragment = (optgroup:string,order:number):[number,DocumentFragment] => {\n\n\t\t\tlet group_order_i = groups[optgroup];\n\n\t\t\tif( group_order_i !== undefined ){\n\t\t\t\tlet order_group = groups_order[group_order_i];\n\t\t\t\tif( order_group !== undefined ){\n\t\t\t\t\treturn [group_order_i,order_group.fragment];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet group_fragment = document.createDocumentFragment();\n\t\t\tgroup_order_i = groups_order.length;\n\t\t\tgroups_order.push({fragment:group_fragment,order,optgroup});\n\n\t\t\treturn [group_order_i,group_fragment]\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet item\t\t\t= results.items[i];\n\t\t\tif( !item ) continue;\n\n\t\t\tlet opt_value\t\t= item.id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\n\t\t\tif( option === undefined ) continue;\n\n\t\t\tlet opt_hash\t\t= get_hash(opt_value);\n\t\t\tlet option_el\t\t= self.getOption(opt_hash,true) as HTMLElement;\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_hash) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\t\t\t\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\n\t\t\t\tlet order = option.$order;\n\t\t\t\tlet self_optgroup = self.optgroups[optgroup];\n\t\t\t\tif( self_optgroup === undefined ){\t\t\t\t\t\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}else{\n\t\t\t\t\torder = self_optgroup.$order;\n\t\t\t\t}\n\n\t\t\t\tconst [group_order_i,group_fragment] = getGroupFragment(optgroup,order);\n\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\n\n\t\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\t\tif( self.activeOption && self.activeOption.dataset.value == opt_value ){\n\t\t\t\t\t\tif( active_group && active_group.dataset.group === optgroup.toString() ){\n\t\t\t\t\t\t\tactive_option = option_el;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t\tgroup_fragment.appendChild(option_el);\n\t\t\t\tif( optgroup != '' ){\n\t\t\t\t\tgroups[optgroup] = group_order_i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif( self.settings.lockOptgroupOrder ){\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\treturn a.order - b.order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\titerate( groups_order, (group_order:Group) => {\n\n\t\t\tlet group_fragment = group_order.fragment;\n\t\t\tlet optgroup = group_order.optgroup\n\n\t\t\tif( !group_fragment || !group_fragment.children.length ) return;\n\n\t\t\tlet group_heading = self.optgroups[optgroup];\n\n\t\t\tif( group_heading !== undefined ){\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', group_heading);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, group_fragment );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:group_heading,options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, group_fragment );\n\t\t\t}\n\t\t});\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\titerate( results.tokens, (tok) => {\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\n\t\t// add loading message\n\t\tif( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// invalid query\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !active_option && self.settings.mode === 'single' && self.items[0] != undefined ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption( data:TomOption, user_created = false ):false|string {\n\t\tconst self = this;\n\n\t\t// @deprecated 1.7.7\n\t\t// use addOptions( array, user_created ) for adding multiple options\n\t\tif( Array.isArray(data) ){\n\t\t\tself.addOptions( data, user_created);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = hash_key(data[self.settings.valueField]);\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\n\t\tself.options[key]\t= data;\n\t\tself.lastQuery\t\t= null;\n\n\t\tif( user_created ){\n\t\t\tself.userOptions[key] = user_created;\n\t\t\tself.trigger('option_add', key, data);\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t/**\n\t * Add multiple options\n\t *\n\t */\n\taddOptions( data:TomOption[], user_created = false ):void{\n\t\titerate( data, (dat:TomOption) => {\n\t\t\tthis.addOption(dat, user_created);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.7.7\n\t */\n\tregisterOption( data:TomOption ):false|string {\n\t\treturn this.addOption(data);\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst value_old\t\t= hash_key(value);\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif( value_old === null ) return;\n\n\t\tconst data_old\t\t= self.options[value_old];\n\n\t\tif( data_old == undefined ) return;\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\n\n\n\t\tconst option\t\t= self.getOption(value_old);\n\t\tconst item\t\t\t= self.getItem(value_old);\n\n\n\t\tdata.$order = data.$order || data_old.$order;\n\t\tdelete self.options[value_old];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(value_old);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions(filter?:TomClearFilter ) {\n\n\t\tconst boundFilter = (filter || this.clearFilter).bind(this);\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\n\t\tconst selected:TomOptions\t= {};\n\t\titerate(this.options,(option:TomOption,key:string)=>{\n\t\t\tif( boundFilter(option,key as string) ){\n\t\t\t\tselected[key] = option;\n\t\t\t}\n\t\t});\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Used by clearOptions() to decide whether or not an option should be removed\n\t * Return true to keep an option, false to remove\n\t *\n\t */\n\tclearFilter(option:TomOption,value:string){\n\t\tif( this.items.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:undefined|null|boolean|string|number, create:boolean=false):null|HTMLElement {\n\n\t\tconst hashed = hash_key(value);\n\t\tif( hashed === null ) return null;\n\n\t\tconst option = this.options[hashed];\n\t\tif( option != undefined ){\n\n\t\t\tif( option.$div ){\n\t\t\t\treturn option.$div;\n\t\t\t}\n\n\t\t\tif( create ){\n\t\t\t\treturn this._render('option', option);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tconst last_item = items[items.length - 1];\n\t\titems.forEach(item => {\n\t\t\tself.isPending = (item !== last_item);\n\t\t\tself.addItem(item, silent);\n\t\t});\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change','dropdown_close'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending && !self.settings.closeAfterSelect ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.inputState();\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, callback:TomCreateCallback = ()=>{} ):boolean{\n\n\t\t// triggerDropdown parameter @deprecated 2.1.1\n\t\tif( arguments.length === 3 ){\n\t\t\tcallback = arguments[2];\n\t\t}\n\t\tif( typeof callback != 'function' ){\n\t\t\tcallback = () => {};\n\t\t}\n\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data,true);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tconst self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tconst isFull\t= self.isFull();\n\t\tconst isLocked\t= self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\n\t\tconst wrap_classList = self.wrapper.classList;\n\n\t\twrap_classList.toggle('focus', self.isFocused)\n\t\twrap_classList.toggle('disabled', self.isDisabled)\n\t\twrap_classList.toggle('readonly', self.isReadOnly)\n\t\twrap_classList.toggle('required', self.isRequired)\n\t\twrap_classList.toggle('invalid', !self.isValid)\n\t\twrap_classList.toggle('locked', isLocked)\n\t\twrap_classList.toggle('full', isFull)\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.validity ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.isValid = self.input.validity.valid;\n\t\tself.isInvalid = !self.isValid;\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar option, label;\n\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\t\t\tconst has_selected:number\t\t\t\t= self.input.querySelectorAll('option:checked').length;\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\t// don't move empty option from top of list\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t\t\t\tif( option_el != empty_option ){\n\t\t\t\t\tself.input.append(option_el);\n\t\t\t\t}\n\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\t// marking empty option as selected can break validation\n\t\t\t\t// fixes https://github.com/orchidjs/tom-select/issues/303\n\t\t\t\tif( option_el != empty_option || has_selected > 0 ){\n\t\t\t\t\toption_el.selected = true;\n\t\t\t\t}\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\n\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tself.items.forEach((value)=>{\n\t\t\t\t\toption\t\t\t= self.options[value]!;\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.inputState();\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\titerate(items,(item:TomItem)=>{\n\t\t\tself.removeItem(item,true);\n\t\t});\n\n\t\tself.inputState();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tconst self\t\t= this;\n\t\tconst caret\t\t= self.caretPos;\n\t\tconst target\t= self.control;\n\n\t\ttarget.insertBefore(el, target.children[caret] || null);\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\titerate(self.activeItems, (item:TomItem) => rm_items.push(item) );\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tlet rm_item;\n\t\t\tif( direction < 0 && selection.start === 0 && selection.length === 0 ){\n\t\t\t\trm_item = items[self.caretPos - 1];\n\n\t\t\t}else if( direction > 0 && selection.start === self.inputValue().length ){\n\t\t\t\trm_item = items[self.caretPos];\n\t\t\t}\n\n\t\t\tif( rm_item !== undefined ){\n\t\t\t\trm_items.push( rm_item );\n\t\t\t}\n\t\t}\n\n\t\tif( !self.shouldDelete(rm_items,e) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.inputState();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Return true if the items should be deleted\n\t */\n\tshouldDelete(items:TomItem[],evt:MouseEvent|KeyboardEvent){\n\n\t\tconst values = items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif( !values.length || (typeof this.settings.onDelete === 'function' && this.settings.onDelete(values,evt) === false) ){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else{\n\t\t\tself.moveCaret(direction);\n\t\t}\n\t}\n\n\tmoveCaret(direction:number){}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tthis.caretPos = this.items.length;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.setLocked(true);\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.setLocked(false);\n\t}\n\n\t/**\n\t * Disable or enable user input on the control\n\t */\n\tsetLocked( lock:boolean = this.isReadOnly || this.isDisabled ){\n\t\tthis.isLocked = lock;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tthis.setDisabled(true);\n\t\tthis.close();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tthis.setDisabled(false);\n\t}\n\n\tsetDisabled(disabled:boolean){\n\t\tthis.focus_node.tabIndex\t\t= disabled ? -1 : this.tabIndex;\n\t\tthis.isDisabled\t\t\t\t\t= disabled;\n\t\tthis.input.disabled\t\t\t\t= disabled;\n\t\tthis.control_input.disabled\t\t= disabled;\n\t\tthis.setLocked();\n\t}\n\n\tsetReadOnly(isReadOnly:boolean){\n\t\tthis.isReadOnly\t\t\t\t\t= isReadOnly;\n\t\tthis.input.readOnly\t\t\t\t= isReadOnly;\n\t\tthis.control_input.readOnly\t\t= isReadOnly;\n\t\tthis.setLocked();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\t\tvar id, html;\n\t\tconst self = this;\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn null;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tconst value\t= get_hash(data[self.settings.valueField]);\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\n\t\t\t\t// update cache\n\t\t\t\tdata.$div = html;\n\t\t\t\tself.options[value] = data;\n\t\t\t}\n\n\n\t\t}\n\n\t\treturn html;\n\n\t}\n\n\n\t/**\n\t * Type guarded rendering\n\t *\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tconst html = this.render(templateName, data);\n\n\t\tif( html == null ){\n\t\t\tthrow 'HTMLElement expected';\n\t\t}\n\t\treturn html;\n\t}\n\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache():void{\n\n\t\titerate(this.options, (option:TomOption)=>{\n\t\t\tif( option.$div ){\n\t\t\t\toption.$div.remove();\n\t\t\t\tdelete option.$div;\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string){\n\n\t\tconst option_el\t\t\t= this.getOption(value);\n\t\tif( option_el ) option_el.remove();\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n", "\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {string[]} chars\n * @return {string}\n */\nexport const arrayToPattern = (chars) =>{\n\n\tchars = chars.filter( Boolean );\n\n\tif( chars.length < 2 ){\n\t\treturn chars[0] || '';\n\t}\n\n\treturn (maxValueLength(chars) == 1) ? '['+chars.join('')+']' : '(?:'+chars.join('|')+')';\n};\n\n/**\n * @param {string[]} array\n * @return {string}\n */\nexport const sequencePattern = (array)=>{\n\n\tif( !hasDuplicates(array) ){\n\t\treturn array.join('');\n\t}\n\n\tlet pattern = '';\n\tlet prev_char_count = 0;\n\n\tconst prev_pattern = ()=>{\n\t\tif( prev_char_count > 1 ){\n\t\t\tpattern += '{'+prev_char_count+'}';\n\t\t}\n\t}\n\n\tarray.forEach((char,i)=>{\n\n\t\tif( char === array[i-1] ){\n\t\t\tprev_char_count++;\n\t\t\treturn;\n\t\t}\n\n\t\tprev_pattern();\n\n\t\tpattern += char;\n\t\tprev_char_count = 1;\n\t});\n\n\tprev_pattern();\n\n\treturn pattern;\n\n}\n\n\n\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {Set<string>} chars\n * @return {string}\n */\nexport const setToPattern = (chars)=>{\n\tlet array = toArray(chars);\n\treturn arrayToPattern(array);\n}\n\n\n\n/**\n *\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n * @param {any[]} array\n */\nexport const hasDuplicates = (array) => {\n    return (new Set(array)).size !== array.length;\n}\n\n\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n * @param {string} str\n * @return {string}\n */\nexport const escape_regex = (str) => {\n\treturn (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n\n/**\n * Return the max length of array values\n * @param {string[]} array\n *\n */\nexport const maxValueLength = (array) => {\n\treturn array.reduce( (longest, value) => Math.max(longest,unicodeLength(value)),0);\n}\n\n\n/**\n * @param {string} str\n */\nexport const unicodeLength = (str) => {\n\treturn toArray(str).length;\n}\n\n/**\n * @param {any} p\n * @return {any[]}\n */\nexport const toArray = (p) => Array.from(p);\n", "\n\n\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n * @param {string} input\n * @return {string[][]}\n */\nexport const allSubstrings = (input) => {\n\n    if( input.length === 1) return [[input]];\n\n\t/** @type {string[][]} */\n    let result = [];\n\n\tconst start = input.substring(1);\n    const suba = allSubstrings(start);\n\n\tsuba.forEach(function(subresult) {\n        let tmp = subresult.slice(0);\n        tmp[0] = input.charAt(0) + tmp[0];\n        result.push(tmp);\n\n        tmp = subresult.slice(0);\n        tmp.unshift(input.charAt(0));\n        result.push(tmp);\n    });\n\n    return result;\n}\n", "\n/**\n * @typedef {{[key:string]:string}} TUnicodeMap\n * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n * @typedef {[[number,number]]} TCodePoints\n * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n */\n\n\nimport { setToPattern, arrayToPattern, escape_regex, sequencePattern, toArray } from './regex.mjs';\nimport { allSubstrings } from './strings.mjs';\n\n\n/** @type {TCodePoints} */\nexport const code_points = [[ 0, 65535 ]];\n\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n\n/** @type {TUnicodeMap} */\nexport let unicode_map;\n\n/** @type {RegExp} */\nlet multi_char_reg;\n\nconst max_char_length = 3;\n\n/** @type {TUnicodeMap} */\nconst latin_convert = {}\n\n/** @type {TUnicodeMap} */\nconst latin_condensed = {\n\t'/': '⁄∕',\n\t'0': '߀',\n\t\"a\": \"ⱥɐɑ\",\n\t\"aa\": \"ꜳ\",\n\t\"ae\": \"æǽǣ\",\n\t\"ao\": \"ꜵ\",\n\t\"au\": \"ꜷ\",\n\t\"av\": \"ꜹꜻ\",\n\t\"ay\": \"ꜽ\",\n\t\"b\": \"ƀɓƃ\",\n\t\"c\": \"ꜿƈȼↄ\",\n\t\"d\": \"đɗɖᴅƌꮷԁɦ\",\n\t\"e\": \"ɛǝᴇɇ\",\n\t\"f\": \"ꝼƒ\",\n\t\"g\": \"ǥɠꞡᵹꝿɢ\",\n\t\"h\": \"ħⱨⱶɥ\",\n\t\"i\": \"ɨı\",\n\t\"j\": \"ɉȷ\",\n\t\"k\": \"ƙⱪꝁꝃꝅꞣ\",\n\t\"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n\t\"m\": \"ɱɯϻ\",\n\t\"n\": \"ꞥƞɲꞑᴎлԉ\",\n\t\"o\": \"øǿɔɵꝋꝍᴑ\",\n\t\"oe\": \"œ\",\n\t\"oi\": \"ƣ\",\n\t\"oo\": \"ꝏ\",\n\t\"ou\": \"ȣ\",\n\t\"p\": \"ƥᵽꝑꝓꝕρ\",\n\t\"q\": \"ꝗꝙɋ\",\n\t\"r\": \"ɍɽꝛꞧꞃ\",\n\t\"s\": \"ßȿꞩꞅʂ\",\n\t\"t\": \"ŧƭʈⱦꞇ\",\n\t\"th\": \"þ\",\n\t\"tz\": \"ꜩ\",\n\t\"u\": \"ʉ\",\n\t\"v\": \"ʋꝟʌ\",\n\t\"vy\": \"ꝡ\",\n\t\"w\": \"ⱳ\",\n\t\"y\": \"ƴɏỿ\",\n\t\"z\": \"ƶȥɀⱬꝣ\",\n\t\"hv\": \"ƕ\"\n}\n\n\nfor( let latin in latin_condensed ){\n\tlet unicode = latin_condensed[latin] || '';\n\tfor( let i = 0; i < unicode.length; i++){\n\t\tlet char\t= unicode.substring(i,i+1);\n\t\tlatin_convert[char] = latin;\n\t}\n}\n\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|')+'|'+accent_pat,'gu');\n\n\n\n/**\n * Initialize the unicode_map from the give code point ranges\n *\n * @param {TCodePoints=} _code_points\n */\nexport const initialize = (_code_points) => {\n\tif( unicode_map !== undefined ) return;\n\tunicode_map = generateMap(_code_points || code_points );\n}\n\n\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n * @param {string} str\n * @param {string} form\n */\nexport const normalize = (str,form='NFKD') => str.normalize(form);\n\n\n\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n * @param {string} str\n * @return {string}\n */\nexport const asciifold = (str) => {\n\n\treturn toArray(str).reduce(\n\t\t/**\n\t\t * @param {string} result\n\t\t * @param {string} char\n\t\t */\n\t\t(result, char) =>{\n\t\t\treturn result + _asciifold(char)\n\t\t},\n\t\t''\n\t);\n};\n\n/**\n * @param {string} str\n * @return {string}\n */\nexport const _asciifold = (str) => {\n\tstr = normalize(str)\n\t\t.toLowerCase()\n\t\t.replace(convert_pat,(/** @type {string} */ char) => {\n\t\t\treturn latin_convert[char] || '';\n\t\t})\n\n\t//return str;\n\treturn normalize(str,'NFC')\n};\n\n\n\n\n\n\n/**\n * Generate a list of unicode variants from the list of code points\n * @param {TCodePoints} code_points\n * @yield {TCodePointObj}\n */\nexport function* generator(code_points){\n\n\tfor(const [code_point_min, code_point_max] of code_points){\n\t\tfor(let i = code_point_min; i <= code_point_max; i++){\n\n\t\t\tlet composed\t\t= String.fromCharCode(i);\n\t\t\tlet folded\t\t\t= asciifold(composed);\n\n\n\t\t\tif( folded == composed.toLowerCase() ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// skip when folded is a string longer than 3 characters long\n\t\t\t// bc the resulting regex patterns will be long\n\t\t\t// eg:\n\t\t\t// folded صلى الله عليه وسلم length 18 code point 65018\n\t\t\t// folded جل جلاله length 8 code point 65019\n\t\t\tif( folded.length > max_char_length ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( folded.length == 0 ){\n\t\t\t\tcontinue\n\t\t\t}\n\n\n\t\t\tyield {folded:folded,composed:composed,code_point:i};\n\t\t}\n\t}\n}\n\n\n/**\n * Generate a unicode map from the list of code points\n * @param {TCodePoints} code_points\n * @return {TUnicodeSets}\n */\nexport const generateSets = (code_points) => {\n\n\t/** @type {{[key:string]:Set<string>}} */\n\tconst unicode_sets = {};\n\n\n\t/**\n\t * @param {string} folded\n\t * @param {string} to_add\n\t */\n\tconst addMatching = (folded,to_add) => {\n\n\t\t/** @type {Set<string>} */\n\t\tconst folded_set = unicode_sets[folded] || new Set();\n\n\t\tconst patt = new RegExp( '^'+setToPattern(folded_set)+'$','iu');\n\t\tif( to_add.match(patt) ){\n\t\t\treturn;\n\t\t}\n\n\t\tfolded_set.add(escape_regex(to_add));\n\t\tunicode_sets[folded] = folded_set;\n\t}\n\n\n\tfor( let value of generator(code_points) ){\n\t\taddMatching(value.folded,value.folded);\n\t\taddMatching(value.folded,value.composed);\n\t}\n\n\treturn unicode_sets;\n}\n\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n *\n * @param {TCodePoints} code_points\n * @return {TUnicodeMap}\n */\nexport const generateMap = (code_points) => {\n\n\t/** @type {TUnicodeSets} */\n\tconst unicode_sets = generateSets(code_points);\n\n\t/** @type {TUnicodeMap} */\n\tconst unicode_map = {};\n\n\t/** @type {string[]} */\n\tlet multi_char = [];\n\n\tfor( let folded in unicode_sets ){\n\n\t\tlet set = unicode_sets[folded];\n\t\tif( set ){\n\t\t\tunicode_map[folded] = setToPattern(set);\n\t\t}\n\n\t\tif( folded.length > 1 ){\n\t\t\tmulti_char.push(escape_regex(folded));\n\t\t}\n\t}\n\n\tmulti_char.sort((a, b) => b.length - a.length );\n\tconst multi_char_patt = arrayToPattern(multi_char);\n\tmulti_char_reg = new RegExp('^'+multi_char_patt,'u');\n\n\treturn unicode_map;\n}\n\n\n/**\n * Map each element of an array from it's folded value to all possible unicode matches\n * @param {string[]} strings\n * @param {number} min_replacement\n * @return {string}\n */\nexport const mapSequence = (strings,min_replacement=1) =>{\n\tlet chars_replaced = 0;\n\n\n\tstrings = strings.map((str)=>{\n\t\tif( unicode_map[str] ){\n\t\t\tchars_replaced += str.length;\n\t\t}\n\t\treturn unicode_map[str] || str;\n\t});\n\n\tif( chars_replaced >= min_replacement ){\n\t\treturn sequencePattern(strings);\n\t}\n\n\treturn '';\n}\n\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n *\n *\n * @param {string} str\n * @param {number} min_replacement\n * @return {string}\n */\nexport const substringsToPattern = (str,min_replacement=1) => {\n\n\tmin_replacement = Math.max(min_replacement,str.length-1);\n\n\treturn arrayToPattern(\n\t\tallSubstrings(str).map( (sub_pat) =>{\n\t\t\treturn mapSequence(sub_pat,min_replacement)\n\t\t})\n\t);\n}\n\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n *\n * @param {Sequence[]} sequences\n * @param {boolean} all\n */\nconst sequencesToPattern = (sequences,all=true) => {\n\n\tlet min_replacement = sequences.length > 1 ? 1 : 0;\n\treturn arrayToPattern(\n\t\tsequences.map( (sequence) =>{\n\t\t\tlet seq = [];\n\t\t\tconst len = all ? sequence.length() : sequence.length() - 1;\n\t\t\tfor( let j = 0; j < len; j++){\n\t\t\t\tseq.push(substringsToPattern(sequence.substrs[j]||'',min_replacement));\n\t\t\t}\n\n\t\t\treturn sequencePattern(seq);\n\t\t})\n\t);\n}\n\n/**\n * Return true if the sequence is already in the sequences\n * @param {Sequence} needle_seq\n * @param {Sequence[]} sequences\n */\nconst inSequences = (needle_seq, sequences) => {\n\n\tfor(const seq of sequences){\n\n\t\tif( seq.start != needle_seq.start || seq.end != needle_seq.end ){\n\t\t\tcontinue;\n\t\t}\n\n\t\tif( seq.substrs.join('') !== needle_seq.substrs.join('') ){\n\t\t\tcontinue;\n\t\t}\n\n\n\t\tlet needle_parts\t= needle_seq.parts;\n\n\t\t/**\n\t\t * @param {TSequencePart} part\n\t\t */\n\t\tconst filter = (part) =>{\n\n\t\t\tfor(const needle_part of needle_parts){\n\n\t\t\t\tif( needle_part.start === part.start && needle_part.substr === part.substr ){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif( part.length == 1 || needle_part.length == 1 ){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\n\t\t\t\t// check for overlapping parts\n\t\t\t\t// a = ['::=','==']\n\t\t\t\t// b = ['::','===']\n\t\t\t\t// a = ['r','sm']\n\t\t\t\t// b = ['rs','m']\n\t\t\t\tif( part.start < needle_part.start && part.end > needle_part.start ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif( needle_part.start < part.start && needle_part.end > part.start ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\tlet filtered = seq.parts.filter(filter);\n\n\t\tif( filtered.length > 0 ){\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nclass Sequence{\n\n\tconstructor(){\n\n\t\t/** @type {TSequencePart[]} */\n\t\tthis.parts\t\t= [];\n\n\t\t/** @type {string[]} */\n\t\tthis.substrs\t= [];\n\t\tthis.start\t\t= 0;\n\t\tthis.end\t\t= 0;\n\t}\n\n\t/**\n\t * @param {TSequencePart|undefined} part\n\t */\n\tadd(part){\n\t\tif( part ){\n\t\t\tthis.parts.push(part);\n\t\t\tthis.substrs.push(part.substr);\n\t\t\tthis.start\t= Math.min(part.start,this.start);\n\t\t\tthis.end\t= Math.max(part.end,this.end);\n\t\t}\n\t}\n\n\tlast(){\n\t\treturn this.parts[this.parts.length-1];\n\t}\n\n\tlength(){\n\t\treturn this.parts.length;\n\t}\n\n\t/**\n\t * @param {number} position\n\t * @param {TSequencePart} last_piece\n\t */\n\tclone(position, last_piece){\n\t\tlet clone = new Sequence();\n\n\t\tlet parts = JSON.parse(JSON.stringify(this.parts));\n\t\tlet last_part = parts.pop();\n\t\tfor( const part of parts ){\n\t\t\tclone.add(part);\n\t\t}\n\n\t\tlet last_substr = last_piece.substr.substring(0,position-last_part.start);\n\t\tlet clone_last_len = last_substr.length;\n\t\tclone.add({start:last_part.start,end:last_part.start+clone_last_len,length:clone_last_len,substr:last_substr});\n\n\t\treturn clone;\n\t}\n\n}\n\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n *\n * @param {string} str\n * @return {string|undefined}\n */\nexport const getPattern = (str) => {\n\tinitialize();\n\n\tstr\t\t\t\t\t= asciifold(str);\n\n\tlet pattern\t\t\t= '';\n\tlet sequences\t\t= [new Sequence()];\n\n\tfor( let i = 0; i < str.length; i++ ){\n\n\t\tlet substr\t= str.substring(i);\n\t\tlet match\t= substr.match(multi_char_reg);\n\t\tconst char\t= str.substring(i,i+1);\n\t\tconst match_str = match ? match[0] : null;\n\n\n\t\t// loop through sequences\n\t\t// add either the char or multi_match\n\t\tlet overlapping\t\t= [];\n\t\tlet added_types\t\t= new Set();\n\t\tfor(const sequence of sequences){\n\n\t\t\tconst last_piece\t= sequence.last();\n\n\n\t\t\tif( !last_piece || last_piece.length == 1 || last_piece.end <= i ){\n\n\t\t\t\t// if we have a multi match\n\t\t\t\tif( match_str ){\n\t\t\t\t\tconst len = match_str.length;\n\t\t\t\t\tsequence.add({start:i,end:i+len,length:len,substr:match_str});\n\t\t\t\t\tadded_types.add('1');\n\t\t\t\t}else{\n\t\t\t\t\tsequence.add({start:i,end:i+1,length:1,substr:char});\n\t\t\t\t\tadded_types.add('2');\n\t\t\t\t}\n\n\t\t\t}else if( match_str ){\n\n\t\t\t\tlet clone = sequence.clone(i,last_piece);\n\n\t\t\t\tconst len = match_str.length;\n\t\t\t\tclone.add({start:i,end:i+len,length:len,substr:match_str});\n\n\t\t\t\toverlapping.push(clone);\n\n\t\t\t}else{\n\t\t\t\t// don't add char\n\t\t\t\t// adding would create invalid patterns: 234 => [2,34,4]\n\t\t\t\tadded_types.add('3');\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if we have overlapping\n\t\tif( overlapping.length > 0 ){\n\n\t\t\t// ['ii','iii'] before ['i','i','iii']\n\t\t\toverlapping = overlapping.sort((a,b)=>{\n\t\t\t\treturn a.length() - b.length();\n\t\t\t});\n\n\t\t\tfor( let clone of overlapping){\n\n\t\t\t\t// don't add if we already have an equivalent sequence\n\t\t\t\tif( inSequences(clone, sequences) ){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tsequences.push(clone);\n\t\t\t}\n\n\t\t\tcontinue;\n\t\t}\n\n\n\t\t// if we haven't done anything unique\n\t\t// clean up the patterns\n\t\t// helps keep patterns smaller\n\t\t// if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\t\tif( i > 0 && added_types.size == 1 && !added_types.has('3') ){\n\t\t\tpattern += sequencesToPattern(sequences,false);\n\t\t\tlet new_seq = new Sequence();\n\t\t\tconst old_seq = sequences[0];\n\t\t\tif( old_seq ){\n\t\t\t\tnew_seq.add(old_seq.last());\n\t\t\t}\n\t\t\tsequences = [new_seq];\n\t\t}\n\n\t}\n\n\tpattern += sequencesToPattern(sequences,true);\n\n\treturn pattern;\n}\n\n\nexport { escape_regex };\n", "import TomSelect from 'tom-select/dist/js/tom-select.base.js';\n\n/* eslint-disable camelcase */\nimport checkbox_options from 'tom-select/src/plugins/checkbox_options/plugin';\nimport clear_button from 'tom-select/src/plugins/clear_button/plugin';\nimport dropdown_header from 'tom-select/src/plugins/dropdown_header/plugin';\nimport dropdown_input from 'tom-select/src/plugins/dropdown_input/plugin';\nimport remove_button from 'tom-select/src/plugins/remove_button/plugin';\nimport virtual_scroll from 'tom-select/src/plugins/virtual_scroll/plugin';\nimport dropdown_footer from './plugins/dropdown_footer/plugin';\n/* eslint-enable camelcase */\n\nTomSelect.define('checkbox_options', checkbox_options);\nTomSelect.define('clear_button', clear_button);\nTomSelect.define('dropdown_header', dropdown_header);\nTomSelect.define('dropdown_input', dropdown_input);\nTomSelect.define('remove_button', remove_button);\nTomSelect.define('virtual_scroll', virtual_scroll);\nTomSelect.define('dropdown_footer', dropdown_footer);\n\nwindow.TomSelect = require('tom-select/dist/js/tom-select.base.js')\n", "\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string|number):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string|number):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * use setTimeout if timeout > 0 \n */\nexport const timeout = (fn:()=>void,timeout:number) => {\n\tif( timeout > 0 ){\n\t\treturn setTimeout(fn,timeout);\n\t}\n\n\tfn.call(null);\n\treturn null;\n}\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n * Note: \"selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password\"\n * \t- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Add event helper\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n", "\nimport { asciifold } from '@orchidjs/unicode-variants';\nimport * as T from './types';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tif( token.regex == null ) return 0;\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\n\tif( typeof value == 'function' ) return value;\n\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n", "\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( isHtmlString(query) ){\n\t\tvar tpl = document.createElement('template');\n\t\ttpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn tpl.content.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const isHtmlString = (arg:any): boolean => {\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n", "/**\n * Plugin: \"checkbox_options\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\tconst cbOptions : CBOptions = Object.assign({\n\t\t// so that the user may add different ones as well\n\t\tclassName             : \"tomselect-checkbox\",\n\n\t\t// the following default to the historic plugin's values\n\t\tcheckedClassNames     : undefined,\n\t\tuncheckedClassNames   : undefined,\n\t}, userOptions);\n\n\n\tvar UpdateChecked = function(checkbox:HTMLInputElement, toCheck : boolean) {\n\t\tif( toCheck ){\n\t\t\tcheckbox.checked = true;\n\t\t\tif (cbOptions.uncheckedClassNames) {\n\t\t\t\tcheckbox.classList.remove(...cbOptions.uncheckedClassNames);\n\t\t\t}\n\t\t\tif (cbOptions.checkedClassNames) {\n\t\t\t\tcheckbox.classList.add(...cbOptions.checkedClassNames);\n\t\t\t}\n\t\t}else{\n\t\t\tcheckbox.checked = false;\n\t\t\tif (cbOptions.checkedClassNames) {\n\t\t\t\tcheckbox.classList.remove(...cbOptions.checkedClassNames);\n\t\t\t}\n\t\t\tif (cbOptions.uncheckedClassNames) {\n\t\t\t\tcheckbox.classList.add(...cbOptions.uncheckedClassNames);\n\t\t\t}\n\t\t}\n\t}\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input.' + cbOptions.className);\n\t\t\tif( checkbox instanceof HTMLInputElement ){\n\t\t\t\tUpdateChecked(checkbox, option.classList.contains('selected'));\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = (data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tif (cbOptions.className) {\n\t\t\t\tcheckbox.classList.add(cbOptions.className);\n\t\t\t}\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\t\t\tUpdateChecked(checkbox, !!(hashed && self.items.indexOf(hashed) > -1) );\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\t// check when item added\n\tself.on('item_add',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data:CBOptions) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\n\t\t\tif( self.isLocked ) return;\n\n\t\t\tself.clear();\n\n\t\t\tif( self.settings.mode === 'single' && self.settings.allowEmptyOption ){\n\t\t\t\tself.addItem('');\n\t\t\t}\n\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\nimport { DHOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:DHOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data:DHOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n};\n", "export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n", "/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { getDom, addClasses } from '../../vanilla';\nimport { addEvent, preventDefault } from '../../utils';\n\n\nexport default function(this:TomSelect) {\n\tconst self = this;\n\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('before','setup',()=>{\n\t\tself.focus_node\t\t= self.control;\n\n\t\taddClasses( self.control_input, 'dropdown-input');\n\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.append(self.control_input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t\t// set a placeholder in the select control\n\t\tconst placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />') as HTMLInputElement;\n\t\tplaceholder.placeholder = self.settings.placeholder ||'';\n\t\tself.control.append(placeholder);\n\n\t});\n\n\n\tself.on('initialize',()=>{\n\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t\t\tswitch( evt.keyCode ){\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tpreventDefault(evt,true);\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tself.focus_node.tabIndex = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn self.onKeyDown.call(self,evt);\n\t\t});\n\n\t\tself.on('blur',()=>{\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t\t});\n\n\n\t\t// give the control_input focus when the dropdown is open\n\t\tself.on('dropdown_open',() =>{\n\t\t\tself.control_input.focus();\n\t\t});\n\n\t\t// prevent onBlur from closing when focus is on the control_input\n\t\tconst orig_onBlur = self.onBlur;\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\n\t\t\treturn orig_onBlur.call(self);\n\t\t});\n\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\n\n\t\t// return focus to control to allow further keyboard input\n\t\tself.hook('before','close',() =>{\n\n\t\t\tif( !self.isOpen ) return;\n\t\t\tself.focus_node.focus({preventScroll: true});\n\t\t});\n\n\t});\n\n};\n", "/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption, TomItem } from '../../types/index';\nimport { RBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:RBOptions) {\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\n\t\t\tvar close_button = getDom(html);\n\t\t\titem.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\tif( self.isLocked ) return;\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif( self.isLocked ) return;\n\t\t\t\tif( !self.shouldDelete([item],evt as MouseEvent) ) return;\n\n\t\t\t\tself.removeItem(item);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t\tself.inputState();\n\t\t\t});\n\n\t\t\treturn item;\n\t\t};\n\n\t});\n\n\n};\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\n\n\tvar pagination:{[key:string]:any}\t= {};\n\tvar dropdown_content:HTMLElement;\n\tvar loading_more\t\t\t\t\t= false;\n\tvar load_more_opt:HTMLElement;\n\tvar default_values: string[]\t\t= [];\n\n\tif( !self.settings.shouldLoadMore ){\n\n\t\t// return true if additional results should be loaded\n\t\tself.settings.shouldLoadMore = ():boolean=>{\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent > 0.9 ){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif( self.activeOption ){\n\t\t\t\tvar selectable\t= self.selectable();\n\t\t\t\tvar index\t\t= Array.from(selectable).indexOf(self.activeOption);\n\t\t\t\tif( index >= (selectable.length-2) ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tconst canLoadMore = (query:string):boolean => {\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tconst clearFilter = (option:TomOption, value:string):boolean => {\n\t\tif( self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\n\t// set the next url that will be\n\tself.setNextUrl = (value:string,next_url:any):void => {\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = (query:string):any =>{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tself.clearPagination();\n\n\t\treturn self.settings.firstUrl.call(self,query);\n\t};\n\n\t// clear pagination\n\tself.clearPagination = ():void =>{\n\t\tpagination = {};\n\t};\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions(clearFilter);\n\t\t}else if( load_more_opt ){\n\t\t\tconst first_option = options[0];\n\t\t\tif( first_option !== undefined ){\n\t\t\t\tload_more_opt.dataset.value\t\t= first_option[self.settings.valueField];\n\t\t\t}\n\t\t}\n\n\t\torig_loadCallback.call( self, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ){\n\t\t\t\toption.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t\t\t\tload_more_opt = option;\n\t\t\t}\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.on('initialize',()=>{\n\t\tdefault_values = Object.keys(self.options);\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:() => {\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:() =>{\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',()=>{\n\n\t\t\tif( !self.settings.shouldLoadMore.call(self) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_footer\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from 'tom-select/dist/js/tom-select.base.js';\nimport { getDom } from 'tom-select/src/vanilla';\n\ntype DFOptions = {\n\ttitle\t    ?: string,\n\tfooterClass\t?: string,\n\thtml\t \t?: (data:DFOptions) => string,\n};\n\nexport default function(this:TomSelect, userOptions:DFOptions) {\n    const self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Autocomplete Footer',\n\t\tfooterClass   : 'container-fluid mt-1 px-2 border-top dropdown-footer',\n\n\t\thtml: (data:DFOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div title=\"' + data.title + '\" class=\"' + data.footerClass + '\"></div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.hook('after', 'setup', () => {\n\t\tvar footer = getDom(options.html(options));\n\n        self.dropdown.appendChild(footer);\n\t});\n\n};\n"],
  "mappings": "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",
  "names": ["forEvents", "events", "callback", "split", "forEach", "event", "MicroEvent", "constructor", "_events", "on", "fct", "event_array", "push", "off", "n", "arguments", "length", "undefined", "splice", "indexOf", "trigger", "args", "self", "apply", "MicroPlugin", "Interface", "plugins", "names", "settings", "requested", "loaded", "define", "name", "fn", "initializePlugins", "key", "queue", "Array", "isArray", "plugin", "options", "hasOwnProperty", "shift", "require", "loadPlugin", "Error", "arrayToPattern", "chars", "maxValueLength", "sequencePattern", "array", "hasDuplicates", "pattern", "prev_char_count", "prev_pattern", "char", "i", "setToPattern", "toArray", "escape_regex", "str", "longest", "value", "unicodeLength", "p", "allSubstrings", "input", "result", "start", "subresult", "tmp", "code_points", "accent_pat", "unicode_map", "multi_char_reg", "max_char_length", "latin_convert", "latin_condensed", "latin", "unicode", "convert_pat", "initialize", "_code_points", "generateMap", "normalize", "form", "asciifold", "_asciifold", "generator", "code_point_min", "code_point_max", "composed", "folded", "generateSets", "unicode_sets", "addMatching", "to_add", "folded_set", "patt", "multi_char", "set", "a", "b", "multi_char_patt", "mapSequence", "strings", "min_replacement", "chars_replaced", "substringsToPattern", "sub_pat", "sequencesToPattern", "sequences", "all", "sequence", "seq", "len", "j", "inSequences", "needle_seq", "needle_parts", "filter", "part", "needle_part", "Sequence", "position", "last_piece", "clone", "parts", "last_part", "last_substr", "clone_last_len", "getPattern", "match", "match_str", "overlapping", "added_types", "new_seq", "old_seq", "getAttr", "obj", "getAttrNesting", "scoreValue", "token", "weight", "score", "pos", "propToArray", "iterate", "object", "cmp", "Sifter", "items", "query", "respect_word_boundaries", "weights", "tokens", "words", "field_regex", "word", "field_match", "field", "regex", "search", "token_count", "fields", "field_count", "getAttrFn", "scoreObject", "data", "sum", "implicit_score", "sort_flds", "sort", "get_field", "s", "fld", "sort_fld", "optsUser", "fn_score", "item", "id", "_", "fn_sort", "getDom", "jquery", "HTMLElement", "isHtmlString", "tpl", "document", "createElement", "innerHTML", "trim", "content", "firstChild", "querySelector", "arg", "escapeQuery", "replace", "triggerEvent", "dom_el", "event_name", "createEvent", "initEvent", "dispatchEvent", "applyCSS", "css", "Object", "assign", "style", "addClasses", "elmts", "classes", "norm_classes", "classesArray", "castAsArray", "map", "el", "cls", "classList", "add", "removeClasses", "remove", "_classes", "concat", "Boolean", "parentMatch", "target", "selector", "wrapper", "contains", "matches", "parentNode", "getTail", "list", "direction", "isEmptyObject", "keys", "nodeIndex", "amongst", "nodeName", "previousElementSibling", "setAttr", "attrs", "val", "attr", "removeAttribute", "setAttribute", "replaceNode", "existing", "replacement", "replaceChild", "highlight", "element", "RegExp", "highlightText", "node", "spannode", "className", "middlebit", "splitText", "index", "middleclone", "cloneNode", "appendChild", "highlightChildren", "nodeType", "childNodes", "test", "tagName", "from", "highlightRecursive", "removeHighlight", "elements", "querySelectorAll", "prototype", "call", "parent", "KEY_A", "KEY_RETURN", "KEY_ESC", "KEY_LEFT", "KEY_UP", "KEY_RIGHT", "KEY_DOWN", "KEY_BACKSPACE", "KEY_DELETE", "KEY_TAB", "KEY_SHORTCUT", "navigator", "userAgent", "defaults", "optgroups", "delimiter", "splitOn", "persist", "diacritics", "create", "createOnBlur", "createFilter", "openOnFocus", "shouldOpen", "maxOptions", "maxItems", "hideSelected", "duplicates", "addPrecedence", "selectOnTab", "preload", "allowEmptyOption", "refreshThrottle", "loadThrottle", "loadingClass", "dataAttr", "optgroupField", "valueField", "labelField", "disabledField", "optgroupLabelField", "optgroupValueField", "lockOptgroupOrder", "sortField", "searchField", "searchConjunction", "mode", "wrapperClass", "controlClass", "dropdownClass", "dropdownContentClass", "itemClass", "optionClass", "dropdownParent", "controlInput", "copyClassesToDropdown", "placeholder", "hidePlaceholder", "shouldLoad", "render", "hash_key", "get_hash", "escape_html", "timeout", "setTimeout", "loadDebounce", "delay", "loading", "Math", "max", "clearTimeout", "loadedSearches", "debounce_events", "types", "type", "event_args", "getSelection", "selectionStart", "selectionEnd", "preventDefault", "evt", "stop", "stopPropagation", "addEvent", "addEventListener", "isKeyDown", "key_name", "count", "altKey", "ctrlKey", "shiftKey", "metaKey", "getId", "existing_id", "getAttribute", "addSlashes", "append", "getSettings", "settings_user", "attr_data", "field_label", "field_value", "field_disabled", "field_optgroup", "field_optgroup_label", "field_optgroup_value", "tag_name", "toLowerCase", "option", "textContent", "settings_element", "init_select", "optionsMap", "group_count", "$order", "readData", "dataset", "json", "JSON", "parse", "addOption", "group", "arr", "option_data", "disabled", "$option", "selected", "addGroup", "optgroup", "optgroup_data", "children", "hasAttribute", "child", "init_textbox", "data_raw", "opt", "values", "instance_i", "TomSelect", "input_arg", "user_settings", "control_input", "dropdown", "control", "dropdown_content", "focus_node", "order", "tabIndex", "is_select_tag", "rtl", "inputId", "_destroy", "sifter", "isOpen", "isDisabled", "isReadOnly", "isRequired", "isInvalid", "isValid", "isLocked", "isFocused", "isInputHidden", "isSetup", "ignoreFocus", "ignoreHover", "hasOptions", "currentResults", "lastValue", "caretPos", "activeOption", "activeItems", "userOptions", "refreshTimeout", "dir", "tomselect", "computedStyle", "window", "getComputedStyle", "getPropertyValue", "required", "setupCallbacks", "setupTemplates", "_render", "inputMode", "setup", "passive_event", "passive", "listboxId", "role", "control_id", "label", "label_click", "focus", "bind", "for", "label_id", "width", "classes_plugins", "join", "multiple", "load", "e", "target_match", "onOptionHover", "capture", "onOptionSelect", "onItemSelect", "onClick", "onKeyDown", "onKeyPress", "onInput", "onBlur", "onFocus", "onPaste", "doc_mousedown", "composedPath", "blur", "inputState", "win_scroll", "positionDropdown", "removeEventListener", "revertSettings", "insertAdjacentElement", "sync", "refreshState", "updateOriginalInput", "refreshItems", "close", "disable", "readOnly", "setReadOnly", "enable", "onChange", "setupOptions", "addOptions", "registerOptionGroup", "templates", "optgroup_header", "escape", "option_create", "no_results", "not_loading", "callbacks", "get_settings", "setValue", "lastQuery", "clearActiveItems", "onMouseDown", "pastedText", "inputValue", "splitInput", "piece", "addItem", "createItem", "character", "String", "fromCharCode", "keyCode", "which", "constants", "selectAll", "open", "next", "getAdjacent", "setActiveOption", "prev", "canSelect", "activeElement", "advanceSelection", "deleteSelection", "_onInput", "refreshOptions", "wasFocused", "hasFocus", "deactivate", "setActiveItem", "setCaret", "parentElement", "closeAfterSelect", "canLoad", "loadCallback", "clearActiveOption", "setTextboxValue", "changed", "getValue", "silent", "clear", "addItems", "setMaxItems", "eventName", "begin", "end", "swap", "last", "getLastActive", "setActiveItemClass", "removeActiveItem", "last_active", "idx", "scroll", "scrollToOption", "behavior", "height_menu", "clientHeight", "scrollTop", "height_item", "offsetHeight", "y", "getBoundingClientRect", "top", "scrollBehavior", "controlChildren", "toggle", "offsetWidth", "getScoreFunction", "getSearchOptions", "conjunction", "nesting", "calculateScore", "hashed", "triggerDropdown", "k", "html", "has_create_option", "active_group", "groups", "groups_order", "same_query", "results", "active_option", "show_dropdown", "closest", "min", "getGroupFragment", "group_order_i", "order_group", "fragment", "group_fragment", "createDocumentFragment", "opt_value", "opt_hash", "option_el", "getOption", "includes", "self_optgroup", "$id", "toString", "group_order", "group_heading", "group_options", "header", "group_html", "tok", "add_template", "template", "insertBefore", "canCreate", "active_index", "selectable", "user_created", "dat", "registerOption", "addOptionGroup", "hashed_id", "removeOptionGroup", "clearCache", "clearOptionGroups", "updateOption", "item_new", "index_item", "value_old", "value_new", "data_old", "getItem", "uncacheValue", "option_new", "removeOption", "removeItem", "clearOptions", "boundFilter", "clearFilter", "$div", "x", "last_item", "isPending", "wasFull", "isFull", "insertAtCaret", "caret", "output", "lock", "created", "unlock", "refreshValidityState", "wrap_classList", "validity", "valid", "opts", "empty_option", "AddSelected", "has_selected", "reuse_opt", "visibility", "display", "context", "rect", "scrollY", "left", "scrollX", "selection", "tail", "rm_items", "rm_item", "shouldDelete", "pop", "onDelete", "adjacent", "nextElementSibling", "moveCaret", "new_pos", "setLocked", "setDisabled", "destroy", "templateName", "hook", "when", "method", "new_fn", "orig_method", "result_new", "arrayToPattern", "chars", "filter", "Boolean", "length", "maxValueLength", "join", "sequencePattern", "array", "hasDuplicates", "pattern", "prev_char_count", "prev_pattern", "forEach", "char", "i", "setToPattern", "toArray", "Set", "size", "escape_regex", "str", "replace", "reduce", "longest", "value", "Math", "max", "unicodeLength", "p", "Array", "from", "allSubstrings", "input", "result", "start", "substring", "suba", "subresult", "tmp", "slice", "charAt", "push", "unshift", "code_points", "accent_pat", "unicode_map", "multi_char_reg", "max_char_length", "latin_convert", "latin_condensed", "latin", "unicode", "convert_pat", "RegExp", "Object", "keys", "initialize", "_code_points", "undefined", "generateMap", "normalize", "form", "asciifold", "_asciifold", "toLowerCase", "generator", "code_point_min", "code_point_max", "composed", "String", "fromCharCode", "folded", "code_point", "generateSets", "unicode_sets", "addMatching", "to_add", "folded_set", "patt", "match", "add", "multi_char", "set", "sort", "a", "b", "multi_char_patt", "mapSequence", "strings", "min_replacement", "chars_replaced", "map", "substringsToPattern", "sub_pat", "sequencesToPattern", "sequences", "all", "sequence", "seq", "len", "j", "substrs", "inSequences", "needle_seq", "end", "needle_parts", "parts", "part", "needle_part", "substr", "filtered", "Sequence", "constructor", "min", "last", "clone", "position", "last_piece", "JSON", "parse", "stringify", "last_part", "pop", "last_substr", "clone_last_len", "getPattern", "match_str", "overlapping", "added_types", "has", "new_seq", "old_seq", "import_tom_select_base", "hash_key", "value", "get_hash", "escape_html", "str", "preventDefault", "evt", "stop", "addEvent", "target", "type", "callback", "options", "import_unicode_variants", "iterate", "object", "callback", "key", "getDom", "query", "isHtmlString", "tpl", "arg", "addClasses", "elmts", "classes", "norm_classes", "classesArray", "castAsArray", "el", "cls", "classesArray", "args", "classes", "iterate", "_classes", "castAsArray", "arg", "plugin_default", "userOptions", "self", "orig_onOptionSelect", "cbOptions", "UpdateChecked", "checkbox", "toCheck", "UpdateCheckbox", "option", "orig_render_option", "data", "escape_html", "rendered", "getDom", "evt", "preventDefault", "hashed", "hash_key", "value", "plugin_default", "userOptions", "self", "options", "data", "button", "getDom", "evt", "plugin_default", "userOptions", "self", "options", "data", "header", "getDom", "close_link", "evt", "preventDefault", "IS_MAC", "plugin_default", "self", "addClasses", "div", "getDom", "placeholder", "evt", "preventDefault", "orig_onBlur", "addEvent", "plugin_default", "userOptions", "options", "self", "html", "escape_html", "orig_render_item", "data", "escape", "item", "getDom", "close_button", "addEvent", "evt", "preventDefault", "plugin_default", "self", "orig_canLoad", "orig_clearActiveOption", "orig_loadCallback", "pagination", "dropdown_content", "loading_more", "load_more_opt", "default_values", "selectable", "index", "canLoadMore", "query", "clearFilter", "option", "value", "next_url", "options", "optgroups", "first_option", "addClasses", "plugin_default", "userOptions", "self", "options", "data", "footer", "getDom", "TomSelect", "plugin_default"]
}
