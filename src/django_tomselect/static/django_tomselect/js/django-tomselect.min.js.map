{
  "version": 3,
  "sources": ["../../../../../node_modules/@orchidjs/sifter/node_modules/@orchidjs/unicode-variants/dist/esm/regex.js", "../../../../../node_modules/@orchidjs/sifter/node_modules/@orchidjs/unicode-variants/dist/esm/strings.js", "../../../../../node_modules/@orchidjs/sifter/node_modules/@orchidjs/unicode-variants/dist/esm/index.js", "../../../../../node_modules/@orchidjs/sifter/lib/utils.ts", "../../../../../node_modules/@orchidjs/sifter/lib/sifter.ts", "../../../../../node_modules/@orchidjs/unicode-variants/lib/regex.mjs", "../../../../../node_modules/@orchidjs/unicode-variants/lib/strings.mjs", "../../../../../node_modules/@orchidjs/unicode-variants/lib/index.mjs", "../../../../../node_modules/tom-select/src/contrib/microevent.ts", "../../../../../node_modules/tom-select/src/contrib/microplugin.ts", "../../../../../node_modules/tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/regex.js", "../../../../../node_modules/tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/strings.js", "../../../../../node_modules/tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/index.js", "../../../../../node_modules/tom-select/node_modules/@orchidjs/sifter/dist/esm/utils.js", "../../../../../node_modules/tom-select/node_modules/@orchidjs/sifter/dist/esm/sifter.js", "../../../../../node_modules/tom-select/node_modules/@orchidjs/sifter/lib/utils.ts", "../../../../../node_modules/tom-select/src/vanilla.ts", "../../../../../node_modules/tom-select/src/contrib/highlight.ts", "../../../../../node_modules/tom-select/src/constants.ts", "../../../../../node_modules/tom-select/src/defaults.ts", "../../../../../node_modules/tom-select/src/utils.ts", "../../../../../node_modules/tom-select/src/getSettings.ts", "../../../../../node_modules/tom-select/src/tom-select.ts", "../../../../../node_modules/tom-select/src/plugins/change_listener/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/checkbox_options/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/clear_button/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/drag_drop/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/dropdown_header/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/caret_position/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/dropdown_input/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/input_autogrow/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/no_backspace_delete/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/no_active_items/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/optgroup_columns/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/remove_button/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/restore_on_backspace/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/virtual_scroll/plugin.ts", "../../../../../node_modules/tom-select/src/tom-select.complete.ts", "../../../../../node_modules/tom-select/src/contrib/microevent.ts", "../../../../../node_modules/tom-select/src/contrib/microplugin.ts", "../../../../../node_modules/tom-select/src/tom-select.ts", "../../../../../node_modules/@orchidjs/sifter/lib/utils.ts", "../../../../../node_modules/tom-select/src/vanilla.ts", "../../../../../node_modules/tom-select/src/contrib/highlight.ts", "../../../../../node_modules/tom-select/src/constants.ts", "../../../../../node_modules/tom-select/src/defaults.ts", "../../../../../node_modules/tom-select/src/utils.ts", "../../../../../node_modules/tom-select/src/getSettings.ts", "../../../../../node_modules/tom-select/src/plugins/checkbox_options/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/clear_button/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/dropdown_header/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/dropdown_input/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/remove_button/plugin.ts", "../../../../../node_modules/tom-select/src/plugins/virtual_scroll/plugin.ts", "../../../../../client/django-tomselect.js"],
  "sourcesContent": ["/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {string[]} chars\n * @return {string}\n */\nconst arrayToPattern = chars => {\n  chars = chars.filter(Boolean);\n\n  if (chars.length < 2) {\n    return chars[0] || '';\n  }\n\n  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\n/**\n * @param {string[]} array\n * @return {string}\n */\n\nconst sequencePattern = array => {\n  if (!hasDuplicates(array)) {\n    return array.join('');\n  }\n\n  let pattern = '';\n  let prev_char_count = 0;\n\n  const prev_pattern = () => {\n    if (prev_char_count > 1) {\n      pattern += '{' + prev_char_count + '}';\n    }\n  };\n\n  array.forEach((char, i) => {\n    if (char === array[i - 1]) {\n      prev_char_count++;\n      return;\n    }\n\n    prev_pattern();\n    pattern += char;\n    prev_char_count = 1;\n  });\n  prev_pattern();\n  return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {Set<string>} chars\n * @return {string}\n */\n\nconst setToPattern = chars => {\n  let array = toArray(chars);\n  return arrayToPattern(array);\n};\n/**\n *\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n * @param {any[]} array\n */\n\nconst hasDuplicates = array => {\n  return new Set(array).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n * @param {string} str\n * @return {string}\n */\n\nconst escape_regex = str => {\n  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n * @param {string[]} array\n *\n */\n\nconst maxValueLength = array => {\n  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\n/**\n * @param {string} str\n */\n\nconst unicodeLength = str => {\n  return toArray(str).length;\n};\n/**\n * @param {any} p\n * @return {any[]}\n */\n\nconst toArray = p => Array.from(p);\n\nexport { arrayToPattern, escape_regex, hasDuplicates, maxValueLength, sequencePattern, setToPattern, toArray, unicodeLength };\n//# sourceMappingURL=regex.js.map\n", "/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n * @param {string} input\n * @return {string[][]}\n */\nconst allSubstrings = input => {\n  if (input.length === 1) return [[input]];\n  /** @type {string[][]} */\n\n  let result = [];\n  const start = input.substring(1);\n  const suba = allSubstrings(start);\n  suba.forEach(function (subresult) {\n    let tmp = subresult.slice(0);\n    tmp[0] = input.charAt(0) + tmp[0];\n    result.push(tmp);\n    tmp = subresult.slice(0);\n    tmp.unshift(input.charAt(0));\n    result.push(tmp);\n  });\n  return result;\n};\n\nexport { allSubstrings };\n//# sourceMappingURL=strings.js.map\n", "/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\nimport { toArray, setToPattern, escape_regex, arrayToPattern, sequencePattern } from './regex.js';\nexport { escape_regex } from './regex.js';\nimport { allSubstrings } from './strings.js';\n\n/**\n * @typedef {{[key:string]:string}} TUnicodeMap\n * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n * @typedef {[[number,number]]} TCodePoints\n * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n */\n/** @type {TCodePoints} */\n\nconst code_points = [[0, 65535]];\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n/** @type {TUnicodeMap} */\n\nlet unicode_map;\n/** @type {RegExp} */\n\nlet multi_char_reg;\nconst max_char_length = 3;\n/** @type {TUnicodeMap} */\n\nconst latin_convert = {};\n/** @type {TUnicodeMap} */\n\nconst latin_condensed = {\n  '/': '⁄∕',\n  '0': '߀',\n  \"a\": \"ⱥɐɑ\",\n  \"aa\": \"ꜳ\",\n  \"ae\": \"æǽǣ\",\n  \"ao\": \"ꜵ\",\n  \"au\": \"ꜷ\",\n  \"av\": \"ꜹꜻ\",\n  \"ay\": \"ꜽ\",\n  \"b\": \"ƀɓƃ\",\n  \"c\": \"ꜿƈȼↄ\",\n  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n  \"e\": \"ɛǝᴇɇ\",\n  \"f\": \"ꝼƒ\",\n  \"g\": \"ǥɠꞡᵹꝿɢ\",\n  \"h\": \"ħⱨⱶɥ\",\n  \"i\": \"ɨı\",\n  \"j\": \"ɉȷ\",\n  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n  \"m\": \"ɱɯϻ\",\n  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n  \"o\": \"øǿɔɵꝋꝍᴑ\",\n  \"oe\": \"œ\",\n  \"oi\": \"ƣ\",\n  \"oo\": \"ꝏ\",\n  \"ou\": \"ȣ\",\n  \"p\": \"ƥᵽꝑꝓꝕρ\",\n  \"q\": \"ꝗꝙɋ\",\n  \"r\": \"ɍɽꝛꞧꞃ\",\n  \"s\": \"ßȿꞩꞅʂ\",\n  \"t\": \"ŧƭʈⱦꞇ\",\n  \"th\": \"þ\",\n  \"tz\": \"ꜩ\",\n  \"u\": \"ʉ\",\n  \"v\": \"ʋꝟʌ\",\n  \"vy\": \"ꝡ\",\n  \"w\": \"ⱳ\",\n  \"y\": \"ƴɏỿ\",\n  \"z\": \"ƶȥɀⱬꝣ\",\n  \"hv\": \"ƕ\"\n};\n\nfor (let latin in latin_condensed) {\n  let unicode = latin_condensed[latin] || '';\n\n  for (let i = 0; i < unicode.length; i++) {\n    let char = unicode.substring(i, i + 1);\n    latin_convert[char] = latin;\n  }\n}\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n/**\n * Initialize the unicode_map from the give code point ranges\n *\n * @param {TCodePoints=} _code_points\n */\n\nconst initialize = _code_points => {\n  if (unicode_map !== undefined) return;\n  unicode_map = generateMap(_code_points || code_points);\n};\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n * @param {string} str\n * @param {string} form\n */\n\nconst normalize = (str, form = 'NFKD') => str.normalize(form);\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n * @param {string} str\n * @return {string}\n */\n\nconst asciifold = str => {\n  return toArray(str).reduce(\n  /**\n   * @param {string} result\n   * @param {string} char\n   */\n  (result, char) => {\n    return result + _asciifold(char);\n  }, '');\n};\n/**\n * @param {string} str\n * @return {string}\n */\n\nconst _asciifold = str => {\n  str = normalize(str).toLowerCase().replace(convert_pat, (\n  /** @type {string} */\n  char) => {\n    return latin_convert[char] || '';\n  }); //return str;\n\n  return normalize(str, 'NFC');\n};\n/**\n * Generate a list of unicode variants from the list of code points\n * @param {TCodePoints} code_points\n * @yield {TCodePointObj}\n */\n\nfunction* generator(code_points) {\n  for (const [code_point_min, code_point_max] of code_points) {\n    for (let i = code_point_min; i <= code_point_max; i++) {\n      let composed = String.fromCharCode(i);\n      let folded = asciifold(composed);\n\n      if (folded == composed.toLowerCase()) {\n        continue;\n      } // skip when folded is a string longer than 3 characters long\n      // bc the resulting regex patterns will be long\n      // eg:\n      // folded صلى الله عليه وسلم length 18 code point 65018\n      // folded جل جلاله length 8 code point 65019\n\n\n      if (folded.length > max_char_length) {\n        continue;\n      }\n\n      if (folded.length == 0) {\n        continue;\n      }\n\n      yield {\n        folded: folded,\n        composed: composed,\n        code_point: i\n      };\n    }\n  }\n}\n/**\n * Generate a unicode map from the list of code points\n * @param {TCodePoints} code_points\n * @return {TUnicodeSets}\n */\n\nconst generateSets = code_points => {\n  /** @type {{[key:string]:Set<string>}} */\n  const unicode_sets = {};\n  /**\n   * @param {string} folded\n   * @param {string} to_add\n   */\n\n  const addMatching = (folded, to_add) => {\n    /** @type {Set<string>} */\n    const folded_set = unicode_sets[folded] || new Set();\n    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n    if (to_add.match(patt)) {\n      return;\n    }\n\n    folded_set.add(escape_regex(to_add));\n    unicode_sets[folded] = folded_set;\n  };\n\n  for (let value of generator(code_points)) {\n    addMatching(value.folded, value.folded);\n    addMatching(value.folded, value.composed);\n  }\n\n  return unicode_sets;\n};\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n *\n * @param {TCodePoints} code_points\n * @return {TUnicodeMap}\n */\n\nconst generateMap = code_points => {\n  /** @type {TUnicodeSets} */\n  const unicode_sets = generateSets(code_points);\n  /** @type {TUnicodeMap} */\n\n  const unicode_map = {};\n  /** @type {string[]} */\n\n  let multi_char = [];\n\n  for (let folded in unicode_sets) {\n    let set = unicode_sets[folded];\n\n    if (set) {\n      unicode_map[folded] = setToPattern(set);\n    }\n\n    if (folded.length > 1) {\n      multi_char.push(escape_regex(folded));\n    }\n  }\n\n  multi_char.sort((a, b) => b.length - a.length);\n  const multi_char_patt = arrayToPattern(multi_char);\n  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n  return unicode_map;\n};\n/**\n * Map each element of an array from it's folded value to all possible unicode matches\n * @param {string[]} strings\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst mapSequence = (strings, min_replacement = 1) => {\n  let chars_replaced = 0;\n  strings = strings.map(str => {\n    if (unicode_map[str]) {\n      chars_replaced += str.length;\n    }\n\n    return unicode_map[str] || str;\n  });\n\n  if (chars_replaced >= min_replacement) {\n    return sequencePattern(strings);\n  }\n\n  return '';\n};\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n *\n *\n * @param {string} str\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst substringsToPattern = (str, min_replacement = 1) => {\n  min_replacement = Math.max(min_replacement, str.length - 1);\n  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n    return mapSequence(sub_pat, min_replacement);\n  }));\n};\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n *\n * @param {Sequence[]} sequences\n * @param {boolean} all\n */\n\nconst sequencesToPattern = (sequences, all = true) => {\n  let min_replacement = sequences.length > 1 ? 1 : 0;\n  return arrayToPattern(sequences.map(sequence => {\n    let seq = [];\n    const len = all ? sequence.length() : sequence.length() - 1;\n\n    for (let j = 0; j < len; j++) {\n      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n    }\n\n    return sequencePattern(seq);\n  }));\n};\n/**\n * Return true if the sequence is already in the sequences\n * @param {Sequence} needle_seq\n * @param {Sequence[]} sequences\n */\n\n\nconst inSequences = (needle_seq, sequences) => {\n  for (const seq of sequences) {\n    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n      continue;\n    }\n\n    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n      continue;\n    }\n\n    let needle_parts = needle_seq.parts;\n    /**\n     * @param {TSequencePart} part\n     */\n\n    const filter = part => {\n      for (const needle_part of needle_parts) {\n        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n          return false;\n        }\n\n        if (part.length == 1 || needle_part.length == 1) {\n          continue;\n        } // check for overlapping parts\n        // a = ['::=','==']\n        // b = ['::','===']\n        // a = ['r','sm']\n        // b = ['rs','m']\n\n\n        if (part.start < needle_part.start && part.end > needle_part.start) {\n          return true;\n        }\n\n        if (needle_part.start < part.start && needle_part.end > part.start) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    let filtered = seq.parts.filter(filter);\n\n    if (filtered.length > 0) {\n      continue;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nclass Sequence {\n  constructor() {\n    /** @type {TSequencePart[]} */\n    this.parts = [];\n    /** @type {string[]} */\n\n    this.substrs = [];\n    this.start = 0;\n    this.end = 0;\n  }\n  /**\n   * @param {TSequencePart|undefined} part\n   */\n\n\n  add(part) {\n    if (part) {\n      this.parts.push(part);\n      this.substrs.push(part.substr);\n      this.start = Math.min(part.start, this.start);\n      this.end = Math.max(part.end, this.end);\n    }\n  }\n\n  last() {\n    return this.parts[this.parts.length - 1];\n  }\n\n  length() {\n    return this.parts.length;\n  }\n  /**\n   * @param {number} position\n   * @param {TSequencePart} last_piece\n   */\n\n\n  clone(position, last_piece) {\n    let clone = new Sequence();\n    let parts = JSON.parse(JSON.stringify(this.parts));\n    let last_part = parts.pop();\n\n    for (const part of parts) {\n      clone.add(part);\n    }\n\n    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n    let clone_last_len = last_substr.length;\n    clone.add({\n      start: last_part.start,\n      end: last_part.start + clone_last_len,\n      length: clone_last_len,\n      substr: last_substr\n    });\n    return clone;\n  }\n\n}\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n *\n * @param {string} str\n * @return {string|undefined}\n */\n\n\nconst getPattern = str => {\n  initialize();\n  str = asciifold(str);\n  let pattern = '';\n  let sequences = [new Sequence()];\n\n  for (let i = 0; i < str.length; i++) {\n    let substr = str.substring(i);\n    let match = substr.match(multi_char_reg);\n    const char = str.substring(i, i + 1);\n    const match_str = match ? match[0] : null; // loop through sequences\n    // add either the char or multi_match\n\n    let overlapping = [];\n    let added_types = new Set();\n\n    for (const sequence of sequences) {\n      const last_piece = sequence.last();\n\n      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n        // if we have a multi match\n        if (match_str) {\n          const len = match_str.length;\n          sequence.add({\n            start: i,\n            end: i + len,\n            length: len,\n            substr: match_str\n          });\n          added_types.add('1');\n        } else {\n          sequence.add({\n            start: i,\n            end: i + 1,\n            length: 1,\n            substr: char\n          });\n          added_types.add('2');\n        }\n      } else if (match_str) {\n        let clone = sequence.clone(i, last_piece);\n        const len = match_str.length;\n        clone.add({\n          start: i,\n          end: i + len,\n          length: len,\n          substr: match_str\n        });\n        overlapping.push(clone);\n      } else {\n        // don't add char\n        // adding would create invalid patterns: 234 => [2,34,4]\n        added_types.add('3');\n      }\n    } // if we have overlapping\n\n\n    if (overlapping.length > 0) {\n      // ['ii','iii'] before ['i','i','iii']\n      overlapping = overlapping.sort((a, b) => {\n        return a.length() - b.length();\n      });\n\n      for (let clone of overlapping) {\n        // don't add if we already have an equivalent sequence\n        if (inSequences(clone, sequences)) {\n          continue;\n        }\n\n        sequences.push(clone);\n      }\n\n      continue;\n    } // if we haven't done anything unique\n    // clean up the patterns\n    // helps keep patterns smaller\n    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n      pattern += sequencesToPattern(sequences, false);\n      let new_seq = new Sequence();\n      const old_seq = sequences[0];\n\n      if (old_seq) {\n        new_seq.add(old_seq.last());\n      }\n\n      sequences = [new_seq];\n    }\n  }\n\n  pattern += sequencesToPattern(sequences, true);\n  return pattern;\n};\n\nexport { _asciifold, asciifold, code_points, generateMap, generateSets, generator, getPattern, initialize, mapSequence, normalize, substringsToPattern, unicode_map };\n//# sourceMappingURL=index.js.map\n", "\nimport { asciifold } from '@orchidjs/unicode-variants';\nimport * as T from './types';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tif( token.regex == null ) return 0;\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\n\tif( typeof value == 'function' ) return value;\n\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n", "/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nimport { scoreValue, getAttr, getAttrNesting, propToArray, iterate, cmp } from './utils';\nimport { getPattern, escape_regex } from '@orchidjs/unicode-variants';\nimport * as T from './types';\n\nclass Sifter{\n\n\tpublic items: any; // []|{};\n\tpublic settings: T.Settings;\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t */\n\tconstructor(items:any, settings:T.Settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t */\n\ttokenize(query:string, respect_word_boundaries?:boolean, weights?:T.Weights ):T.Token[] {\n\t\tif (!query || !query.length) return [];\n\n\t\tconst tokens:T.Token[]\t= [];\n\t\tconst words\t\t\t\t= query.split(/\\s+/);\n\t\tvar field_regex:RegExp;\n\n\t\tif( weights ){\n\t\t\tfield_regex = new RegExp( '^('+ Object.keys(weights).map(escape_regex).join('|')+')\\:(.*)$');\n\t\t}\n\n\t\twords.forEach((word:string) => {\n\t\t\tlet field_match;\n\t\t\tlet field:null|string\t= null;\n\t\t\tlet regex:null|string\t= null;\n\n\t\t\t// look for \"field:query\" tokens\n\t\t\tif( field_regex && (field_match = word.match(field_regex)) ){\n\t\t\t\tfield\t= field_match[1]!;\n\t\t\t\tword\t= field_match[2]!;\n\t\t\t}\n\n\t\t\tif( word.length > 0 ){\n\t\t\t\tif( this.settings.diacritics ){\n\t\t\t\t\tregex = getPattern(word) || null;\n\t\t\t\t}else{\n\t\t\t\t\tregex = escape_regex(word);\n\t\t\t\t}\n\t\t\t\tif( regex && respect_word_boundaries ) regex = \"\\\\b\"+regex;\n\t\t\t}\n\n\t\t\ttokens.push({\n\t\t\t\tstring : word,\n\t\t\t\tregex  : regex ? new RegExp(regex,'iu') : null,\n\t\t\t\tfield  : field,\n\t\t\t});\n\t\t});\n\n\t\treturn tokens;\n\t};\n\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @returns {T.ScoreFn}\n\t */\n\tgetScoreFunction(query:string, options:T.UserOptions ){\n\t\tvar search = this.prepareSearch(query, options);\n\t\treturn this._getScoreFunction(search);\n\t}\n\n\t/**\n\t * @returns {T.ScoreFn}\n\t *\n\t */\n\t_getScoreFunction(search:T.PrepareObj ){\n\t\tconst tokens\t\t= search.tokens,\n\t\ttoken_count\t\t\t= tokens.length;\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\n\t\tconst fields\t= search.options.fields,\n\t\tweights\t\t\t= search.weights,\n\t\tfield_count\t\t= fields.length,\n\t\tgetAttrFn\t\t= search.getAttrFn;\n\n\t\tif (!field_count) {\n\t\t\treturn function() { return 1; };\n\t\t}\n\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t */\n\t\tconst scoreObject = (function() {\n\n\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\t\tconst field = fields[0]!.field;\n\t\t\t\t\treturn scoreValue(getAttrFn(data, field), token, weights[field]||1);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\tvar sum = 0;\n\n\t\t\t\t// is the token specific to a field?\n\t\t\t\tif( token.field ){\n\n\t\t\t\t\tconst value = getAttrFn(data, token.field);\n\n\t\t\t\t\tif( !token.regex && value ){\n\t\t\t\t\t\tsum += (1/field_count);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsum += scoreValue(value, token, 1);\n\t\t\t\t\t}\n\n\n\n\t\t\t\t}else{\n\t\t\t\t\titerate(weights, (weight:number, field:string) => {\n\t\t\t\t\t\tsum += scoreValue(getAttrFn(data, field), token, weight);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (token_count === 1) {\n\t\t\treturn function(data:{}) {\n\t\t\t\treturn scoreObject(tokens[0]!, data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar score, sum = 0;\n\t\t\t\tfor( let token of tokens){\n\t\t\t\t\tscore = scoreObject(token, data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar sum = 0;\n\t\t\t\titerate(tokens,(token:T.Token)=>{\n\t\t\t\t\tsum += scoreObject(token, data);\n\t\t\t\t});\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @return function(a,b)\n\t */\n\tgetSortFunction(query:string, options:T.UserOptions) {\n\t\tvar search  = this.prepareSearch(query, options);\n\t\treturn this._getSortFunction(search);\n\t}\n\n\t_getSortFunction(search:T.PrepareObj){\n\t\tvar implicit_score,\n\t\tsort_flds:T.Sort[]\t= [];\n\n\t\tconst self\t= this,\n\t\toptions\t\t= search.options,\n\t\tsort\t\t= (!search.query && options.sort_empty) ? options.sort_empty : options.sort;\n\n\n\t\tif( typeof sort == 'function' ){\n\t\t\treturn sort.bind(this);\n\t\t}\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t */\n\t\tconst get_field = function(name:string, result:T.ResultItem):string|number {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn search.getAttrFn(self.items[result.id], name);\n\t\t};\n\n\t\t// parse options\n\t\tif (sort) {\n\t\t\tfor( let s of sort ){\n\t\t\t\tif (search.query || s.field !== '$score') {\n\t\t\t\t\tsort_flds.push(s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor( let fld of sort_flds ){\n\t\t\t\tif( fld.field === '$score' ){\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tsort_flds.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\n\t\t// without a search.query, all items will have the same score\n\t\t} else {\n\t\t\tsort_flds = sort_flds.filter((fld) => fld.field !== '$score' );\n\t\t}\n\n\n\t\t// build function\n\t\tconst sort_flds_count = sort_flds.length;\n\t\tif (!sort_flds_count) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn function(a:T.ResultItem, b:T.ResultItem) {\n\t\t\tvar result, field;\n\t\t\tfor( let sort_fld of sort_flds ){\n\t\t\t\tfield = sort_fld.field;\n\n\t\t\t\tlet\tmultiplier = sort_fld.direction === 'desc' ? -1 : 1;\n\n\t\t\t\tresult = multiplier * cmp(\n\t\t\t\t\tget_field(field, a),\n\t\t\t\t\tget_field(field, b)\n\t\t\t\t);\n\t\t\t\tif (result) return result;\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t */\n\tprepareSearch(query:string, optsUser:T.UserOptions):T.PrepareObj {\n\t\tconst weights:T.Weights = {};\n\t\tvar options\t\t= Object.assign({},optsUser) as T.Options;\n\n\t\tpropToArray(options,'sort');\n\t\tpropToArray(options,'sort_empty');\n\n\t\t// convert fields to new format\n\t\tif( options.fields ){\n\t\t\tpropToArray(options,'fields');\n\t\t\tconst fields:T.Field[] = [];\n\t\t\toptions.fields.forEach((field:string|T.Field) => {\n\t\t\t\tif( typeof field == 'string' ){\n\t\t\t\t\tfield = {field:field,weight:1};\n\t\t\t\t}\n\t\t\t\tfields.push(field);\n\t\t\t\tweights[field.field] = ('weight' in field) ? field.weight : 1;\n\t\t\t});\n\t\t\toptions.fields = fields;\n\t\t}\n\n\n\t\treturn {\n\t\t\toptions\t\t: options as T.Options,\n\t\t\tquery\t\t: query.toLowerCase().trim(),\n\t\t\ttokens\t\t: this.tokenize(query, options.respect_word_boundaries, weights),\n\t\t\ttotal\t\t: 0,\n\t\t\titems\t\t: [],\n\t\t\tweights\t\t: weights,\n\t\t\tgetAttrFn\t: (options.nesting) ? getAttrNesting : getAttr,\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string, options:T.UserOptions) : T.PrepareObj {\n\t\tvar self = this, score, search: T.PrepareObj;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tconst fn_score:T.ScoreFn = options.score || self._getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\titerate(self.items, (item:T.ResultItem, id:string|number) => {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\titerate(self.items, (_:T.ResultItem, id:string|number) => {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tconst fn_sort = self._getSortFunction(search);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n}\n\nexport { Sifter, scoreValue, getAttr, getAttrNesting, propToArray, iterate, cmp, getPattern }\n", "\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {string[]} chars\n * @return {string}\n */\nexport const arrayToPattern = (chars) =>{\n\n\tchars = chars.filter( Boolean );\n\n\tif( chars.length < 2 ){\n\t\treturn chars[0] || '';\n\t}\n\n\treturn (maxValueLength(chars) == 1) ? '['+chars.join('')+']' : '(?:'+chars.join('|')+')';\n};\n\n/**\n * @param {string[]} array\n * @return {string}\n */\nexport const sequencePattern = (array)=>{\n\n\tif( !hasDuplicates(array) ){\n\t\treturn array.join('');\n\t}\n\n\tlet pattern = '';\n\tlet prev_char_count = 0;\n\n\tconst prev_pattern = ()=>{\n\t\tif( prev_char_count > 1 ){\n\t\t\tpattern += '{'+prev_char_count+'}';\n\t\t}\n\t}\n\n\tarray.forEach((char,i)=>{\n\n\t\tif( char === array[i-1] ){\n\t\t\tprev_char_count++;\n\t\t\treturn;\n\t\t}\n\n\t\tprev_pattern();\n\n\t\tpattern += char;\n\t\tprev_char_count = 1;\n\t});\n\n\tprev_pattern();\n\n\treturn pattern;\n\n}\n\n\n\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {Set<string>} chars\n * @return {string}\n */\nexport const setToPattern = (chars)=>{\n\tlet array = toArray(chars);\n\treturn arrayToPattern(array);\n}\n\n\n\n/**\n *\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n * @param {any[]} array\n */\nexport const hasDuplicates = (array) => {\n    return (new Set(array)).size !== array.length;\n}\n\n\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n * @param {string} str\n * @return {string}\n */\nexport const escape_regex = (str) => {\n\treturn (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n\n/**\n * Return the max length of array values\n * @param {string[]} array\n *\n */\nexport const maxValueLength = (array) => {\n\treturn array.reduce( (longest, value) => Math.max(longest,unicodeLength(value)),0);\n}\n\n\n/**\n * @param {string} str\n */\nexport const unicodeLength = (str) => {\n\treturn toArray(str).length;\n}\n\n/**\n * @param {any} p\n * @return {any[]}\n */\nexport const toArray = (p) => Array.from(p);\n", "\n\n\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n * @param {string} input\n * @return {string[][]}\n */\nexport const allSubstrings = (input) => {\n\n    if( input.length === 1) return [[input]];\n\n\t/** @type {string[][]} */\n    let result = [];\n\n\tconst start = input.substring(1);\n    const suba = allSubstrings(start);\n\n\tsuba.forEach(function(subresult) {\n        let tmp = subresult.slice(0);\n        tmp[0] = input.charAt(0) + tmp[0];\n        result.push(tmp);\n\n        tmp = subresult.slice(0);\n        tmp.unshift(input.charAt(0));\n        result.push(tmp);\n    });\n\n    return result;\n}\n", "\n/**\n * @typedef {{[key:string]:string}} TUnicodeMap\n * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n * @typedef {[[number,number]]} TCodePoints\n * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n */\n\n\nimport { setToPattern, arrayToPattern, escape_regex, sequencePattern, toArray } from './regex.mjs';\nimport { allSubstrings } from './strings.mjs';\n\n\n/** @type {TCodePoints} */\nexport const code_points = [[ 0, 65535 ]];\n\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n\n/** @type {TUnicodeMap} */\nexport let unicode_map;\n\n/** @type {RegExp} */\nlet multi_char_reg;\n\nconst max_char_length = 3;\n\n/** @type {TUnicodeMap} */\nconst latin_convert = {}\n\n/** @type {TUnicodeMap} */\nconst latin_condensed = {\n\t'/': '⁄∕',\n\t'0': '߀',\n\t\"a\": \"ⱥɐɑ\",\n\t\"aa\": \"ꜳ\",\n\t\"ae\": \"æǽǣ\",\n\t\"ao\": \"ꜵ\",\n\t\"au\": \"ꜷ\",\n\t\"av\": \"ꜹꜻ\",\n\t\"ay\": \"ꜽ\",\n\t\"b\": \"ƀɓƃ\",\n\t\"c\": \"ꜿƈȼↄ\",\n\t\"d\": \"đɗɖᴅƌꮷԁɦ\",\n\t\"e\": \"ɛǝᴇɇ\",\n\t\"f\": \"ꝼƒ\",\n\t\"g\": \"ǥɠꞡᵹꝿɢ\",\n\t\"h\": \"ħⱨⱶɥ\",\n\t\"i\": \"ɨı\",\n\t\"j\": \"ɉȷ\",\n\t\"k\": \"ƙⱪꝁꝃꝅꞣ\",\n\t\"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n\t\"m\": \"ɱɯϻ\",\n\t\"n\": \"ꞥƞɲꞑᴎлԉ\",\n\t\"o\": \"øǿɔɵꝋꝍᴑ\",\n\t\"oe\": \"œ\",\n\t\"oi\": \"ƣ\",\n\t\"oo\": \"ꝏ\",\n\t\"ou\": \"ȣ\",\n\t\"p\": \"ƥᵽꝑꝓꝕρ\",\n\t\"q\": \"ꝗꝙɋ\",\n\t\"r\": \"ɍɽꝛꞧꞃ\",\n\t\"s\": \"ßȿꞩꞅʂ\",\n\t\"t\": \"ŧƭʈⱦꞇ\",\n\t\"th\": \"þ\",\n\t\"tz\": \"ꜩ\",\n\t\"u\": \"ʉ\",\n\t\"v\": \"ʋꝟʌ\",\n\t\"vy\": \"ꝡ\",\n\t\"w\": \"ⱳ\",\n\t\"y\": \"ƴɏỿ\",\n\t\"z\": \"ƶȥɀⱬꝣ\",\n\t\"hv\": \"ƕ\"\n}\n\n\nfor( let latin in latin_condensed ){\n\tlet unicode = latin_condensed[latin] || '';\n\tfor( let i = 0; i < unicode.length; i++){\n\t\tlet char\t= unicode.substring(i,i+1);\n\t\tlatin_convert[char] = latin;\n\t}\n}\n\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|')+'|'+accent_pat,'gu');\n\n\n\n/**\n * Initialize the unicode_map from the give code point ranges\n *\n * @param {TCodePoints=} _code_points\n */\nexport const initialize = (_code_points) => {\n\tif( unicode_map !== undefined ) return;\n\tunicode_map = generateMap(_code_points || code_points );\n}\n\n\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n * @param {string} str\n * @param {string} form\n */\nexport const normalize = (str,form='NFKD') => str.normalize(form);\n\n\n\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n * @param {string} str\n * @return {string}\n */\nexport const asciifold = (str) => {\n\n\treturn toArray(str).reduce(\n\t\t/**\n\t\t * @param {string} result\n\t\t * @param {string} char\n\t\t */\n\t\t(result, char) =>{\n\t\t\treturn result + _asciifold(char)\n\t\t},\n\t\t''\n\t);\n};\n\n/**\n * @param {string} str\n * @return {string}\n */\nexport const _asciifold = (str) => {\n\tstr = normalize(str)\n\t\t.toLowerCase()\n\t\t.replace(convert_pat,(/** @type {string} */ char) => {\n\t\t\treturn latin_convert[char] || '';\n\t\t})\n\n\t//return str;\n\treturn normalize(str,'NFC')\n};\n\n\n\n\n\n\n/**\n * Generate a list of unicode variants from the list of code points\n * @param {TCodePoints} code_points\n * @yield {TCodePointObj}\n */\nexport function* generator(code_points){\n\n\tfor(const [code_point_min, code_point_max] of code_points){\n\t\tfor(let i = code_point_min; i <= code_point_max; i++){\n\n\t\t\tlet composed\t\t= String.fromCharCode(i);\n\t\t\tlet folded\t\t\t= asciifold(composed);\n\n\n\t\t\tif( folded == composed.toLowerCase() ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// skip when folded is a string longer than 3 characters long\n\t\t\t// bc the resulting regex patterns will be long\n\t\t\t// eg:\n\t\t\t// folded صلى الله عليه وسلم length 18 code point 65018\n\t\t\t// folded جل جلاله length 8 code point 65019\n\t\t\tif( folded.length > max_char_length ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( folded.length == 0 ){\n\t\t\t\tcontinue\n\t\t\t}\n\n\n\t\t\tyield {folded:folded,composed:composed,code_point:i};\n\t\t}\n\t}\n}\n\n\n/**\n * Generate a unicode map from the list of code points\n * @param {TCodePoints} code_points\n * @return {TUnicodeSets}\n */\nexport const generateSets = (code_points) => {\n\n\t/** @type {{[key:string]:Set<string>}} */\n\tconst unicode_sets = {};\n\n\n\t/**\n\t * @param {string} folded\n\t * @param {string} to_add\n\t */\n\tconst addMatching = (folded,to_add) => {\n\n\t\t/** @type {Set<string>} */\n\t\tconst folded_set = unicode_sets[folded] || new Set();\n\n\t\tconst patt = new RegExp( '^'+setToPattern(folded_set)+'$','iu');\n\t\tif( to_add.match(patt) ){\n\t\t\treturn;\n\t\t}\n\n\t\tfolded_set.add(escape_regex(to_add));\n\t\tunicode_sets[folded] = folded_set;\n\t}\n\n\n\tfor( let value of generator(code_points) ){\n\t\taddMatching(value.folded,value.folded);\n\t\taddMatching(value.folded,value.composed);\n\t}\n\n\treturn unicode_sets;\n}\n\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n *\n * @param {TCodePoints} code_points\n * @return {TUnicodeMap}\n */\nexport const generateMap = (code_points) => {\n\n\t/** @type {TUnicodeSets} */\n\tconst unicode_sets = generateSets(code_points);\n\n\t/** @type {TUnicodeMap} */\n\tconst unicode_map = {};\n\n\t/** @type {string[]} */\n\tlet multi_char = [];\n\n\tfor( let folded in unicode_sets ){\n\n\t\tlet set = unicode_sets[folded];\n\t\tif( set ){\n\t\t\tunicode_map[folded] = setToPattern(set);\n\t\t}\n\n\t\tif( folded.length > 1 ){\n\t\t\tmulti_char.push(escape_regex(folded));\n\t\t}\n\t}\n\n\tmulti_char.sort((a, b) => b.length - a.length );\n\tconst multi_char_patt = arrayToPattern(multi_char);\n\tmulti_char_reg = new RegExp('^'+multi_char_patt,'u');\n\n\treturn unicode_map;\n}\n\n\n/**\n * Map each element of an array from it's folded value to all possible unicode matches\n * @param {string[]} strings\n * @param {number} min_replacement\n * @return {string}\n */\nexport const mapSequence = (strings,min_replacement=1) =>{\n\tlet chars_replaced = 0;\n\n\n\tstrings = strings.map((str)=>{\n\t\tif( unicode_map[str] ){\n\t\t\tchars_replaced += str.length;\n\t\t}\n\t\treturn unicode_map[str] || str;\n\t});\n\n\tif( chars_replaced >= min_replacement ){\n\t\treturn sequencePattern(strings);\n\t}\n\n\treturn '';\n}\n\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n *\n *\n * @param {string} str\n * @param {number} min_replacement\n * @return {string}\n */\nexport const substringsToPattern = (str,min_replacement=1) => {\n\n\tmin_replacement = Math.max(min_replacement,str.length-1);\n\n\treturn arrayToPattern(\n\t\tallSubstrings(str).map( (sub_pat) =>{\n\t\t\treturn mapSequence(sub_pat,min_replacement)\n\t\t})\n\t);\n}\n\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n *\n * @param {Sequence[]} sequences\n * @param {boolean} all\n */\nconst sequencesToPattern = (sequences,all=true) => {\n\n\tlet min_replacement = sequences.length > 1 ? 1 : 0;\n\treturn arrayToPattern(\n\t\tsequences.map( (sequence) =>{\n\t\t\tlet seq = [];\n\t\t\tconst len = all ? sequence.length() : sequence.length() - 1;\n\t\t\tfor( let j = 0; j < len; j++){\n\t\t\t\tseq.push(substringsToPattern(sequence.substrs[j]||'',min_replacement));\n\t\t\t}\n\n\t\t\treturn sequencePattern(seq);\n\t\t})\n\t);\n}\n\n/**\n * Return true if the sequence is already in the sequences\n * @param {Sequence} needle_seq\n * @param {Sequence[]} sequences\n */\nconst inSequences = (needle_seq, sequences) => {\n\n\tfor(const seq of sequences){\n\n\t\tif( seq.start != needle_seq.start || seq.end != needle_seq.end ){\n\t\t\tcontinue;\n\t\t}\n\n\t\tif( seq.substrs.join('') !== needle_seq.substrs.join('') ){\n\t\t\tcontinue;\n\t\t}\n\n\n\t\tlet needle_parts\t= needle_seq.parts;\n\n\t\t/**\n\t\t * @param {TSequencePart} part\n\t\t */\n\t\tconst filter = (part) =>{\n\n\t\t\tfor(const needle_part of needle_parts){\n\n\t\t\t\tif( needle_part.start === part.start && needle_part.substr === part.substr ){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif( part.length == 1 || needle_part.length == 1 ){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\n\t\t\t\t// check for overlapping parts\n\t\t\t\t// a = ['::=','==']\n\t\t\t\t// b = ['::','===']\n\t\t\t\t// a = ['r','sm']\n\t\t\t\t// b = ['rs','m']\n\t\t\t\tif( part.start < needle_part.start && part.end > needle_part.start ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif( needle_part.start < part.start && needle_part.end > part.start ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\tlet filtered = seq.parts.filter(filter);\n\n\t\tif( filtered.length > 0 ){\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nclass Sequence{\n\n\tconstructor(){\n\n\t\t/** @type {TSequencePart[]} */\n\t\tthis.parts\t\t= [];\n\n\t\t/** @type {string[]} */\n\t\tthis.substrs\t= [];\n\t\tthis.start\t\t= 0;\n\t\tthis.end\t\t= 0;\n\t}\n\n\t/**\n\t * @param {TSequencePart|undefined} part\n\t */\n\tadd(part){\n\t\tif( part ){\n\t\t\tthis.parts.push(part);\n\t\t\tthis.substrs.push(part.substr);\n\t\t\tthis.start\t= Math.min(part.start,this.start);\n\t\t\tthis.end\t= Math.max(part.end,this.end);\n\t\t}\n\t}\n\n\tlast(){\n\t\treturn this.parts[this.parts.length-1];\n\t}\n\n\tlength(){\n\t\treturn this.parts.length;\n\t}\n\n\t/**\n\t * @param {number} position\n\t * @param {TSequencePart} last_piece\n\t */\n\tclone(position, last_piece){\n\t\tlet clone = new Sequence();\n\n\t\tlet parts = JSON.parse(JSON.stringify(this.parts));\n\t\tlet last_part = parts.pop();\n\t\tfor( const part of parts ){\n\t\t\tclone.add(part);\n\t\t}\n\n\t\tlet last_substr = last_piece.substr.substring(0,position-last_part.start);\n\t\tlet clone_last_len = last_substr.length;\n\t\tclone.add({start:last_part.start,end:last_part.start+clone_last_len,length:clone_last_len,substr:last_substr});\n\n\t\treturn clone;\n\t}\n\n}\n\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n *\n * @param {string} str\n * @return {string|undefined}\n */\nexport const getPattern = (str) => {\n\tinitialize();\n\n\tstr\t\t\t\t\t= asciifold(str);\n\n\tlet pattern\t\t\t= '';\n\tlet sequences\t\t= [new Sequence()];\n\n\tfor( let i = 0; i < str.length; i++ ){\n\n\t\tlet substr\t= str.substring(i);\n\t\tlet match\t= substr.match(multi_char_reg);\n\t\tconst char\t= str.substring(i,i+1);\n\t\tconst match_str = match ? match[0] : null;\n\n\n\t\t// loop through sequences\n\t\t// add either the char or multi_match\n\t\tlet overlapping\t\t= [];\n\t\tlet added_types\t\t= new Set();\n\t\tfor(const sequence of sequences){\n\n\t\t\tconst last_piece\t= sequence.last();\n\n\n\t\t\tif( !last_piece || last_piece.length == 1 || last_piece.end <= i ){\n\n\t\t\t\t// if we have a multi match\n\t\t\t\tif( match_str ){\n\t\t\t\t\tconst len = match_str.length;\n\t\t\t\t\tsequence.add({start:i,end:i+len,length:len,substr:match_str});\n\t\t\t\t\tadded_types.add('1');\n\t\t\t\t}else{\n\t\t\t\t\tsequence.add({start:i,end:i+1,length:1,substr:char});\n\t\t\t\t\tadded_types.add('2');\n\t\t\t\t}\n\n\t\t\t}else if( match_str ){\n\n\t\t\t\tlet clone = sequence.clone(i,last_piece);\n\n\t\t\t\tconst len = match_str.length;\n\t\t\t\tclone.add({start:i,end:i+len,length:len,substr:match_str});\n\n\t\t\t\toverlapping.push(clone);\n\n\t\t\t}else{\n\t\t\t\t// don't add char\n\t\t\t\t// adding would create invalid patterns: 234 => [2,34,4]\n\t\t\t\tadded_types.add('3');\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if we have overlapping\n\t\tif( overlapping.length > 0 ){\n\n\t\t\t// ['ii','iii'] before ['i','i','iii']\n\t\t\toverlapping = overlapping.sort((a,b)=>{\n\t\t\t\treturn a.length() - b.length();\n\t\t\t});\n\n\t\t\tfor( let clone of overlapping){\n\n\t\t\t\t// don't add if we already have an equivalent sequence\n\t\t\t\tif( inSequences(clone, sequences) ){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tsequences.push(clone);\n\t\t\t}\n\n\t\t\tcontinue;\n\t\t}\n\n\n\t\t// if we haven't done anything unique\n\t\t// clean up the patterns\n\t\t// helps keep patterns smaller\n\t\t// if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\t\tif( i > 0 && added_types.size == 1 && !added_types.has('3') ){\n\t\t\tpattern += sequencesToPattern(sequences,false);\n\t\t\tlet new_seq = new Sequence();\n\t\t\tconst old_seq = sequences[0];\n\t\t\tif( old_seq ){\n\t\t\t\tnew_seq.add(old_seq.last());\n\t\t\t}\n\t\t\tsequences = [new_seq];\n\t\t}\n\n\t}\n\n\tpattern += sequencesToPattern(sequences,true);\n\n\treturn pattern;\n}\n\n\nexport { escape_regex };\n", "/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = this._events[event] || [];\n\t\t\tevent_array.push(fct);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1){\n\t\t\t\tdelete this._events[event];\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst event_array = this._events[event];\n\t\t\tif( event_array === undefined ) return;\n\n\t\t\tevent_array.splice(event_array.indexOf(fct), 1);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = self._events[event];\n\t\t\tif( event_array === undefined ) return;\n\t\t\tevent_array.forEach(fct => {\n\t\t\t\tfct.apply(self, args );\n\t\t\t});\n\n\t\t});\n\t}\n};\n", "/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\nexport type TPluginItem = {name:string,options:{}};\nexport type TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n", "/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {string[]} chars\n * @return {string}\n */\nconst arrayToPattern = chars => {\n  chars = chars.filter(Boolean);\n\n  if (chars.length < 2) {\n    return chars[0] || '';\n  }\n\n  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\n/**\n * @param {string[]} array\n * @return {string}\n */\n\nconst sequencePattern = array => {\n  if (!hasDuplicates(array)) {\n    return array.join('');\n  }\n\n  let pattern = '';\n  let prev_char_count = 0;\n\n  const prev_pattern = () => {\n    if (prev_char_count > 1) {\n      pattern += '{' + prev_char_count + '}';\n    }\n  };\n\n  array.forEach((char, i) => {\n    if (char === array[i - 1]) {\n      prev_char_count++;\n      return;\n    }\n\n    prev_pattern();\n    pattern += char;\n    prev_char_count = 1;\n  });\n  prev_pattern();\n  return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {Set<string>} chars\n * @return {string}\n */\n\nconst setToPattern = chars => {\n  let array = toArray(chars);\n  return arrayToPattern(array);\n};\n/**\n *\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n * @param {any[]} array\n */\n\nconst hasDuplicates = array => {\n  return new Set(array).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n * @param {string} str\n * @return {string}\n */\n\nconst escape_regex = str => {\n  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n * @param {string[]} array\n *\n */\n\nconst maxValueLength = array => {\n  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\n/**\n * @param {string} str\n */\n\nconst unicodeLength = str => {\n  return toArray(str).length;\n};\n/**\n * @param {any} p\n * @return {any[]}\n */\n\nconst toArray = p => Array.from(p);\n\nexport { arrayToPattern, escape_regex, hasDuplicates, maxValueLength, sequencePattern, setToPattern, toArray, unicodeLength };\n//# sourceMappingURL=regex.js.map\n", "/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n * @param {string} input\n * @return {string[][]}\n */\nconst allSubstrings = input => {\n  if (input.length === 1) return [[input]];\n  /** @type {string[][]} */\n\n  let result = [];\n  const start = input.substring(1);\n  const suba = allSubstrings(start);\n  suba.forEach(function (subresult) {\n    let tmp = subresult.slice(0);\n    tmp[0] = input.charAt(0) + tmp[0];\n    result.push(tmp);\n    tmp = subresult.slice(0);\n    tmp.unshift(input.charAt(0));\n    result.push(tmp);\n  });\n  return result;\n};\n\nexport { allSubstrings };\n//# sourceMappingURL=strings.js.map\n", "/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\nimport { toArray, setToPattern, escape_regex, arrayToPattern, sequencePattern } from './regex.js';\nexport { escape_regex } from './regex.js';\nimport { allSubstrings } from './strings.js';\n\n/**\n * @typedef {{[key:string]:string}} TUnicodeMap\n * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n * @typedef {[[number,number]]} TCodePoints\n * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n */\n/** @type {TCodePoints} */\n\nconst code_points = [[0, 65535]];\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n/** @type {TUnicodeMap} */\n\nlet unicode_map;\n/** @type {RegExp} */\n\nlet multi_char_reg;\nconst max_char_length = 3;\n/** @type {TUnicodeMap} */\n\nconst latin_convert = {};\n/** @type {TUnicodeMap} */\n\nconst latin_condensed = {\n  '/': '⁄∕',\n  '0': '߀',\n  \"a\": \"ⱥɐɑ\",\n  \"aa\": \"ꜳ\",\n  \"ae\": \"æǽǣ\",\n  \"ao\": \"ꜵ\",\n  \"au\": \"ꜷ\",\n  \"av\": \"ꜹꜻ\",\n  \"ay\": \"ꜽ\",\n  \"b\": \"ƀɓƃ\",\n  \"c\": \"ꜿƈȼↄ\",\n  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n  \"e\": \"ɛǝᴇɇ\",\n  \"f\": \"ꝼƒ\",\n  \"g\": \"ǥɠꞡᵹꝿɢ\",\n  \"h\": \"ħⱨⱶɥ\",\n  \"i\": \"ɨı\",\n  \"j\": \"ɉȷ\",\n  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n  \"m\": \"ɱɯϻ\",\n  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n  \"o\": \"øǿɔɵꝋꝍᴑ\",\n  \"oe\": \"œ\",\n  \"oi\": \"ƣ\",\n  \"oo\": \"ꝏ\",\n  \"ou\": \"ȣ\",\n  \"p\": \"ƥᵽꝑꝓꝕρ\",\n  \"q\": \"ꝗꝙɋ\",\n  \"r\": \"ɍɽꝛꞧꞃ\",\n  \"s\": \"ßȿꞩꞅʂ\",\n  \"t\": \"ŧƭʈⱦꞇ\",\n  \"th\": \"þ\",\n  \"tz\": \"ꜩ\",\n  \"u\": \"ʉ\",\n  \"v\": \"ʋꝟʌ\",\n  \"vy\": \"ꝡ\",\n  \"w\": \"ⱳ\",\n  \"y\": \"ƴɏỿ\",\n  \"z\": \"ƶȥɀⱬꝣ\",\n  \"hv\": \"ƕ\"\n};\n\nfor (let latin in latin_condensed) {\n  let unicode = latin_condensed[latin] || '';\n\n  for (let i = 0; i < unicode.length; i++) {\n    let char = unicode.substring(i, i + 1);\n    latin_convert[char] = latin;\n  }\n}\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n/**\n * Initialize the unicode_map from the give code point ranges\n *\n * @param {TCodePoints=} _code_points\n */\n\nconst initialize = _code_points => {\n  if (unicode_map !== undefined) return;\n  unicode_map = generateMap(_code_points || code_points);\n};\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n * @param {string} str\n * @param {string} form\n */\n\nconst normalize = (str, form = 'NFKD') => str.normalize(form);\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n * @param {string} str\n * @return {string}\n */\n\nconst asciifold = str => {\n  return toArray(str).reduce(\n  /**\n   * @param {string} result\n   * @param {string} char\n   */\n  (result, char) => {\n    return result + _asciifold(char);\n  }, '');\n};\n/**\n * @param {string} str\n * @return {string}\n */\n\nconst _asciifold = str => {\n  str = normalize(str).toLowerCase().replace(convert_pat, (\n  /** @type {string} */\n  char) => {\n    return latin_convert[char] || '';\n  }); //return str;\n\n  return normalize(str, 'NFC');\n};\n/**\n * Generate a list of unicode variants from the list of code points\n * @param {TCodePoints} code_points\n * @yield {TCodePointObj}\n */\n\nfunction* generator(code_points) {\n  for (const [code_point_min, code_point_max] of code_points) {\n    for (let i = code_point_min; i <= code_point_max; i++) {\n      let composed = String.fromCharCode(i);\n      let folded = asciifold(composed);\n\n      if (folded == composed.toLowerCase()) {\n        continue;\n      } // skip when folded is a string longer than 3 characters long\n      // bc the resulting regex patterns will be long\n      // eg:\n      // folded صلى الله عليه وسلم length 18 code point 65018\n      // folded جل جلاله length 8 code point 65019\n\n\n      if (folded.length > max_char_length) {\n        continue;\n      }\n\n      if (folded.length == 0) {\n        continue;\n      }\n\n      yield {\n        folded: folded,\n        composed: composed,\n        code_point: i\n      };\n    }\n  }\n}\n/**\n * Generate a unicode map from the list of code points\n * @param {TCodePoints} code_points\n * @return {TUnicodeSets}\n */\n\nconst generateSets = code_points => {\n  /** @type {{[key:string]:Set<string>}} */\n  const unicode_sets = {};\n  /**\n   * @param {string} folded\n   * @param {string} to_add\n   */\n\n  const addMatching = (folded, to_add) => {\n    /** @type {Set<string>} */\n    const folded_set = unicode_sets[folded] || new Set();\n    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n    if (to_add.match(patt)) {\n      return;\n    }\n\n    folded_set.add(escape_regex(to_add));\n    unicode_sets[folded] = folded_set;\n  };\n\n  for (let value of generator(code_points)) {\n    addMatching(value.folded, value.folded);\n    addMatching(value.folded, value.composed);\n  }\n\n  return unicode_sets;\n};\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n *\n * @param {TCodePoints} code_points\n * @return {TUnicodeMap}\n */\n\nconst generateMap = code_points => {\n  /** @type {TUnicodeSets} */\n  const unicode_sets = generateSets(code_points);\n  /** @type {TUnicodeMap} */\n\n  const unicode_map = {};\n  /** @type {string[]} */\n\n  let multi_char = [];\n\n  for (let folded in unicode_sets) {\n    let set = unicode_sets[folded];\n\n    if (set) {\n      unicode_map[folded] = setToPattern(set);\n    }\n\n    if (folded.length > 1) {\n      multi_char.push(escape_regex(folded));\n    }\n  }\n\n  multi_char.sort((a, b) => b.length - a.length);\n  const multi_char_patt = arrayToPattern(multi_char);\n  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n  return unicode_map;\n};\n/**\n * Map each element of an array from it's folded value to all possible unicode matches\n * @param {string[]} strings\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst mapSequence = (strings, min_replacement = 1) => {\n  let chars_replaced = 0;\n  strings = strings.map(str => {\n    if (unicode_map[str]) {\n      chars_replaced += str.length;\n    }\n\n    return unicode_map[str] || str;\n  });\n\n  if (chars_replaced >= min_replacement) {\n    return sequencePattern(strings);\n  }\n\n  return '';\n};\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n *\n *\n * @param {string} str\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst substringsToPattern = (str, min_replacement = 1) => {\n  min_replacement = Math.max(min_replacement, str.length - 1);\n  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n    return mapSequence(sub_pat, min_replacement);\n  }));\n};\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n *\n * @param {Sequence[]} sequences\n * @param {boolean} all\n */\n\nconst sequencesToPattern = (sequences, all = true) => {\n  let min_replacement = sequences.length > 1 ? 1 : 0;\n  return arrayToPattern(sequences.map(sequence => {\n    let seq = [];\n    const len = all ? sequence.length() : sequence.length() - 1;\n\n    for (let j = 0; j < len; j++) {\n      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n    }\n\n    return sequencePattern(seq);\n  }));\n};\n/**\n * Return true if the sequence is already in the sequences\n * @param {Sequence} needle_seq\n * @param {Sequence[]} sequences\n */\n\n\nconst inSequences = (needle_seq, sequences) => {\n  for (const seq of sequences) {\n    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n      continue;\n    }\n\n    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n      continue;\n    }\n\n    let needle_parts = needle_seq.parts;\n    /**\n     * @param {TSequencePart} part\n     */\n\n    const filter = part => {\n      for (const needle_part of needle_parts) {\n        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n          return false;\n        }\n\n        if (part.length == 1 || needle_part.length == 1) {\n          continue;\n        } // check for overlapping parts\n        // a = ['::=','==']\n        // b = ['::','===']\n        // a = ['r','sm']\n        // b = ['rs','m']\n\n\n        if (part.start < needle_part.start && part.end > needle_part.start) {\n          return true;\n        }\n\n        if (needle_part.start < part.start && needle_part.end > part.start) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    let filtered = seq.parts.filter(filter);\n\n    if (filtered.length > 0) {\n      continue;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nclass Sequence {\n  constructor() {\n    /** @type {TSequencePart[]} */\n    this.parts = [];\n    /** @type {string[]} */\n\n    this.substrs = [];\n    this.start = 0;\n    this.end = 0;\n  }\n  /**\n   * @param {TSequencePart|undefined} part\n   */\n\n\n  add(part) {\n    if (part) {\n      this.parts.push(part);\n      this.substrs.push(part.substr);\n      this.start = Math.min(part.start, this.start);\n      this.end = Math.max(part.end, this.end);\n    }\n  }\n\n  last() {\n    return this.parts[this.parts.length - 1];\n  }\n\n  length() {\n    return this.parts.length;\n  }\n  /**\n   * @param {number} position\n   * @param {TSequencePart} last_piece\n   */\n\n\n  clone(position, last_piece) {\n    let clone = new Sequence();\n    let parts = JSON.parse(JSON.stringify(this.parts));\n    let last_part = parts.pop();\n\n    for (const part of parts) {\n      clone.add(part);\n    }\n\n    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n    let clone_last_len = last_substr.length;\n    clone.add({\n      start: last_part.start,\n      end: last_part.start + clone_last_len,\n      length: clone_last_len,\n      substr: last_substr\n    });\n    return clone;\n  }\n\n}\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n *\n * @param {string} str\n * @return {string|undefined}\n */\n\n\nconst getPattern = str => {\n  initialize();\n  str = asciifold(str);\n  let pattern = '';\n  let sequences = [new Sequence()];\n\n  for (let i = 0; i < str.length; i++) {\n    let substr = str.substring(i);\n    let match = substr.match(multi_char_reg);\n    const char = str.substring(i, i + 1);\n    const match_str = match ? match[0] : null; // loop through sequences\n    // add either the char or multi_match\n\n    let overlapping = [];\n    let added_types = new Set();\n\n    for (const sequence of sequences) {\n      const last_piece = sequence.last();\n\n      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n        // if we have a multi match\n        if (match_str) {\n          const len = match_str.length;\n          sequence.add({\n            start: i,\n            end: i + len,\n            length: len,\n            substr: match_str\n          });\n          added_types.add('1');\n        } else {\n          sequence.add({\n            start: i,\n            end: i + 1,\n            length: 1,\n            substr: char\n          });\n          added_types.add('2');\n        }\n      } else if (match_str) {\n        let clone = sequence.clone(i, last_piece);\n        const len = match_str.length;\n        clone.add({\n          start: i,\n          end: i + len,\n          length: len,\n          substr: match_str\n        });\n        overlapping.push(clone);\n      } else {\n        // don't add char\n        // adding would create invalid patterns: 234 => [2,34,4]\n        added_types.add('3');\n      }\n    } // if we have overlapping\n\n\n    if (overlapping.length > 0) {\n      // ['ii','iii'] before ['i','i','iii']\n      overlapping = overlapping.sort((a, b) => {\n        return a.length() - b.length();\n      });\n\n      for (let clone of overlapping) {\n        // don't add if we already have an equivalent sequence\n        if (inSequences(clone, sequences)) {\n          continue;\n        }\n\n        sequences.push(clone);\n      }\n\n      continue;\n    } // if we haven't done anything unique\n    // clean up the patterns\n    // helps keep patterns smaller\n    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n      pattern += sequencesToPattern(sequences, false);\n      let new_seq = new Sequence();\n      const old_seq = sequences[0];\n\n      if (old_seq) {\n        new_seq.add(old_seq.last());\n      }\n\n      sequences = [new_seq];\n    }\n  }\n\n  pattern += sequencesToPattern(sequences, true);\n  return pattern;\n};\n\nexport { _asciifold, asciifold, code_points, generateMap, generateSets, generator, getPattern, initialize, mapSequence, normalize, substringsToPattern, unicode_map };\n//# sourceMappingURL=index.js.map\n", "/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { asciifold } from '@orchidjs/unicode-variants';\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nconst getAttr = (obj, name) => {\n  if (!obj) return;\n  return obj[name];\n};\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nconst getAttrNesting = (obj, name) => {\n  if (!obj) return;\n  var part,\n      names = name.split(\".\");\n\n  while ((part = names.shift()) && (obj = obj[part]));\n\n  return obj;\n};\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\n\nconst scoreValue = (value, token, weight) => {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  if (token.regex == null) return 0;\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n};\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nconst propToArray = (obj, key) => {\n  var value = obj[key];\n  if (typeof value == 'function') return value;\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\n\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\nconst cmp = (a, b) => {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n};\n\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue };\n//# sourceMappingURL=utils.js.map\n", "/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { iterate, cmp, propToArray, getAttrNesting, getAttr, scoreValue } from './utils.js';\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue } from './utils.js';\nimport { escape_regex, getPattern } from '@orchidjs/unicode-variants';\nexport { getPattern } from '@orchidjs/unicode-variants';\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nclass Sifter {\n  // []|{};\n\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        if (this.settings.diacritics) {\n          regex = getPattern(word) || null;\n        } else {\n          regex = escape_regex(word);\n        }\n\n        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex ? new RegExp(regex, 'iu') : null,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {T.ScoreFn}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n  /**\n   * @returns {T.ScoreFn}\n   *\n   */\n\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var score,\n            sum = 0;\n\n        for (let token of tokens) {\n          score = scoreObject(token, data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var implicit_score,\n        sort_flds = [];\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n    if (typeof sort == 'function') {\n      return sort.bind(this);\n    }\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     */\n\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (let s of sort) {\n        if (search.query || s.field !== '$score') {\n          sort_flds.push(s);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (let fld of sort_flds) {\n        if (fld.field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      } // without a search.query, all items will have the same score\n\n    } else {\n      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n    } // build function\n\n\n    const sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    }\n\n    return function (a, b) {\n      var result, field;\n\n      for (let sort_fld of sort_flds) {\n        field = sort_fld.field;\n        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n        if (result) return result;\n      }\n\n      return 0;\n    };\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n      const fields = [];\n      options.fields.forEach(field => {\n        if (typeof field == 'string') {\n          field = {\n            field: field,\n            weight: 1\n          };\n        }\n\n        fields.push(field);\n        weights[field.field] = 'weight' in field ? field.weight : 1;\n      });\n      options.fields = fields;\n    }\n\n    return {\n      options: options,\n      query: query.toLowerCase().trim(),\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n    if (query.length) {\n      iterate(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate(self.items, (_, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    const fn_sort = self._getSortFunction(search);\n\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\nexport { Sifter };\n//# sourceMappingURL=sifter.js.map\n", "\nimport { asciifold } from '@orchidjs/unicode-variants';\nimport * as T from './types';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tif( token.regex == null ) return 0;\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\n\tif( typeof value == 'function' ) return value;\n\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n", "\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( isHtmlString(query) ){\n\t\tvar tpl = document.createElement('template');\n\t\ttpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn tpl.content.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const isHtmlString = (arg:any): boolean => {\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n", "/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0]!.length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tArray.from(node.childNodes).forEach(element => {\n\t\t\t\thighlightRecursive(element);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n", "export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n", "\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\t//closeAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-wrapper',\n\tcontrolClass: 'ts-control',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\n\tcopyClassesToDropdown: false,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n", "\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string|number):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string|number):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Add event helper\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n", "import defaults from './defaults';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings, RecursivePartial } from './types/index';\nimport { iterate } from '@orchidjs/sifter/lib/utils';\nimport { TomInput } from './types/index';\n\n\nexport default function getSettings( input:TomInput, settings_user:RecursivePartial<TomSettings>):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id:string, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\titerate(optgroup.children, (option)=>{\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t});\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\titerate(input.children,(child)=>{\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t});\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\titerate( values, (value) => {\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t});\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\titerate( settings_element.options, (opt) => {\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n", "\nimport MicroEvent from './contrib/microevent';\nimport MicroPlugin from './contrib/microplugin';\nimport { Sifter, iterate } from '@orchidjs/sifter';\nimport { escape_regex } from '@orchidjs/unicode-variants';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames, TomClearFilter, RecursivePartial } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight';\nimport * as constants from './constants';\nimport getSettings from './getSettings';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tisHtmlString,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\tpublic focus_node\t\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t!: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\n\tpublic isValid\t\t\t\t\t: boolean = true;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreHover\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\n\n\n\tconstructor( input_arg: string|TomInput, user_settings:RecursivePartial<TomSettings> ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\n\t\tthis.settings\t\t\t= settings;\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// option-dependent defaults\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof settings.hideSelected !== 'boolean') {\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tsettings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tsettings.createFilter = (value) => {\n\t\t\t\t\treturn this.settings.duplicates || !this.options[value];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t// Create all elements\n\t\tconst wrapper\t\t\t= getDom('<div>');\n\t\tconst control\t\t\t= getDom('<div>');\n\t\tconst dropdown\t\t\t= this._render('dropdown');\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\n\t\tconst inputMode\t\t\t= settings.mode;\n\n\t\tvar control_input: HTMLInputElement;\n\n\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\taddClasses(control,settings.controlClass);\n\t\tappend( wrapper, control );\n\n\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\t\tif( settings.copyClassesToDropdown ){\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\n\t\t// default controlInput\n\t\tif( isHtmlString(settings.controlInput) ){\n\t\t\tcontrol_input\t\t= getDom(settings.controlInput ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\titerate(attrs,(attr:string) => {\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcontrol_input.tabIndex = -1;\n\t\t\tcontrol.appendChild( control_input );\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t// dom element\n\t\t}else if( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control;\n\t\t}\n\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\t\tthis.control \t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\n\t\tthis.setup();\n\t}\n\n\t/**\n\t * set up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\t\tconst self = this;\n\t\tconst settings\t\t\t\t= self.settings;\n\t\tconst control_input\t\t\t= self.control_input;\n\t\tconst dropdown\t\t\t\t= self.dropdown;\n\t\tconst dropdown_content\t\t= self.dropdown_content;\n\t\tconst wrapper\t\t\t\t= self.wrapper;\n\t\tconst control\t\t\t\t= self.control;\n\t\tconst input\t\t\t\t\t= self.input;\n\t\tconst focus_node\t\t\t= self.focus_node;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\n\n\n\t\tsetAttr(dropdown_content,{\n\t\t\tid: listboxId\n\t\t});\n\n\t\tsetAttr(focus_node,{\n\t\t\trole:'combobox',\n\t\t\t'aria-haspopup':'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tconst label\t\t\t= document.querySelector(query);\n\t\tconst label_click\t= self.focus.bind(self);\n\t\tif( label ){\n\t\t\taddEvent(label,'click', label_click );\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!settings.splitOn && settings.delimiter) {\n\t\t\tsettings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( settings.load && settings.loadThrottle ){\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\n\t\t}\n\n\t\tself.control_input.type\t= input.type;\n\n\t\taddEvent(dropdown,'mousemove', () => {\n\t\t\tself.ignoreHover = false;\n\t\t});\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ) self.onOptionHover( e as MouseEvent, target_match );\n\n\t\t}, {capture:true});\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// keydown on focus_node for arrow_down/arrow_up\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\n\t\t// keypress and input/keyup\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t// Fixes bug #212 which is no covered by tests\n\t\t\tif( target == control_input && self.isOpen ){\n\t\t\t\tevt.stopPropagation();\n\n\t\t\t// clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t\t\t}else{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\n\t\t};\n\n\t\tconst win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('scroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t\tif( label ) label.removeEventListener('click',label_click);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\t\tself.sync(false);\n\t\tsettings.items = [];\n\t\tdelete settings.optgroups;\n\t\tdelete settings.options;\n\n\t\taddEvent(input,'invalid', () => {\n\t\t\tif( self.isValid ){\n\t\t\t\tself.isValid = false;\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}else{\n\t\t\tself.enable(); //sets tabIndex\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.preload();\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tthis.addOptions(options);\n\n\n\t\t// build optgroup table\n\t\titerate( optgroups, (optgroup:TomOption) => {\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t});\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Sync the Tom Select instance with the original input or select\n\t *\n\t */\n\tsync(get_settings:boolean=true):void{\n\t\tconst self\t\t= this;\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as RecursivePartial<TomSettings> ) : self.settings;\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\n\t\tself.setValue(settings.items||[],true); // silent prevents recursion\n\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isInputHidden || self.isLocked ){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif( !self.settings.splitOn ){\n\t\t\treturn;\n\t\t}\n\n\t\t// Wait for pasted text to be recognized in value\n\t\tsetTimeout(() => {\n\t\t\tvar pastedText = self.inputValue();\n\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\titerate( splitInput, (piece:string) => {\n\n\t\t\t\tconst hash = hash_key(piece);\n\t\t\t\tif( hash ){\n\t\t\t\t\tif( this.options[piece] ){\n\t\t\t\t\t\tself.addItem(piece);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tself.createItem(piece);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, 0);\n\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tself.ignoreHover = true;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tif( self.control_input.value == '' ){\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// don't submit form when searching for a value\n\t\t\t\t}else if( document.activeElement == self.control_input && self.isOpen ){\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonInput(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isLocked ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ):void{\n\t\tif( this.ignoreHover ) return;\n\t\tthis.setActiveOption(option, false);\n\t}\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif( self.settings.preload === 'focus' ) self.preload();\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e?:FocusEvent):void {\n\n\t\tif( document.hasFocus() === false ) return;\n\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return true if the given option can be selected\n\t *\n\t */\n\tcanSelect(option:HTMLElement|null):boolean{\n\n\t\tif( this.isOpen && option && this.dropdown_content.contains(option) ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\tpreload():void{\n\t\tvar classList = this.wrapper.classList;\n\t\tif( classList.contains('preloaded') ) return;\n\t\tclassList.add('preloaded');\n\t\tthis.load('');\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement,scroll:boolean=true ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tif( scroll ) this.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\t\tconst self = this;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\tconst activeItems = self.controlChildren();\n\n\t\tif( !activeItems.length ) return;\n\n\t\tself.hideInput();\n\t\tself.close();\n\n\t\tself.activeItems = activeItems;\n\t\titerate( activeItems, (item:TomItem) => {\n\t\t\tself.setActiveItemClass(item);\n\t\t});\n\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( !self.control.contains(self.control_input) ) return;\n\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\n\t\t}else{\n\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\n\t\t\t}\n\t\t\tself.isInputHidden = false;\n\t\t}\n\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\n\t\tif( self.control_input.offsetWidth ){\n\t\t\tself.control_input.focus();\n\t\t}else{\n\t\t\tself.focus_node.focus();\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.focus_node.blur();\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tresult.items = result.items.filter((item) => {\n\t\t\t\tlet hashed = hash_key(item.id);\n\t\t\t\treturn !(hashed && self.items.indexOf(hashed) !== -1 );\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_group;\n\t\tvar create;\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\n\n\t\tconst groups_order:string[]\t= [];\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tconst same_query\t\t\t= query === self.lastQuery || (query == '' && self.lastQuery == null);\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option\t\t\t= null;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\n\t\tif( same_query ){\n\t\t\tactive_option\t\t\t= self.activeOption;\n\n\t\t\tif( active_option ){\n\t\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t\t}\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet item\t\t\t= results.items[i];\n\t\t\tif( !item ) continue;\n\n\t\t\tlet opt_value\t\t= item.id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\n\t\t\tif( option === undefined ) continue;\n\n\t\t\tlet opt_hash\t\t= get_hash(opt_value);\n\t\t\tlet option_el\t\t= self.getOption(opt_hash,true) as HTMLElement;\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_hash) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\n\t\t\t\tlet group_fragment = groups[optgroup];\n\t\t\t\tif( group_fragment === undefined ){\n\t\t\t\t\tgroup_fragment = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\n\n\t\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\t\tif( self.activeOption && self.activeOption.dataset.value == opt_value ){\n\t\t\t\t\t\tif( active_group && active_group.dataset.group === optgroup.toString() ){\n\t\t\t\t\t\t\tactive_option = option_el;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_fragment.appendChild(option_el);\n\t\t\t\tgroups[optgroup] = group_fragment;\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif( self.settings.lockOptgroupOrder ){\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tconst grp_a\t\t= self.optgroups[a];\n\t\t\t\tconst grp_b\t\t= self.optgroups[b];\n\t\t\t\tconst a_order\t= grp_a && grp_a.$order || 0;\n\t\t\t\tconst b_order\t= grp_b && grp_b.$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\titerate( groups_order, (optgroup:string) => {\n\n\t\t\tlet group_fragment = groups[optgroup];\n\n\t\t\tif( !group_fragment || !group_fragment.children.length ) return;\n\n\t\t\tlet group_heading = self.optgroups[optgroup];\n\n\t\t\tif( group_heading !== undefined ){\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', group_heading);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, group_fragment );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:group_heading,options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, group_fragment );\n\t\t\t}\n\t\t});\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\titerate( results.tokens, (tok) => {\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\n\t\t// add loading message\n\t\tif( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// invalid query\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !active_option && self.settings.mode === 'single' && self.items[0] != undefined ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption( data:TomOption, user_created = false ):false|string {\n\t\tconst self = this;\n\n\t\t// @deprecated 1.7.7\n\t\t// use addOptions( array, user_created ) for adding multiple options\n\t\tif( Array.isArray(data) ){\n\t\t\tself.addOptions( data, user_created);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = hash_key(data[self.settings.valueField]);\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\n\t\tself.options[key]\t= data;\n\t\tself.lastQuery\t\t= null;\n\n\t\tif( user_created ){\n\t\t\tself.userOptions[key] = user_created;\n\t\t\tself.trigger('option_add', key, data);\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t/**\n\t * Add multiple options\n\t *\n\t */\n\taddOptions( data:TomOption[], user_created = false ):void{\n\t\titerate( data, (dat:TomOption) => {\n\t\t\tthis.addOption(dat, user_created);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.7.7\n\t */\n\tregisterOption( data:TomOption ):false|string {\n\t\treturn this.addOption(data);\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst value_old\t\t= hash_key(value);\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif( value_old === null ) return;\n\n\t\tconst data_old\t\t= self.options[value_old];\n\n\t\tif( data_old == undefined ) return;\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\n\n\n\t\tconst option\t\t= self.getOption(value_old);\n\t\tconst item\t\t\t= self.getItem(value_old);\n\n\n\t\tdata.$order = data.$order || data_old.$order;\n\t\tdelete self.options[value_old];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(value_old);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions(filter?:TomClearFilter ) {\n\n\t\tconst boundFilter = (filter || this.clearFilter).bind(this);\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\n\t\tconst selected:TomOptions\t= {};\n\t\titerate(this.options,(option:TomOption,key:string)=>{\n\t\t\tif( boundFilter(option,key as string) ){\n\t\t\t\tselected[key] = option;\n\t\t\t}\n\t\t});\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Used by clearOptions() to decide whether or not an option should be removed\n\t * Return true to keep an option, false to remove\n\t *\n\t */\n\tclearFilter(option:TomOption,value:string){\n\t\tif( this.items.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:undefined|null|boolean|string|number, create:boolean=false):null|HTMLElement {\n\n\t\tconst hashed = hash_key(value);\n\t\tif( hashed === null ) return null;\n\n\t\tconst option = this.options[hashed];\n\t\tif( option != undefined ){\n\n\t\t\tif( option.$div ){\n\t\t\t\treturn option.$div;\n\t\t\t}\n\n\t\t\tif( create ){\n\t\t\t\treturn this._render('option', option);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tconst last_item = items[items.length - 1];\n\t\titems.forEach(item => {\n\t\t\tself.isPending = (item !== last_item);\n\t\t\tself.addItem(item, silent);\n\t\t});\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change','dropdown_close'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending && !self.settings.closeAfterSelect ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.inputState();\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, callback:TomCreateCallback = ()=>{} ):boolean{\n\n\t\t// triggerDropdown parameter @deprecated 2.1.1\n\t\tif( arguments.length === 3 ){\n\t\t\tcallback = arguments[2];\n\t\t}\n\t\tif( typeof callback != 'function' ){\n\t\t\tcallback = () => {};\n\t\t}\n\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data,true);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tconst self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tconst isFull\t= self.isFull();\n\t\tconst isLocked\t= self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\n\t\tconst wrap_classList = self.wrapper.classList;\n\n\t\twrap_classList.toggle('focus', self.isFocused)\n\t\twrap_classList.toggle('disabled', self.isDisabled)\n\t\twrap_classList.toggle('required', self.isRequired)\n\t\twrap_classList.toggle('invalid', !self.isValid)\n\t\twrap_classList.toggle('locked', isLocked)\n\t\twrap_classList.toggle('full', isFull)\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.validity ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.isValid = self.input.validity.valid;\n\t\tself.isInvalid = !self.isValid;\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar option, label;\n\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\t\t\tconst has_selected:number\t\t\t\t= self.input.querySelectorAll('option:checked').length;\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\t// don't move empty option from top of list\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t\t\t\tif( option_el != empty_option ){\n\t\t\t\t\tself.input.append(option_el);\n\t\t\t\t}\n\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\t// marking empty option as selected can break validation\n\t\t\t\t// fixes https://github.com/orchidjs/tom-select/issues/303\n\t\t\t\tif( option_el != empty_option || has_selected > 0 ){\n\t\t\t\t\toption_el.selected = true;\n\t\t\t\t}\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\n\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tself.items.forEach((value)=>{\n\t\t\t\t\toption\t\t\t= self.options[value]!;\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\titerate(items,(item:TomItem)=>{\n\t\t\tself.removeItem(item,true);\n\t\t});\n\n\t\tself.showInput();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tconst self\t\t= this;\n\t\tconst caret\t\t= self.caretPos;\n\t\tconst target\t= self.control;\n\n\t\ttarget.insertBefore(el, target.children[caret] || null);\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\titerate(self.activeItems, (item:TomItem) => rm_items.push(item) );\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tlet rm_item;\n\t\t\tif( direction < 0 && selection.start === 0 && selection.length === 0 ){\n\t\t\t\trm_item = items[self.caretPos - 1];\n\n\t\t\t}else if( direction > 0 && selection.start === self.inputValue().length ){\n\t\t\t\trm_item = items[self.caretPos];\n\t\t\t}\n\n\t\t\tif( rm_item !== undefined ){\n\t\t\t\trm_items.push( rm_item );\n\t\t\t}\n\t\t}\n\n\t\tif( !self.shouldDelete(rm_items,e) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Return true if the items should be deleted\n\t */\n\tshouldDelete(items:TomItem[],evt:MouseEvent|KeyboardEvent){\n\n\t\tconst values = items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif( !values.length || (typeof this.settings.onDelete === 'function' && this.settings.onDelete(values,evt) === false) ){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else{\n\t\t\tself.moveCaret(direction);\n\t\t}\n\t}\n\n\tmoveCaret(direction:number){}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tthis.caretPos = this.items.length;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.focus_node.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tthis.close();\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.focus_node.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\t\tvar id, html;\n\t\tconst self = this;\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn null;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tconst value\t= get_hash(data[self.settings.valueField]);\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\n\t\t\t\t// update cache\n\t\t\t\tdata.$div = html;\n\t\t\t\tself.options[value] = data;\n\t\t\t}\n\n\n\t\t}\n\n\t\treturn html;\n\n\t}\n\n\n\t/**\n\t * Type guarded rendering\n\t *\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tconst html = this.render(templateName, data);\n\n\t\tif( html == null ){\n\t\t\tthrow 'HTMLElement expected';\n\t\t}\n\t\treturn html;\n\t}\n\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache():void{\n\n\t\titerate(this.options, (option:TomOption)=>{\n\t\t\tif( option.$div ){\n\t\t\t\toption.$div.remove();\n\t\t\t\tdelete option.$div;\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string){\n\n\t\tconst option_el\t\t\t= this.getOption(value);\n\t\tif( option_el ) option_el.remove();\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n", "/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\taddEvent(this.input,'change',()=>{\n\t\tthis.sync();\n\t});\n};\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input');\n\t\t\tif( checkbox instanceof HTMLInputElement ){\n\t\t\t\tif( option.classList.contains('selected') ){\n\t\t\t\t\tcheckbox.checked = true;\n\t\t\t\t}else{\n\t\t\t\t\tcheckbox.checked = false;\n\t\t\t\t}\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = (data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\n\t\t\tif( hashed && self.items.indexOf(hashed) > -1 ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\t// check when item added\n\tself.on('item_add',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data:CBOptions) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\n\t\t\tif( self.isDisabled ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.clear();\n\n\t\t\tif( self.settings.mode === 'single' && self.settings.allowEmptyOption ){\n\t\t\t\tself.addItem('');\n\t\t\t}\n\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n};\n", "/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\tif (self.settings.mode !== 'multi') return;\n\n\tvar orig_lock\t\t= self.lock;\n\tvar orig_unlock\t\t= self.unlock;\n\n\tself.hook('instead','lock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.disable();\n\t\treturn orig_lock.call(self);\n\t});\n\n\tself.hook('instead','unlock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.enable();\n\t\treturn orig_unlock.call(self);\n\t});\n\n\tself.on('initialize',()=>{\n\t\tvar $control = $(self.control).sortable({\n\t\t\titems: '[data-value]',\n\t\t\tforcePlaceholderSize: true,\n\t\t\tdisabled: self.isLocked,\n\t\t\tstart: (e, ui) => {\n\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t},\n\t\t\tstop: ()=>{\n\t\t\t\t$control.css({overflow: 'hidden'});\n\n\t\t\t\tvar values:string[] = [];\n\t\t\t\t$control.children('[data-value]').each(function(this:HTMLElement){\n\t\t\t\t\tif( this.dataset.value ) values.push(this.dataset.value);\n\t\t\t\t});\n\n\t\t\t\tself.setValue(values);\n\t\t\t}\n\t\t});\n\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\nimport { DHOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:DHOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data:DHOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { nodeIndex, removeClasses } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tself.hook('instead','setCaret',(new_pos:number) => {\n\n\t\tif( self.settings.mode === 'single' || !self.control.contains(self.control_input) ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t});\n\n\tself.hook('instead','moveCaret',(direction:number) => {\n\n\t\tif( !self.isFocused ) return;\n\n\t\t// move caret before or after selected items\n\t\tconst last_active\t\t= self.getLastActive(direction);\n\t\tif( last_active ){\n\t\t\tconst idx = nodeIndex(last_active);\n\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\tself.setActiveItem();\n\t\t\tremoveClasses(last_active as HTMLElement,'last-active');\n\n\t\t// move caret left or right of current position\n\t\t}else{\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t}\n\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { getDom, addClasses } from '../../vanilla';\nimport { addEvent, preventDefault } from '../../utils';\n\n\nexport default function(this:TomSelect) {\n\tconst self = this;\n\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('before','setup',()=>{\n\t\tself.focus_node\t\t= self.control;\n\n\t\taddClasses( self.control_input, 'dropdown-input');\n\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.append(self.control_input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t\t// set a placeholder in the select control\n\t\tconst placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />') as HTMLInputElement;\n\t\tplaceholder.placeholder = self.settings.placeholder ||'';\n\t\tself.control.append(placeholder);\n\n\t});\n\n\n\tself.on('initialize',()=>{\n\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t\t\tswitch( evt.keyCode ){\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tpreventDefault(evt,true);\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tself.focus_node.tabIndex = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn self.onKeyDown.call(self,evt);\n\t\t});\n\n\t\tself.on('blur',()=>{\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t\t});\n\n\n\t\t// give the control_input focus when the dropdown is open\n\t\tself.on('dropdown_open',() =>{\n\t\t\tself.control_input.focus();\n\t\t});\n\n\t\t// prevent onBlur from closing when focus is on the control_input\n\t\tconst orig_onBlur = self.onBlur;\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\n\t\t\treturn orig_onBlur.call(self);\n\t\t});\n\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\n\n\t\t// return focus to control to allow further keyboard input\n\t\tself.hook('before','close',() =>{\n\n\t\t\tif( !self.isOpen ) return;\n\t\t\tself.focus_node.focus({preventScroll: true});\n\t\t});\n\n\t});\n\n};\n", "/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\tvar self\t\t\t\t\t= this;\n\n\tself.on('initialize',()=>{\n\n\n\t\tvar test_input\t\t\t\t= document.createElement('span');\n\t\tvar control\t\t\t\t\t= self.control_input;\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\n\t\tself.wrapper.appendChild(test_input);\n\n\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\n\n\t\tfor( const style_name of transfer_styles ){\n\t\t\t// @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t\t\ttest_input.style[style_name] = control.style[style_name];\n\t\t}\n\n\n\t\t/**\n\t\t * Set the control width\n\t\t *\n\t\t */\n\t\tvar resize = ()=>{\n\t\t\ttest_input.textContent\t= control.value;\n\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\n\t\t};\n\n\t\tresize();\n\t\tself.on('update item_add item_remove',resize);\n\t\taddEvent(control,'input', resize );\n\t\taddEvent(control,'keyup', resize );\n\t\taddEvent(control,'blur', resize );\n\t\taddEvent(control,'update', resize );\n\t});\n\n};\n", "/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.call(self, evt);\n\t\t}\n\n\t\treturn false;\n\t});\n\n};\n", "/**\n * Plugin: \"no_active_items\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tthis.hook('instead','setActiveItem',() => {});\n\tthis.hook('instead','selectAll',() => {});\n};\n", "/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { parentMatch, nodeIndex } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\tvar orig_keydown = self.onKeyDown;\n\n\tself.hook('instead','onKeyDown',(evt:KeyboardEvent)=>{\n\t\tvar index, option, options, optgroup;\n\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\n\t\t\treturn orig_keydown.call(self,evt);\n\t\t}\n\n\t\tself.ignoreHover\t= true;\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\n\t\t\toptgroup = optgroup.previousSibling;\n\t\t} else {\n\t\t\toptgroup = optgroup.nextSibling;\n\t\t}\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\toptions\t\t\t\t= (<HTMLOptGroupElement>optgroup).querySelectorAll('[data-selectable]');\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ] as HTMLElement;\n\n\t\tif( option ){\n\t\t\tself.setActiveOption(option);\n\t\t}\n\n\t});\n\n};\n", "/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption, TomItem } from '../../types/index';\nimport { RBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:RBOptions) {\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\n\t\t\tvar close_button = getDom(html);\n\t\t\titem.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif( self.isLocked ) return;\n\t\t\t\tif( !self.shouldDelete([item],evt as MouseEvent) ) return;\n\n\t\t\t\tself.removeItem(item);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t\tself.inputState();\n\t\t\t});\n\n\t\t\treturn item;\n\t\t};\n\n\t});\n\n\n};\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext?:(option:TomOption)=>string,\n};\n\nexport default function(this:TomSelect, userOptions:TPluginOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttext: (option:TomOption) => {\n\t\t\treturn option[self.settings.labelField];\n\t\t}\n\t},userOptions);\n\n\tself.on('item_remove',function(value:string){\n\t\tif( !self.isFocused ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n};\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\n\n\tvar pagination:{[key:string]:any}\t= {};\n\tvar dropdown_content:HTMLElement;\n\tvar loading_more\t\t\t\t\t= false;\n\tvar load_more_opt:HTMLElement;\n\tvar default_values: string[]\t\t= [];\n\n\tif( !self.settings.shouldLoadMore ){\n\n\t\t// return true if additional results should be loaded\n\t\tself.settings.shouldLoadMore = ():boolean=>{\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent > 0.9 ){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif( self.activeOption ){\n\t\t\t\tvar selectable\t= self.selectable();\n\t\t\t\tvar index\t\t= Array.from(selectable).indexOf(self.activeOption);\n\t\t\t\tif( index >= (selectable.length-2) ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tconst canLoadMore = (query:string):boolean => {\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tconst clearFilter = (option:TomOption, value:string):boolean => {\n\t\tif( self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\n\t// set the next url that will be\n\tself.setNextUrl = (value:string,next_url:any):void => {\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = (query:string):any =>{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tpagination = {};\n\n\t\treturn self.settings.firstUrl.call(self,query);\n\t};\n\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions(clearFilter);\n\t\t}else if( load_more_opt ){\n\t\t\tconst first_option = options[0];\n\t\t\tif( first_option !== undefined ){\n\t\t\t\tload_more_opt.dataset.value\t\t= first_option[self.settings.valueField];\n\t\t\t}\n\t\t}\n\n\t\torig_loadCallback.call( self, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ){\n\t\t\t\toption.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t\t\t\tload_more_opt = option;\n\t\t\t}\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.on('initialize',()=>{\n\t\tdefault_values = Object.keys(self.options);\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:() => {\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:() =>{\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',()=>{\n\n\t\t\tif( !self.settings.shouldLoadMore.call(self) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n};\n", "import TomSelect from './tom-select';\n\nimport change_listener from './plugins/change_listener/plugin';\nimport checkbox_options from './plugins/checkbox_options/plugin';\nimport clear_button from './plugins/clear_button/plugin';\nimport drag_drop from './plugins/drag_drop/plugin';\nimport dropdown_header from './plugins/dropdown_header/plugin';\nimport caret_position from './plugins/caret_position/plugin';\nimport dropdown_input from './plugins/dropdown_input/plugin';\nimport input_autogrow from './plugins/input_autogrow/plugin';\nimport no_backspace_delete from './plugins/no_backspace_delete/plugin';\nimport no_active_items from './plugins/no_active_items/plugin';\nimport optgroup_columns from './plugins/optgroup_columns/plugin';\nimport remove_button from './plugins/remove_button/plugin';\nimport restore_on_backspace from './plugins/restore_on_backspace/plugin';\nimport virtual_scroll from './plugins/virtual_scroll/plugin';\n\nTomSelect.define('change_listener', change_listener);\nTomSelect.define('checkbox_options', checkbox_options);\nTomSelect.define('clear_button', clear_button);\nTomSelect.define('drag_drop', drag_drop);\nTomSelect.define('dropdown_header', dropdown_header);\nTomSelect.define('caret_position', caret_position);\nTomSelect.define('dropdown_input', dropdown_input);\nTomSelect.define('input_autogrow', input_autogrow);\nTomSelect.define('no_backspace_delete', no_backspace_delete);\nTomSelect.define('no_active_items', no_active_items);\nTomSelect.define('optgroup_columns', optgroup_columns);\nTomSelect.define('remove_button', remove_button);\nTomSelect.define('restore_on_backspace', restore_on_backspace);\nTomSelect.define('virtual_scroll', virtual_scroll);\n\nexport default TomSelect;\n", "/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = this._events[event] || [];\n\t\t\tevent_array.push(fct);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1){\n\t\t\t\tdelete this._events[event];\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst event_array = this._events[event];\n\t\t\tif( event_array === undefined ) return;\n\n\t\t\tevent_array.splice(event_array.indexOf(fct), 1);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = self._events[event];\n\t\t\tif( event_array === undefined ) return;\n\t\t\tevent_array.forEach(fct => {\n\t\t\t\tfct.apply(self, args );\n\t\t\t});\n\n\t\t});\n\t}\n};\n", "/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\nexport type TPluginItem = {name:string,options:{}};\nexport type TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n", "\nimport MicroEvent from './contrib/microevent';\nimport MicroPlugin from './contrib/microplugin';\nimport { Sifter, iterate } from '@orchidjs/sifter';\nimport { escape_regex } from '@orchidjs/unicode-variants';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames, TomClearFilter, RecursivePartial } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight';\nimport * as constants from './constants';\nimport getSettings from './getSettings';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tisHtmlString,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\tpublic focus_node\t\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t!: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\n\tpublic isValid\t\t\t\t\t: boolean = true;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreHover\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\n\n\n\tconstructor( input_arg: string|TomInput, user_settings:RecursivePartial<TomSettings> ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\n\t\tthis.settings\t\t\t= settings;\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// option-dependent defaults\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof settings.hideSelected !== 'boolean') {\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tsettings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tsettings.createFilter = (value) => {\n\t\t\t\t\treturn this.settings.duplicates || !this.options[value];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t// Create all elements\n\t\tconst wrapper\t\t\t= getDom('<div>');\n\t\tconst control\t\t\t= getDom('<div>');\n\t\tconst dropdown\t\t\t= this._render('dropdown');\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\n\t\tconst inputMode\t\t\t= settings.mode;\n\n\t\tvar control_input: HTMLInputElement;\n\n\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\taddClasses(control,settings.controlClass);\n\t\tappend( wrapper, control );\n\n\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\t\tif( settings.copyClassesToDropdown ){\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\n\t\t// default controlInput\n\t\tif( isHtmlString(settings.controlInput) ){\n\t\t\tcontrol_input\t\t= getDom(settings.controlInput ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\titerate(attrs,(attr:string) => {\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcontrol_input.tabIndex = -1;\n\t\t\tcontrol.appendChild( control_input );\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t// dom element\n\t\t}else if( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control;\n\t\t}\n\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\t\tthis.control \t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\n\t\tthis.setup();\n\t}\n\n\t/**\n\t * set up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\t\tconst self = this;\n\t\tconst settings\t\t\t\t= self.settings;\n\t\tconst control_input\t\t\t= self.control_input;\n\t\tconst dropdown\t\t\t\t= self.dropdown;\n\t\tconst dropdown_content\t\t= self.dropdown_content;\n\t\tconst wrapper\t\t\t\t= self.wrapper;\n\t\tconst control\t\t\t\t= self.control;\n\t\tconst input\t\t\t\t\t= self.input;\n\t\tconst focus_node\t\t\t= self.focus_node;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\n\n\n\t\tsetAttr(dropdown_content,{\n\t\t\tid: listboxId\n\t\t});\n\n\t\tsetAttr(focus_node,{\n\t\t\trole:'combobox',\n\t\t\t'aria-haspopup':'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tconst label\t\t\t= document.querySelector(query);\n\t\tconst label_click\t= self.focus.bind(self);\n\t\tif( label ){\n\t\t\taddEvent(label,'click', label_click );\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!settings.splitOn && settings.delimiter) {\n\t\t\tsettings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( settings.load && settings.loadThrottle ){\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\n\t\t}\n\n\t\tself.control_input.type\t= input.type;\n\n\t\taddEvent(dropdown,'mousemove', () => {\n\t\t\tself.ignoreHover = false;\n\t\t});\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ) self.onOptionHover( e as MouseEvent, target_match );\n\n\t\t}, {capture:true});\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// keydown on focus_node for arrow_down/arrow_up\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\n\t\t// keypress and input/keyup\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t// Fixes bug #212 which is no covered by tests\n\t\t\tif( target == control_input && self.isOpen ){\n\t\t\t\tevt.stopPropagation();\n\n\t\t\t// clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t\t\t}else{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\n\t\t};\n\n\t\tconst win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('scroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t\tif( label ) label.removeEventListener('click',label_click);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\t\tself.sync(false);\n\t\tsettings.items = [];\n\t\tdelete settings.optgroups;\n\t\tdelete settings.options;\n\n\t\taddEvent(input,'invalid', () => {\n\t\t\tif( self.isValid ){\n\t\t\t\tself.isValid = false;\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}else{\n\t\t\tself.enable(); //sets tabIndex\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.preload();\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tthis.addOptions(options);\n\n\n\t\t// build optgroup table\n\t\titerate( optgroups, (optgroup:TomOption) => {\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t});\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Sync the Tom Select instance with the original input or select\n\t *\n\t */\n\tsync(get_settings:boolean=true):void{\n\t\tconst self\t\t= this;\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as RecursivePartial<TomSettings> ) : self.settings;\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\n\t\tself.setValue(settings.items||[],true); // silent prevents recursion\n\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isInputHidden || self.isLocked ){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif( !self.settings.splitOn ){\n\t\t\treturn;\n\t\t}\n\n\t\t// Wait for pasted text to be recognized in value\n\t\tsetTimeout(() => {\n\t\t\tvar pastedText = self.inputValue();\n\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\titerate( splitInput, (piece:string) => {\n\n\t\t\t\tconst hash = hash_key(piece);\n\t\t\t\tif( hash ){\n\t\t\t\t\tif( this.options[piece] ){\n\t\t\t\t\t\tself.addItem(piece);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tself.createItem(piece);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, 0);\n\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tself.ignoreHover = true;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tif( self.control_input.value == '' ){\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// don't submit form when searching for a value\n\t\t\t\t}else if( document.activeElement == self.control_input && self.isOpen ){\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonInput(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isLocked ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ):void{\n\t\tif( this.ignoreHover ) return;\n\t\tthis.setActiveOption(option, false);\n\t}\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif( self.settings.preload === 'focus' ) self.preload();\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e?:FocusEvent):void {\n\n\t\tif( document.hasFocus() === false ) return;\n\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return true if the given option can be selected\n\t *\n\t */\n\tcanSelect(option:HTMLElement|null):boolean{\n\n\t\tif( this.isOpen && option && this.dropdown_content.contains(option) ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\tpreload():void{\n\t\tvar classList = this.wrapper.classList;\n\t\tif( classList.contains('preloaded') ) return;\n\t\tclassList.add('preloaded');\n\t\tthis.load('');\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement,scroll:boolean=true ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tif( scroll ) this.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\t\tconst self = this;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\tconst activeItems = self.controlChildren();\n\n\t\tif( !activeItems.length ) return;\n\n\t\tself.hideInput();\n\t\tself.close();\n\n\t\tself.activeItems = activeItems;\n\t\titerate( activeItems, (item:TomItem) => {\n\t\t\tself.setActiveItemClass(item);\n\t\t});\n\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( !self.control.contains(self.control_input) ) return;\n\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\n\t\t}else{\n\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\n\t\t\t}\n\t\t\tself.isInputHidden = false;\n\t\t}\n\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\n\t\tif( self.control_input.offsetWidth ){\n\t\t\tself.control_input.focus();\n\t\t}else{\n\t\t\tself.focus_node.focus();\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.focus_node.blur();\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tresult.items = result.items.filter((item) => {\n\t\t\t\tlet hashed = hash_key(item.id);\n\t\t\t\treturn !(hashed && self.items.indexOf(hashed) !== -1 );\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_group;\n\t\tvar create;\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\n\n\t\tconst groups_order:string[]\t= [];\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tconst same_query\t\t\t= query === self.lastQuery || (query == '' && self.lastQuery == null);\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option\t\t\t= null;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\n\t\tif( same_query ){\n\t\t\tactive_option\t\t\t= self.activeOption;\n\n\t\t\tif( active_option ){\n\t\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t\t}\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet item\t\t\t= results.items[i];\n\t\t\tif( !item ) continue;\n\n\t\t\tlet opt_value\t\t= item.id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\n\t\t\tif( option === undefined ) continue;\n\n\t\t\tlet opt_hash\t\t= get_hash(opt_value);\n\t\t\tlet option_el\t\t= self.getOption(opt_hash,true) as HTMLElement;\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_hash) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\n\t\t\t\tlet group_fragment = groups[optgroup];\n\t\t\t\tif( group_fragment === undefined ){\n\t\t\t\t\tgroup_fragment = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\n\n\t\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\t\tif( self.activeOption && self.activeOption.dataset.value == opt_value ){\n\t\t\t\t\t\tif( active_group && active_group.dataset.group === optgroup.toString() ){\n\t\t\t\t\t\t\tactive_option = option_el;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_fragment.appendChild(option_el);\n\t\t\t\tgroups[optgroup] = group_fragment;\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif( self.settings.lockOptgroupOrder ){\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tconst grp_a\t\t= self.optgroups[a];\n\t\t\t\tconst grp_b\t\t= self.optgroups[b];\n\t\t\t\tconst a_order\t= grp_a && grp_a.$order || 0;\n\t\t\t\tconst b_order\t= grp_b && grp_b.$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\titerate( groups_order, (optgroup:string) => {\n\n\t\t\tlet group_fragment = groups[optgroup];\n\n\t\t\tif( !group_fragment || !group_fragment.children.length ) return;\n\n\t\t\tlet group_heading = self.optgroups[optgroup];\n\n\t\t\tif( group_heading !== undefined ){\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', group_heading);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, group_fragment );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:group_heading,options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, group_fragment );\n\t\t\t}\n\t\t});\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\titerate( results.tokens, (tok) => {\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\n\t\t// add loading message\n\t\tif( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// invalid query\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !active_option && self.settings.mode === 'single' && self.items[0] != undefined ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption( data:TomOption, user_created = false ):false|string {\n\t\tconst self = this;\n\n\t\t// @deprecated 1.7.7\n\t\t// use addOptions( array, user_created ) for adding multiple options\n\t\tif( Array.isArray(data) ){\n\t\t\tself.addOptions( data, user_created);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = hash_key(data[self.settings.valueField]);\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\n\t\tself.options[key]\t= data;\n\t\tself.lastQuery\t\t= null;\n\n\t\tif( user_created ){\n\t\t\tself.userOptions[key] = user_created;\n\t\t\tself.trigger('option_add', key, data);\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t/**\n\t * Add multiple options\n\t *\n\t */\n\taddOptions( data:TomOption[], user_created = false ):void{\n\t\titerate( data, (dat:TomOption) => {\n\t\t\tthis.addOption(dat, user_created);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.7.7\n\t */\n\tregisterOption( data:TomOption ):false|string {\n\t\treturn this.addOption(data);\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst value_old\t\t= hash_key(value);\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif( value_old === null ) return;\n\n\t\tconst data_old\t\t= self.options[value_old];\n\n\t\tif( data_old == undefined ) return;\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\n\n\n\t\tconst option\t\t= self.getOption(value_old);\n\t\tconst item\t\t\t= self.getItem(value_old);\n\n\n\t\tdata.$order = data.$order || data_old.$order;\n\t\tdelete self.options[value_old];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(value_old);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions(filter?:TomClearFilter ) {\n\n\t\tconst boundFilter = (filter || this.clearFilter).bind(this);\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\n\t\tconst selected:TomOptions\t= {};\n\t\titerate(this.options,(option:TomOption,key:string)=>{\n\t\t\tif( boundFilter(option,key as string) ){\n\t\t\t\tselected[key] = option;\n\t\t\t}\n\t\t});\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Used by clearOptions() to decide whether or not an option should be removed\n\t * Return true to keep an option, false to remove\n\t *\n\t */\n\tclearFilter(option:TomOption,value:string){\n\t\tif( this.items.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:undefined|null|boolean|string|number, create:boolean=false):null|HTMLElement {\n\n\t\tconst hashed = hash_key(value);\n\t\tif( hashed === null ) return null;\n\n\t\tconst option = this.options[hashed];\n\t\tif( option != undefined ){\n\n\t\t\tif( option.$div ){\n\t\t\t\treturn option.$div;\n\t\t\t}\n\n\t\t\tif( create ){\n\t\t\t\treturn this._render('option', option);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tconst last_item = items[items.length - 1];\n\t\titems.forEach(item => {\n\t\t\tself.isPending = (item !== last_item);\n\t\t\tself.addItem(item, silent);\n\t\t});\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change','dropdown_close'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending && !self.settings.closeAfterSelect ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.inputState();\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, callback:TomCreateCallback = ()=>{} ):boolean{\n\n\t\t// triggerDropdown parameter @deprecated 2.1.1\n\t\tif( arguments.length === 3 ){\n\t\t\tcallback = arguments[2];\n\t\t}\n\t\tif( typeof callback != 'function' ){\n\t\t\tcallback = () => {};\n\t\t}\n\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data,true);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tconst self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tconst isFull\t= self.isFull();\n\t\tconst isLocked\t= self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\n\t\tconst wrap_classList = self.wrapper.classList;\n\n\t\twrap_classList.toggle('focus', self.isFocused)\n\t\twrap_classList.toggle('disabled', self.isDisabled)\n\t\twrap_classList.toggle('required', self.isRequired)\n\t\twrap_classList.toggle('invalid', !self.isValid)\n\t\twrap_classList.toggle('locked', isLocked)\n\t\twrap_classList.toggle('full', isFull)\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.validity ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.isValid = self.input.validity.valid;\n\t\tself.isInvalid = !self.isValid;\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar option, label;\n\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\t\t\tconst has_selected:number\t\t\t\t= self.input.querySelectorAll('option:checked').length;\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\t// don't move empty option from top of list\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t\t\t\tif( option_el != empty_option ){\n\t\t\t\t\tself.input.append(option_el);\n\t\t\t\t}\n\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\t// marking empty option as selected can break validation\n\t\t\t\t// fixes https://github.com/orchidjs/tom-select/issues/303\n\t\t\t\tif( option_el != empty_option || has_selected > 0 ){\n\t\t\t\t\toption_el.selected = true;\n\t\t\t\t}\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\n\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tself.items.forEach((value)=>{\n\t\t\t\t\toption\t\t\t= self.options[value]!;\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\titerate(items,(item:TomItem)=>{\n\t\t\tself.removeItem(item,true);\n\t\t});\n\n\t\tself.showInput();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tconst self\t\t= this;\n\t\tconst caret\t\t= self.caretPos;\n\t\tconst target\t= self.control;\n\n\t\ttarget.insertBefore(el, target.children[caret] || null);\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\titerate(self.activeItems, (item:TomItem) => rm_items.push(item) );\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tlet rm_item;\n\t\t\tif( direction < 0 && selection.start === 0 && selection.length === 0 ){\n\t\t\t\trm_item = items[self.caretPos - 1];\n\n\t\t\t}else if( direction > 0 && selection.start === self.inputValue().length ){\n\t\t\t\trm_item = items[self.caretPos];\n\t\t\t}\n\n\t\t\tif( rm_item !== undefined ){\n\t\t\t\trm_items.push( rm_item );\n\t\t\t}\n\t\t}\n\n\t\tif( !self.shouldDelete(rm_items,e) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Return true if the items should be deleted\n\t */\n\tshouldDelete(items:TomItem[],evt:MouseEvent|KeyboardEvent){\n\n\t\tconst values = items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif( !values.length || (typeof this.settings.onDelete === 'function' && this.settings.onDelete(values,evt) === false) ){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else{\n\t\t\tself.moveCaret(direction);\n\t\t}\n\t}\n\n\tmoveCaret(direction:number){}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tthis.caretPos = this.items.length;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.focus_node.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tthis.close();\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.focus_node.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\t\tvar id, html;\n\t\tconst self = this;\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn null;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tconst value\t= get_hash(data[self.settings.valueField]);\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\n\t\t\t\t// update cache\n\t\t\t\tdata.$div = html;\n\t\t\t\tself.options[value] = data;\n\t\t\t}\n\n\n\t\t}\n\n\t\treturn html;\n\n\t}\n\n\n\t/**\n\t * Type guarded rendering\n\t *\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tconst html = this.render(templateName, data);\n\n\t\tif( html == null ){\n\t\t\tthrow 'HTMLElement expected';\n\t\t}\n\t\treturn html;\n\t}\n\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache():void{\n\n\t\titerate(this.options, (option:TomOption)=>{\n\t\t\tif( option.$div ){\n\t\t\t\toption.$div.remove();\n\t\t\t\tdelete option.$div;\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string){\n\n\t\tconst option_el\t\t\t= this.getOption(value);\n\t\tif( option_el ) option_el.remove();\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n", "\nimport { asciifold } from '@orchidjs/unicode-variants';\nimport * as T from './types';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tif( token.regex == null ) return 0;\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\n\tif( typeof value == 'function' ) return value;\n\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n", "\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( isHtmlString(query) ){\n\t\tvar tpl = document.createElement('template');\n\t\ttpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn tpl.content.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const isHtmlString = (arg:any): boolean => {\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n", "/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0]!.length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tArray.from(node.childNodes).forEach(element => {\n\t\t\t\thighlightRecursive(element);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n", "export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n", "\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\t//closeAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-wrapper',\n\tcontrolClass: 'ts-control',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\n\tcopyClassesToDropdown: false,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n", "\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string|number):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string|number):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Add event helper\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n", "import defaults from './defaults';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings, RecursivePartial } from './types/index';\nimport { iterate } from '@orchidjs/sifter/lib/utils';\nimport { TomInput } from './types/index';\n\n\nexport default function getSettings( input:TomInput, settings_user:RecursivePartial<TomSettings>):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id:string, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\titerate(optgroup.children, (option)=>{\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t});\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\titerate(input.children,(child)=>{\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t});\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\titerate( values, (value) => {\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t});\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\titerate( settings_element.options, (opt) => {\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input');\n\t\t\tif( checkbox instanceof HTMLInputElement ){\n\t\t\t\tif( option.classList.contains('selected') ){\n\t\t\t\t\tcheckbox.checked = true;\n\t\t\t\t}else{\n\t\t\t\t\tcheckbox.checked = false;\n\t\t\t\t}\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = (data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\n\t\t\tif( hashed && self.items.indexOf(hashed) > -1 ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\t// check when item added\n\tself.on('item_add',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data:CBOptions) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\n\t\t\tif( self.isDisabled ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.clear();\n\n\t\t\tif( self.settings.mode === 'single' && self.settings.allowEmptyOption ){\n\t\t\t\tself.addItem('');\n\t\t\t}\n\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\nimport { DHOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:DHOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data:DHOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { getDom, addClasses } from '../../vanilla';\nimport { addEvent, preventDefault } from '../../utils';\n\n\nexport default function(this:TomSelect) {\n\tconst self = this;\n\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('before','setup',()=>{\n\t\tself.focus_node\t\t= self.control;\n\n\t\taddClasses( self.control_input, 'dropdown-input');\n\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.append(self.control_input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t\t// set a placeholder in the select control\n\t\tconst placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />') as HTMLInputElement;\n\t\tplaceholder.placeholder = self.settings.placeholder ||'';\n\t\tself.control.append(placeholder);\n\n\t});\n\n\n\tself.on('initialize',()=>{\n\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t\t\tswitch( evt.keyCode ){\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tpreventDefault(evt,true);\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tself.focus_node.tabIndex = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn self.onKeyDown.call(self,evt);\n\t\t});\n\n\t\tself.on('blur',()=>{\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t\t});\n\n\n\t\t// give the control_input focus when the dropdown is open\n\t\tself.on('dropdown_open',() =>{\n\t\t\tself.control_input.focus();\n\t\t});\n\n\t\t// prevent onBlur from closing when focus is on the control_input\n\t\tconst orig_onBlur = self.onBlur;\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\n\t\t\treturn orig_onBlur.call(self);\n\t\t});\n\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\n\n\t\t// return focus to control to allow further keyboard input\n\t\tself.hook('before','close',() =>{\n\n\t\t\tif( !self.isOpen ) return;\n\t\t\tself.focus_node.focus({preventScroll: true});\n\t\t});\n\n\t});\n\n};\n", "/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption, TomItem } from '../../types/index';\nimport { RBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:RBOptions) {\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\n\t\t\tvar close_button = getDom(html);\n\t\t\titem.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif( self.isLocked ) return;\n\t\t\t\tif( !self.shouldDelete([item],evt as MouseEvent) ) return;\n\n\t\t\t\tself.removeItem(item);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t\tself.inputState();\n\t\t\t});\n\n\t\t\treturn item;\n\t\t};\n\n\t});\n\n\n};\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\n\n\tvar pagination:{[key:string]:any}\t= {};\n\tvar dropdown_content:HTMLElement;\n\tvar loading_more\t\t\t\t\t= false;\n\tvar load_more_opt:HTMLElement;\n\tvar default_values: string[]\t\t= [];\n\n\tif( !self.settings.shouldLoadMore ){\n\n\t\t// return true if additional results should be loaded\n\t\tself.settings.shouldLoadMore = ():boolean=>{\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent > 0.9 ){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif( self.activeOption ){\n\t\t\t\tvar selectable\t= self.selectable();\n\t\t\t\tvar index\t\t= Array.from(selectable).indexOf(self.activeOption);\n\t\t\t\tif( index >= (selectable.length-2) ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tconst canLoadMore = (query:string):boolean => {\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tconst clearFilter = (option:TomOption, value:string):boolean => {\n\t\tif( self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\n\t// set the next url that will be\n\tself.setNextUrl = (value:string,next_url:any):void => {\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = (query:string):any =>{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tpagination = {};\n\n\t\treturn self.settings.firstUrl.call(self,query);\n\t};\n\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions(clearFilter);\n\t\t}else if( load_more_opt ){\n\t\t\tconst first_option = options[0];\n\t\t\tif( first_option !== undefined ){\n\t\t\t\tload_more_opt.dataset.value\t\t= first_option[self.settings.valueField];\n\t\t\t}\n\t\t}\n\n\t\torig_loadCallback.call( self, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ){\n\t\t\t\toption.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t\t\t\tload_more_opt = option;\n\t\t\t}\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.on('initialize',()=>{\n\t\tdefault_values = Object.keys(self.options);\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:() => {\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:() =>{\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',()=>{\n\n\t\t\tif( !self.settings.shouldLoadMore.call(self) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n};\n", "import TomSelect from 'tom-select/src/tom-select'\n\n/* eslint-disable camelcase */\nimport checkbox_options from 'tom-select/src/plugins/checkbox_options/plugin'\nimport clear_button from 'tom-select/src/plugins/clear_button/plugin'\nimport dropdown_header from 'tom-select/src/plugins/dropdown_header/plugin'\nimport dropdown_input from 'tom-select/src/plugins/dropdown_input/plugin'\nimport remove_button from 'tom-select/src/plugins/remove_button/plugin'\nimport virtual_scroll from 'tom-select/src/plugins/virtual_scroll/plugin'\n/* eslint-enable camelcase */\n\nTomSelect.define('checkbox_options', checkbox_options)\nTomSelect.define('clear_button', clear_button)\nTomSelect.define('dropdown_header', dropdown_header)\nTomSelect.define('dropdown_input', dropdown_input)\nTomSelect.define('remove_button', remove_button)\nTomSelect.define('virtual_scroll', virtual_scroll)\n\nwindow.TomSelect = require('tom-select');\n"],
  "mappings": "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",
  "names": ["arrayToPattern", "chars", "maxValueLength", "sequencePattern", "array", "hasDuplicates", "pattern", "prev_char_count", "prev_pattern", "char", "i", "setToPattern", "toArray", "escape_regex", "str", "longest", "value", "Math", "unicodeLength", "p", "Array", "allSubstrings", "input", "result", "start", "suba", "subresult", "tmp", "code_points", "accent_pat", "unicode_map", "multi_char_reg", "max_char_length", "latin_convert", "latin_condensed", "latin", "unicode", "convert_pat", "Object", "initialize", "_code_points", "generateMap", "normalize", "form", "asciifold", "_asciifold", "generator", "code_point_min", "code_point_max", "composed", "String", "folded", "code_point", "generateSets", "unicode_sets", "addMatching", "to_add", "folded_set", "patt", "multi_char", "set", "a", "b", "multi_char_patt", "mapSequence", "strings", "min_replacement", "chars_replaced", "substringsToPattern", "sub_pat", "sequencesToPattern", "sequences", "all", "sequence", "seq", "len", "j", "inSequences", "needle_seq", "needle_parts", "filter", "part", "needle_part", "filtered", "Sequence", "constructor", "add", "last", "length", "clone", "position", "last_piece", "parts", "JSON", "last_part", "last_substr", "clone_last_len", "end", "substr", "getPattern", "match", "match_str", "overlapping", "added_types", "new_seq", "old_seq", "getAttr", "obj", "name", "getAttrNesting", "names", "split", "shift", "scoreValue", "token", "weight", "score", "pos", "regex", "search", "string", "propToArray", "key", "isArray", "iterate", "object", "callback", "forEach", "hasOwnProperty", "cmp", "toLowerCase", "Sifter", "items", "settings", "diacritics", "tokenize", "query", "respect_word_boundaries", "weights", "tokens", "words", "field_regex", "RegExp", "keys", "map", "join", "word", "field_match", "field", "push", "getScoreFunction", "options", "prepareSearch", "_getScoreFunction", "token_count", "fields", "field_count", "getAttrFn", "scoreObject", "data", "sum", "conjunction", "getSortFunction", "_getSortFunction", "implicit_score", "sort_flds", "self", "sort", "sort_empty", "bind", "get_field", "id", "s", "fld", "unshift", "direction", "sort_fld", "optsUser", "assign", "trim", "total", "nesting", "fn_score", "item", "_", "fn_sort", "limit", "slice", "arrayToPattern", "chars", "filter", "Boolean", "length", "maxValueLength", "join", "sequencePattern", "array", "hasDuplicates", "pattern", "prev_char_count", "prev_pattern", "forEach", "char", "i", "setToPattern", "toArray", "Set", "size", "escape_regex", "str", "replace", "reduce", "longest", "value", "Math", "max", "unicodeLength", "p", "Array", "from", "allSubstrings", "input", "result", "start", "substring", "suba", "subresult", "tmp", "slice", "charAt", "push", "unshift", "code_points", "accent_pat", "unicode_map", "multi_char_reg", "max_char_length", "latin_convert", "latin_condensed", "latin", "unicode", "convert_pat", "RegExp", "Object", "keys", "initialize", "_code_points", "undefined", "generateMap", "normalize", "form", "asciifold", "_asciifold", "toLowerCase", "generator", "code_point_min", "code_point_max", "composed", "String", "fromCharCode", "folded", "code_point", "generateSets", "unicode_sets", "addMatching", "to_add", "folded_set", "patt", "match", "add", "multi_char", "set", "sort", "a", "b", "multi_char_patt", "mapSequence", "strings", "min_replacement", "chars_replaced", "map", "substringsToPattern", "sub_pat", "sequencesToPattern", "sequences", "all", "sequence", "seq", "len", "j", "substrs", "inSequences", "needle_seq", "end", "needle_parts", "parts", "part", "needle_part", "substr", "filtered", "Sequence", "constructor", "min", "last", "clone", "position", "last_piece", "JSON", "parse", "stringify", "last_part", "pop", "last_substr", "clone_last_len", "getPattern", "match_str", "overlapping", "added_types", "has", "new_seq", "old_seq", "forEvents", "events", "callback", "split", "forEach", "event", "MicroEvent", "constructor", "_events", "on", "fct", "event_array", "push", "off", "n", "arguments", "length", "undefined", "splice", "indexOf", "trigger", "args", "self", "apply", "MicroPlugin", "Interface", "plugins", "names", "settings", "requested", "loaded", "define", "name", "fn", "initializePlugins", "key", "queue", "Array", "isArray", "plugin", "options", "hasOwnProperty", "shift", "require", "loadPlugin", "Error", "arrayToPattern", "chars", "maxValueLength", "sequencePattern", "array", "hasDuplicates", "pattern", "prev_char_count", "prev_pattern", "char", "i", "setToPattern", "toArray", "escape_regex", "str", "longest", "value", "unicodeLength", "p", "allSubstrings", "input", "result", "start", "subresult", "tmp", "code_points", "accent_pat", "unicode_map", "multi_char_reg", "max_char_length", "latin_convert", "latin_condensed", "latin", "unicode", "convert_pat", "initialize", "_code_points", "generateMap", "normalize", "form", "asciifold", "_asciifold", "generator", "code_point_min", "code_point_max", "composed", "folded", "generateSets", "unicode_sets", "addMatching", "to_add", "folded_set", "patt", "multi_char", "set", "a", "b", "multi_char_patt", "mapSequence", "strings", "min_replacement", "chars_replaced", "substringsToPattern", "sub_pat", "sequencesToPattern", "sequences", "all", "sequence", "seq", "len", "j", "inSequences", "needle_seq", "needle_parts", "filter", "part", "needle_part", "Sequence", "position", "last_piece", "clone", "parts", "last_part", "last_substr", "clone_last_len", "getPattern", "match", "match_str", "overlapping", "added_types", "new_seq", "old_seq", "getAttr", "obj", "getAttrNesting", "scoreValue", "token", "weight", "score", "pos", "propToArray", "iterate", "object", "cmp", "Sifter", "items", "query", "respect_word_boundaries", "weights", "tokens", "words", "field_regex", "word", "field_match", "field", "regex", "search", "token_count", "fields", "field_count", "getAttrFn", "scoreObject", "data", "sum", "implicit_score", "sort_flds", "sort", "get_field", "s", "fld", "sort_fld", "optsUser", "fn_score", "item", "id", "_", "fn_sort", "getDom", "jquery", "HTMLElement", "isHtmlString", "tpl", "document", "createElement", "innerHTML", "trim", "content", "firstChild", "querySelector", "arg", "escapeQuery", "replace", "triggerEvent", "dom_el", "event_name", "createEvent", "initEvent", "dispatchEvent", "applyCSS", "css", "Object", "assign", "style", "addClasses", "elmts", "classes", "norm_classes", "classesArray", "castAsArray", "map", "el", "cls", "classList", "add", "removeClasses", "remove", "_classes", "concat", "Boolean", "parentMatch", "target", "selector", "wrapper", "contains", "matches", "parentNode", "getTail", "list", "direction", "isEmptyObject", "keys", "nodeIndex", "amongst", "nodeName", "previousElementSibling", "setAttr", "attrs", "val", "attr", "removeAttribute", "setAttribute", "replaceNode", "existing", "replacement", "replaceChild", "highlight", "element", "RegExp", "highlightText", "node", "spannode", "className", "middlebit", "splitText", "index", "middleclone", "cloneNode", "appendChild", "highlightChildren", "nodeType", "childNodes", "test", "tagName", "from", "highlightRecursive", "removeHighlight", "elements", "querySelectorAll", "prototype", "call", "parent", "KEY_A", "KEY_RETURN", "KEY_ESC", "KEY_LEFT", "KEY_UP", "KEY_RIGHT", "KEY_DOWN", "KEY_BACKSPACE", "KEY_DELETE", "KEY_TAB", "KEY_SHORTCUT", "navigator", "userAgent", "defaults", "optgroups", "delimiter", "splitOn", "persist", "diacritics", "create", "createOnBlur", "createFilter", "openOnFocus", "shouldOpen", "maxOptions", "maxItems", "hideSelected", "duplicates", "addPrecedence", "selectOnTab", "preload", "allowEmptyOption", "loadThrottle", "loadingClass", "dataAttr", "optgroupField", "valueField", "labelField", "disabledField", "optgroupLabelField", "optgroupValueField", "lockOptgroupOrder", "sortField", "searchField", "searchConjunction", "mode", "wrapperClass", "controlClass", "dropdownClass", "dropdownContentClass", "itemClass", "optionClass", "dropdownParent", "controlInput", "copyClassesToDropdown", "placeholder", "hidePlaceholder", "shouldLoad", "render", "hash_key", "get_hash", "escape_html", "loadDebounce", "delay", "timeout", "loading", "Math", "max", "clearTimeout", "setTimeout", "loadedSearches", "debounce_events", "types", "type", "event_args", "getSelection", "selectionStart", "selectionEnd", "preventDefault", "evt", "stop", "stopPropagation", "addEvent", "addEventListener", "isKeyDown", "key_name", "count", "altKey", "ctrlKey", "shiftKey", "metaKey", "getId", "existing_id", "getAttribute", "addSlashes", "append", "getSettings", "settings_user", "attr_data", "field_label", "field_value", "field_disabled", "field_optgroup", "field_optgroup_label", "field_optgroup_value", "tag_name", "toLowerCase", "option", "textContent", "settings_element", "init_select", "optionsMap", "group_count", "readData", "dataset", "json", "JSON", "parse", "addOption", "group", "arr", "option_data", "disabled", "$option", "selected", "addGroup", "optgroup", "optgroup_data", "children", "hasAttribute", "child", "init_textbox", "data_raw", "opt", "values", "instance_i", "TomSelect", "input_arg", "user_settings", "control_input", "dropdown", "control", "dropdown_content", "focus_node", "order", "tabIndex", "is_select_tag", "rtl", "inputId", "_destroy", "sifter", "isOpen", "isDisabled", "isRequired", "isInvalid", "isValid", "isLocked", "isFocused", "isInputHidden", "isSetup", "ignoreFocus", "ignoreHover", "hasOptions", "currentResults", "lastValue", "caretPos", "activeOption", "activeItems", "userOptions", "dir", "tomselect", "computedStyle", "window", "getComputedStyle", "getPropertyValue", "required", "setupCallbacks", "setupTemplates", "_render", "inputMode", "setup", "passive_event", "passive", "listboxId", "role", "control_id", "label", "label_click", "focus", "bind", "for", "label_id", "width", "classes_plugins", "join", "multiple", "load", "e", "target_match", "onOptionHover", "capture", "onOptionSelect", "onItemSelect", "onClick", "onKeyDown", "onKeyPress", "onInput", "onBlur", "onFocus", "onPaste", "doc_mousedown", "composedPath", "blur", "inputState", "win_scroll", "positionDropdown", "removeEventListener", "revertSettings", "insertAdjacentElement", "sync", "refreshState", "updateOriginalInput", "refreshItems", "close", "disable", "enable", "onChange", "setupOptions", "addOptions", "registerOptionGroup", "templates", "escape", "callbacks", "get_settings", "setValue", "lastQuery", "clearActiveItems", "onMouseDown", "pastedText", "inputValue", "splitInput", "piece", "addItem", "createItem", "character", "String", "fromCharCode", "keyCode", "which", "constants", "selectAll", "open", "next", "getAdjacent", "setActiveOption", "prev", "canSelect", "activeElement", "advanceSelection", "deleteSelection", "refreshOptions", "wasFocused", "showInput", "hasFocus", "deactivate", "setActiveItem", "setCaret", "parentElement", "closeAfterSelect", "canLoad", "loadCallback", "clearActiveOption", "setTextboxValue", "changed", "getValue", "silent", "clear", "addItems", "setMaxItems", "eventName", "begin", "end", "swap", "last", "getLastActive", "setActiveItemClass", "removeActiveItem", "hideInput", "last_active", "idx", "scroll", "scrollToOption", "behavior", "height_menu", "clientHeight", "scrollTop", "height_item", "offsetHeight", "y", "getBoundingClientRect", "top", "scrollBehavior", "controlChildren", "toggle", "offsetWidth", "getScoreFunction", "getSearchOptions", "conjunction", "nesting", "calculateScore", "hashed", "triggerDropdown", "k", "html", "has_create_option", "active_group", "groups", "groups_order", "same_query", "results", "active_option", "show_dropdown", "closest", "min", "opt_value", "opt_hash", "option_el", "getOption", "includes", "group_fragment", "createDocumentFragment", "$id", "toString", "grp_a", "grp_b", "a_order", "$order", "b_order", "group_heading", "group_options", "header", "group_html", "tok", "add_template", "template", "insertBefore", "canCreate", "active_index", "selectable", "user_created", "dat", "registerOption", "addOptionGroup", "hashed_id", "removeOptionGroup", "clearCache", "clearOptionGroups", "updateOption", "item_new", "index_item", "value_old", "value_new", "data_old", "getItem", "uncacheValue", "option_new", "removeOption", "removeItem", "clearOptions", "boundFilter", "clearFilter", "$div", "x", "last_item", "isPending", "wasFull", "isFull", "insertAtCaret", "caret", "output", "lock", "created", "unlock", "refreshValidityState", "wrap_classList", "validity", "valid", "opts", "empty_option", "AddSelected", "has_selected", "reuse_opt", "visibility", "display", "context", "rect", "scrollY", "left", "scrollX", "selection", "tail", "rm_items", "rm_item", "shouldDelete", "pop", "onDelete", "adjacent", "nextElementSibling", "moveCaret", "new_pos", "destroy", "templateName", "hook", "when", "method", "new_fn", "orig_method", "result_new", "change_listener", "checkbox_options", "orig_onOptionSelect", "UpdateCheckbox", "checkbox", "HTMLInputElement", "checked", "orig_render_option", "rendered", "prepend", "clear_button", "title", "button", "drag_drop", "$", "sortable", "orig_lock", "orig_unlock", "$control", "forcePlaceholderSize", "ui", "helper", "overflow", "each", "dropdown_header", "headerClass", "titleRowClass", "labelClass", "closeClass", "close_link", "caret_position", "dropdown_input", "div", "orig_onBlur", "relatedTarget", "preventScroll", "input_autogrow", "test_input", "cssText", "transfer_styles", "style_name", "resize", "clientWidth", "no_backspace_delete", "orig_deleteSelection", "no_active_items", "optgroup_columns", "orig_keydown", "previousSibling", "nextSibling", "remove_button", "orig_render_item", "close_button", "restore_on_backspace", "text", "virtual_scroll", "orig_canLoad", "orig_clearActiveOption", "orig_loadCallback", "pagination", "loading_more", "load_more_opt", "default_values", "shouldLoadMore", "scroll_percent", "scrollHeight", "firstUrl", "canLoadMore", "setNextUrl", "next_url", "getUrl", "first_option", "no_more_results", "forEvents", "events", "callback", "event", "MicroEvent", "fct", "event_array", "n", "args", "self", "MicroPlugin", "Interface", "name", "fn", "plugins", "key", "self", "queue", "plugin", "import_sifter", "import_unicode_variants", "import_unicode_variants", "iterate", "object", "callback", "key", "getDom", "query", "isHtmlString", "tpl", "arg", "escapeQuery", "triggerEvent", "dom_el", "event_name", "event", "applyCSS", "css", "addClasses", "elmts", "classes", "norm_classes", "classesArray", "castAsArray", "el", "cls", "removeClasses", "args", "iterate", "_classes", "parentMatch", "target", "selector", "wrapper", "getTail", "list", "direction", "isEmptyObject", "obj", "nodeIndex", "amongst", "i", "setAttr", "attrs", "val", "attr", "replaceNode", "existing", "replacement", "highlight", "element", "regex", "highlightText", "node", "match", "spannode", "middlebit", "middleclone", "replaceNode", "highlightChildren", "highlightRecursive", "removeHighlight", "el", "elements", "parent", "IS_MAC", "KEY_SHORTCUT", "defaults_default", "query", "hash_key", "value", "get_hash", "escape_html", "str", "loadDebounce", "fn", "delay", "timeout", "callback", "self", "debounce_events", "types", "type", "trigger", "event_args", "getSelection", "input", "preventDefault", "evt", "stop", "addEvent", "target", "options", "isKeyDown", "key_name", "count", "getId", "el", "id", "existing_id", "addSlashes", "append", "parent", "node", "getSettings", "input", "settings_user", "settings", "defaults_default", "attr_data", "field_label", "field_value", "field_disabled", "field_optgroup", "field_optgroup_label", "field_optgroup_value", "tag_name", "placeholder", "option", "settings_element", "init_select", "tagName", "options", "optionsMap", "group_count", "readData", "el", "data", "json", "addOption", "group", "value", "hash_key", "arr", "option_data", "addGroup", "optgroup", "id", "optgroup_data", "iterate", "child", "init_textbox", "data_raw", "opt", "values", "instance_i", "TomSelect", "MicroPlugin", "MicroEvent", "input_arg", "user_settings", "dir", "input", "getDom", "computedStyle", "settings", "getSettings", "getId", "filter", "value", "wrapper", "control", "dropdown", "dropdown_content", "classes", "inputMode", "control_input", "addClasses", "append", "isHtmlString", "attrs", "attr", "setAttr", "self", "focus_node", "passive_event", "listboxId", "control_id", "query", "escapeQuery", "label", "label_click", "addEvent", "label_id", "classes_plugins", "loadDebounce", "e", "target_match", "parentMatch", "evt", "option", "preventDefault", "doc_mousedown", "target", "win_scroll", "options", "optgroups", "optgroup", "field_label", "field_optgroup", "templates", "data", "escape", "key", "fn", "callbacks", "get_settings", "triggerEvent", "pastedText", "splitInput", "piece", "hash_key", "character", "isKeyDown", "KEY_SHORTCUT", "next", "prev", "wasFocused", "deactivate", "item", "callback", "removeClasses", "classList", "changed", "silent", "events", "debounce_events", "eventName", "i", "begin", "end", "swap", "last", "last_active", "idx", "scroll", "behavior", "content", "height_menu", "scrollTop", "height_item", "y", "activeItems", "sort", "result", "calculateScore", "hashed", "triggerDropdown", "j", "k", "n", "html", "has_create_option", "active_group", "create", "groups", "groups_order", "same_query", "results", "active_option", "show_dropdown", "opt_value", "opt_hash", "get_hash", "option_el", "group_fragment", "a", "b", "grp_a", "grp_b", "a_order", "b_order", "group_heading", "group_options", "header", "group_html", "removeHighlight", "tok", "highlight", "add_template", "template", "active_index", "user_created", "dat", "id", "hashed_id", "item_new", "index_item", "value_old", "value_new", "data_old", "option_new", "replaceNode", "boundFilter", "selected", "direction", "type", "all", "addSlashes", "values", "items", "x", "last_item", "wasFull", "nodeIndex", "caret", "output", "created", "isFull", "isLocked", "wrap_classList", "isEmptyObject", "opts", "empty_option", "AddSelected", "escape_html", "has_selected", "reuse_opt", "applyCSS", "setTextboxValue", "trigger", "context", "rect", "top", "left", "el", "selection", "tail", "getSelection", "rm_items", "getTail", "rm_item", "adjacent", "new_pos", "revertSettings", "templateName", "when", "method", "new_fn", "orig_method", "result_new", "plugin_default", "self", "orig_onOptionSelect", "UpdateCheckbox", "option", "checkbox", "orig_render_option", "data", "escape_html", "rendered", "getDom", "evt", "preventDefault", "hashed", "hash_key", "value", "plugin_default", "userOptions", "self", "options", "data", "button", "getDom", "evt", "plugin_default", "userOptions", "self", "options", "data", "header", "getDom", "close_link", "evt", "preventDefault", "plugin_default", "self", "addClasses", "div", "getDom", "placeholder", "evt", "preventDefault", "orig_onBlur", "addEvent", "plugin_default", "userOptions", "options", "self", "html", "escape_html", "orig_render_item", "data", "escape", "item", "getDom", "close_button", "addEvent", "evt", "preventDefault", "plugin_default", "self", "orig_canLoad", "orig_clearActiveOption", "orig_loadCallback", "pagination", "dropdown_content", "loading_more", "load_more_opt", "default_values", "selectable", "index", "canLoadMore", "query", "clearFilter", "option", "value", "next_url", "options", "optgroups", "first_option", "addClasses", "TomSelect", "plugin_default"]
}
